import "strings"

providers = {
	"aws": {
		"alias": "",
		"config": {
			"assume_role": [
				{
					"role_arn": {
						"constant_value": "arn:aws:iam::630953916312:role/bkutfeassumeadmin",
					},
				},
			],
			"region": {
				"constant_value": "us-east-1",
			},
		},
		"module_address":      "",
		"name":                "aws",
		"provider_config_key": "aws",
		"version_constraint":  "~> 3.52.0",
	},
	"template": {
		"alias":               "",
		"config":              {},
		"module_address":      "",
		"name":                "template",
		"provider_config_key": "template",
		"version_constraint":  "~> 2.2.0",
	},
}

resources = {
	"module.bkun-dgea-check-data-migration-emr-cluster-availability.aws_iam_policy.ec2_policy": {
		"address": "module.bkun-dgea-check-data-migration-emr-cluster-availability.aws_iam_policy.ec2_policy",
		"config": {
			"description": {
				"constant_value": "This policy allows lambda function to access emr",
			},
			"name": {
				"references": [
					"var.env",
				],
			},
			"policy": {
				"references": [
					"var.ec2_policy_path",
					"data.aws_caller_identity.current.account_id",
					"data.aws_caller_identity.current",
					"data.aws_region.current.name",
					"data.aws_region.current",
				],
			},
		},
		"count":               {},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "module.bkun-dgea-check-data-migration-emr-cluster-availability",
		"name":                "ec2_policy",
		"provider_config_key": "module.bkun-dgea-check-data-migration-emr-cluster-availability:aws",
		"provisioners":        [],
		"type":                "aws_iam_policy",
	},
	"module.bkun-dgea-check-data-migration-emr-cluster-availability.aws_iam_policy.emr_policy": {
		"address": "module.bkun-dgea-check-data-migration-emr-cluster-availability.aws_iam_policy.emr_policy",
		"config": {
			"description": {
				"constant_value": "This policy allows lambda function to check available emr cluster for data migration",
			},
			"name": {
				"references": [
					"var.env",
				],
			},
			"policy": {
				"references": [
					"var.emr_policy_path",
				],
			},
		},
		"count":               {},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "module.bkun-dgea-check-data-migration-emr-cluster-availability",
		"name":                "emr_policy",
		"provider_config_key": "module.bkun-dgea-check-data-migration-emr-cluster-availability:aws",
		"provisioners":        [],
		"type":                "aws_iam_policy",
	},
	"module.bkun-dgea-check-data-migration-emr-cluster-availability.aws_iam_role.iam_for_lambda": {
		"address": "module.bkun-dgea-check-data-migration-emr-cluster-availability.aws_iam_role.iam_for_lambda",
		"config": {
			"assume_role_policy": {
				"constant_value": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Action\": \"sts:AssumeRole\",\n      \"Principal\": {\n        \"Service\": \"lambda.amazonaws.com\"\n      },\n      \"Effect\": \"Allow\",\n      \"Sid\": \"\"\n    }\n  ]\n}\n",
			},
			"description": {
				"constant_value": "Created this role to for lambda function to check EMR cluster availability",
			},
			"name": {
				"references": [
					"var.env",
				],
			},
			"tags": {
				"references": [
					"var.tags",
					"var.env",
				],
			},
		},
		"count":               {},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "module.bkun-dgea-check-data-migration-emr-cluster-availability",
		"name":                "iam_for_lambda",
		"provider_config_key": "module.bkun-dgea-check-data-migration-emr-cluster-availability:aws",
		"provisioners":        [],
		"type":                "aws_iam_role",
	},
	"module.bkun-dgea-check-data-migration-emr-cluster-availability.aws_iam_role_policy_attachment.ec2-attach": {
		"address": "module.bkun-dgea-check-data-migration-emr-cluster-availability.aws_iam_role_policy_attachment.ec2-attach",
		"config": {
			"policy_arn": {
				"references": [
					"aws_iam_policy.ec2_policy.arn",
					"aws_iam_policy.ec2_policy",
				],
			},
			"role": {
				"references": [
					"aws_iam_role.iam_for_lambda.name",
					"aws_iam_role.iam_for_lambda",
				],
			},
		},
		"count":               {},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "module.bkun-dgea-check-data-migration-emr-cluster-availability",
		"name":                "ec2-attach",
		"provider_config_key": "module.bkun-dgea-check-data-migration-emr-cluster-availability:aws",
		"provisioners":        [],
		"type":                "aws_iam_role_policy_attachment",
	},
	"module.bkun-dgea-check-data-migration-emr-cluster-availability.aws_iam_role_policy_attachment.emr-attach": {
		"address": "module.bkun-dgea-check-data-migration-emr-cluster-availability.aws_iam_role_policy_attachment.emr-attach",
		"config": {
			"policy_arn": {
				"references": [
					"aws_iam_policy.emr_policy.arn",
					"aws_iam_policy.emr_policy",
				],
			},
			"role": {
				"references": [
					"aws_iam_role.iam_for_lambda.name",
					"aws_iam_role.iam_for_lambda",
				],
			},
		},
		"count":               {},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "module.bkun-dgea-check-data-migration-emr-cluster-availability",
		"name":                "emr-attach",
		"provider_config_key": "module.bkun-dgea-check-data-migration-emr-cluster-availability:aws",
		"provisioners":        [],
		"type":                "aws_iam_role_policy_attachment",
	},
	"module.bkun-dgea-check-data-migration-emr-cluster-availability.data.aws_caller_identity.current": {
		"address":             "module.bkun-dgea-check-data-migration-emr-cluster-availability.data.aws_caller_identity.current",
		"config":              {},
		"count":               {},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "data",
		"module_address":      "module.bkun-dgea-check-data-migration-emr-cluster-availability",
		"name":                "current",
		"provider_config_key": "module.bkun-dgea-check-data-migration-emr-cluster-availability:aws",
		"provisioners":        [],
		"type":                "aws_caller_identity",
	},
	"module.bkun-dgea-check-data-migration-emr-cluster-availability.data.aws_region.current": {
		"address":             "module.bkun-dgea-check-data-migration-emr-cluster-availability.data.aws_region.current",
		"config":              {},
		"count":               {},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "data",
		"module_address":      "module.bkun-dgea-check-data-migration-emr-cluster-availability",
		"name":                "current",
		"provider_config_key": "module.bkun-dgea-check-data-migration-emr-cluster-availability:aws",
		"provisioners":        [],
		"type":                "aws_region",
	},
	"module.bkun-dgea-check-data-migration-emr-cluster-availability.module.bkun-dgea-check-data-migration-emr-cluster-availability.aws_cloudwatch_log_group.this": {
		"address": "module.bkun-dgea-check-data-migration-emr-cluster-availability.module.bkun-dgea-check-data-migration-emr-cluster-availability.aws_cloudwatch_log_group.this",
		"config": {
			"name": {
				"references": [
					"var.name",
				],
			},
			"retention_in_days": {
				"references": [
					"var.cloudwatch_log_retention_days",
				],
			},
		},
		"count":               {},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "module.bkun-dgea-check-data-migration-emr-cluster-availability.module.bkun-dgea-check-data-migration-emr-cluster-availability",
		"name":                "this",
		"provider_config_key": "module.bkun-dgea-check-data-migration-emr-cluster-availability.module.bkun-dgea-check-data-migration-emr-cluster-availability:aws",
		"provisioners":        [],
		"type":                "aws_cloudwatch_log_group",
	},
	"module.bkun-dgea-check-data-migration-emr-cluster-availability.module.bkun-dgea-check-data-migration-emr-cluster-availability.aws_lambda_function.this": {
		"address": "module.bkun-dgea-check-data-migration-emr-cluster-availability.module.bkun-dgea-check-data-migration-emr-cluster-availability.aws_lambda_function.this",
		"config": {
			"function_name": {
				"references": [
					"var.name",
				],
			},
			"handler": {
				"references": [
					"var.handler",
				],
			},
			"layers": {
				"references": [
					"aws_lambda_layer_version.lambda_layer.arn",
					"aws_lambda_layer_version.lambda_layer",
				],
			},
			"role": {
				"references": [
					"var.role_arn",
				],
			},
			"runtime": {
				"constant_value": "python3.7",
			},
			"s3_bucket": {
				"references": [
					"var.s3_bucket",
				],
			},
			"s3_key": {
				"references": [
					"var.s3_key",
				],
			},
			"s3_object_version": {
				"references": [
					"var.latest_version",
					"data.aws_s3_bucket_object.latest.version_id",
					"data.aws_s3_bucket_object.latest",
					"var.s3_object_version",
				],
			},
			"source_code_hash": {
				"references": [
					"var.latest_version",
					"data.aws_s3_bucket_object.latest.body",
					"data.aws_s3_bucket_object.latest",
					"data.aws_s3_bucket_object.version[0].body",
					"data.aws_s3_bucket_object.version[0]",
					"data.aws_s3_bucket_object.version",
				],
			},
			"tags": {
				"references": [
					"var.tags",
					"local.tags",
				],
			},
			"timeout": {
				"constant_value": 15,
			},
			"vpc_config": [
				{
					"security_group_ids": {
						"references": [
							"var.security_group_ids",
						],
					},
					"subnet_ids": {
						"references": [
							"var.subnet_ids",
						],
					},
				},
			],
		},
		"count":               {},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "module.bkun-dgea-check-data-migration-emr-cluster-availability.module.bkun-dgea-check-data-migration-emr-cluster-availability",
		"name":                "this",
		"provider_config_key": "module.bkun-dgea-check-data-migration-emr-cluster-availability.module.bkun-dgea-check-data-migration-emr-cluster-availability:aws",
		"provisioners":        [],
		"type":                "aws_lambda_function",
	},
	"module.bkun-dgea-check-data-migration-emr-cluster-availability.module.bkun-dgea-check-data-migration-emr-cluster-availability.aws_lambda_layer_version.lambda_layer": {
		"address": "module.bkun-dgea-check-data-migration-emr-cluster-availability.module.bkun-dgea-check-data-migration-emr-cluster-availability.aws_lambda_layer_version.lambda_layer",
		"config": {
			"compatible_runtimes": {
				"constant_value": [
					"python3.7",
				],
			},
			"layer_name": {
				"constant_value": "bu_logging",
			},
			"s3_bucket": {
				"references": [
					"var.s3_bucket",
				],
			},
			"s3_key": {
				"references": [
					"var.s3_layer_key",
				],
			},
			"s3_object_version": {
				"references": [
					"var.latest_version",
					"data.aws_s3_bucket_object.layer_latest.version_id",
					"data.aws_s3_bucket_object.layer_latest",
					"var.s3_object_version",
				],
			},
		},
		"count":               {},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "module.bkun-dgea-check-data-migration-emr-cluster-availability.module.bkun-dgea-check-data-migration-emr-cluster-availability",
		"name":                "lambda_layer",
		"provider_config_key": "module.bkun-dgea-check-data-migration-emr-cluster-availability.module.bkun-dgea-check-data-migration-emr-cluster-availability:aws",
		"provisioners":        [],
		"type":                "aws_lambda_layer_version",
	},
	"module.bkun-dgea-check-data-migration-emr-cluster-availability.module.bkun-dgea-check-data-migration-emr-cluster-availability.data.aws_s3_bucket_object.latest": {
		"address": "module.bkun-dgea-check-data-migration-emr-cluster-availability.module.bkun-dgea-check-data-migration-emr-cluster-availability.data.aws_s3_bucket_object.latest",
		"config": {
			"bucket": {
				"references": [
					"var.s3_bucket",
				],
			},
			"key": {
				"references": [
					"var.s3_key",
				],
			},
		},
		"count":               {},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "data",
		"module_address":      "module.bkun-dgea-check-data-migration-emr-cluster-availability.module.bkun-dgea-check-data-migration-emr-cluster-availability",
		"name":                "latest",
		"provider_config_key": "module.bkun-dgea-check-data-migration-emr-cluster-availability.module.bkun-dgea-check-data-migration-emr-cluster-availability:aws",
		"provisioners":        [],
		"type":                "aws_s3_bucket_object",
	},
	"module.bkun-dgea-check-data-migration-emr-cluster-availability.module.bkun-dgea-check-data-migration-emr-cluster-availability.data.aws_s3_bucket_object.layer_latest": {
		"address": "module.bkun-dgea-check-data-migration-emr-cluster-availability.module.bkun-dgea-check-data-migration-emr-cluster-availability.data.aws_s3_bucket_object.layer_latest",
		"config": {
			"bucket": {
				"references": [
					"var.s3_bucket",
				],
			},
			"key": {
				"references": [
					"var.s3_layer_key",
				],
			},
		},
		"count":               {},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "data",
		"module_address":      "module.bkun-dgea-check-data-migration-emr-cluster-availability.module.bkun-dgea-check-data-migration-emr-cluster-availability",
		"name":                "layer_latest",
		"provider_config_key": "module.bkun-dgea-check-data-migration-emr-cluster-availability.module.bkun-dgea-check-data-migration-emr-cluster-availability:aws",
		"provisioners":        [],
		"type":                "aws_s3_bucket_object",
	},
	"module.bkun-dgea-check-data-migration-emr-cluster-availability.module.bkun-dgea-check-data-migration-emr-cluster-availability.data.aws_s3_bucket_object.layer_version": {
		"address": "module.bkun-dgea-check-data-migration-emr-cluster-availability.module.bkun-dgea-check-data-migration-emr-cluster-availability.data.aws_s3_bucket_object.layer_version",
		"config": {
			"bucket": {
				"references": [
					"var.s3_bucket",
				],
			},
			"key": {
				"references": [
					"var.s3_layer_key",
				],
			},
			"version_id": {
				"references": [
					"var.s3_object_version",
				],
			},
		},
		"count": {
			"references": [
				"var.latest_version",
			],
		},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "data",
		"module_address":      "module.bkun-dgea-check-data-migration-emr-cluster-availability.module.bkun-dgea-check-data-migration-emr-cluster-availability",
		"name":                "layer_version",
		"provider_config_key": "module.bkun-dgea-check-data-migration-emr-cluster-availability.module.bkun-dgea-check-data-migration-emr-cluster-availability:aws",
		"provisioners":        [],
		"type":                "aws_s3_bucket_object",
	},
	"module.bkun-dgea-check-data-migration-emr-cluster-availability.module.bkun-dgea-check-data-migration-emr-cluster-availability.data.aws_s3_bucket_object.version": {
		"address": "module.bkun-dgea-check-data-migration-emr-cluster-availability.module.bkun-dgea-check-data-migration-emr-cluster-availability.data.aws_s3_bucket_object.version",
		"config": {
			"bucket": {
				"references": [
					"var.s3_bucket",
				],
			},
			"key": {
				"references": [
					"var.s3_key",
				],
			},
			"version_id": {
				"references": [
					"var.s3_object_version",
				],
			},
		},
		"count": {
			"references": [
				"var.latest_version",
			],
		},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "data",
		"module_address":      "module.bkun-dgea-check-data-migration-emr-cluster-availability.module.bkun-dgea-check-data-migration-emr-cluster-availability",
		"name":                "version",
		"provider_config_key": "module.bkun-dgea-check-data-migration-emr-cluster-availability.module.bkun-dgea-check-data-migration-emr-cluster-availability:aws",
		"provisioners":        [],
		"type":                "aws_s3_bucket_object",
	},
	"module.bkun-dgea-copy-flat-file-maskout-data.data.aws_caller_identity.current": {
		"address":             "module.bkun-dgea-copy-flat-file-maskout-data.data.aws_caller_identity.current",
		"config":              {},
		"count":               {},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "data",
		"module_address":      "module.bkun-dgea-copy-flat-file-maskout-data",
		"name":                "current",
		"provider_config_key": "module.bkun-dgea-copy-flat-file-maskout-data:aws",
		"provisioners":        [],
		"type":                "aws_caller_identity",
	},
	"module.bkun-dgea-copy-flat-file-maskout-data.data.aws_region.current": {
		"address":             "module.bkun-dgea-copy-flat-file-maskout-data.data.aws_region.current",
		"config":              {},
		"count":               {},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "data",
		"module_address":      "module.bkun-dgea-copy-flat-file-maskout-data",
		"name":                "current",
		"provider_config_key": "module.bkun-dgea-copy-flat-file-maskout-data:aws",
		"provisioners":        [],
		"type":                "aws_region",
	},
	"module.bkun-dgea-copy-flat-file-maskout-data.module.bkun-dgea-copy-flat-file-maskout-data.aws_iam_policy.sfn_cw_policy": {
		"address": "module.bkun-dgea-copy-flat-file-maskout-data.module.bkun-dgea-copy-flat-file-maskout-data.aws_iam_policy.sfn_cw_policy",
		"config": {
			"description": {
				"constant_value": "This policy allows step function to send cloudwatch events",
			},
			"name": {
				"references": [
					"var.env",
				],
			},
			"policy": {
				"references": [
					"var.sfn_cw_policy_path",
					"var.env",
					"data.aws_caller_identity.current.account_id",
					"data.aws_caller_identity.current",
					"data.aws_region.current.name",
					"data.aws_region.current",
				],
			},
		},
		"count": {
			"references": [
				"var.create_sfn_role",
			],
		},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "module.bkun-dgea-copy-flat-file-maskout-data.module.bkun-dgea-copy-flat-file-maskout-data",
		"name":                "sfn_cw_policy",
		"provider_config_key": "module.bkun-dgea-copy-flat-file-maskout-data.module.bkun-dgea-copy-flat-file-maskout-data:aws",
		"provisioners":        [],
		"type":                "aws_iam_policy",
	},
	"module.bkun-dgea-copy-flat-file-maskout-data.module.bkun-dgea-copy-flat-file-maskout-data.aws_iam_policy.sfn_ec2_policy": {
		"address": "module.bkun-dgea-copy-flat-file-maskout-data.module.bkun-dgea-copy-flat-file-maskout-data.aws_iam_policy.sfn_ec2_policy",
		"config": {
			"description": {
				"constant_value": "This policy allows step function to set up EMR cluster",
			},
			"name": {
				"references": [
					"var.env",
				],
			},
			"policy": {
				"references": [
					"var.sfn_ec2_policy_path",
					"data.aws_caller_identity.current.account_id",
					"data.aws_caller_identity.current",
					"data.aws_region.current.name",
					"data.aws_region.current",
				],
			},
		},
		"count": {
			"references": [
				"var.create_sfn_role",
			],
		},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "module.bkun-dgea-copy-flat-file-maskout-data.module.bkun-dgea-copy-flat-file-maskout-data",
		"name":                "sfn_ec2_policy",
		"provider_config_key": "module.bkun-dgea-copy-flat-file-maskout-data.module.bkun-dgea-copy-flat-file-maskout-data:aws",
		"provisioners":        [],
		"type":                "aws_iam_policy",
	},
	"module.bkun-dgea-copy-flat-file-maskout-data.module.bkun-dgea-copy-flat-file-maskout-data.aws_iam_policy.sfn_emr_policy": {
		"address": "module.bkun-dgea-copy-flat-file-maskout-data.module.bkun-dgea-copy-flat-file-maskout-data.aws_iam_policy.sfn_emr_policy",
		"config": {
			"description": {
				"constant_value": "This policy allows step function to set up EMR cluster",
			},
			"name": {
				"references": [
					"var.env",
				],
			},
			"policy": {
				"references": [
					"var.sfn_emr_policy_path",
					"data.aws_caller_identity.current.account_id",
					"data.aws_caller_identity.current",
					"var.env",
				],
			},
		},
		"count": {
			"references": [
				"var.create_sfn_role",
			],
		},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "module.bkun-dgea-copy-flat-file-maskout-data.module.bkun-dgea-copy-flat-file-maskout-data",
		"name":                "sfn_emr_policy",
		"provider_config_key": "module.bkun-dgea-copy-flat-file-maskout-data.module.bkun-dgea-copy-flat-file-maskout-data:aws",
		"provisioners":        [],
		"type":                "aws_iam_policy",
	},
	"module.bkun-dgea-copy-flat-file-maskout-data.module.bkun-dgea-copy-flat-file-maskout-data.aws_iam_policy.sfn_policy": {
		"address": "module.bkun-dgea-copy-flat-file-maskout-data.module.bkun-dgea-copy-flat-file-maskout-data.aws_iam_policy.sfn_policy",
		"config": {
			"description": {
				"constant_value": "This policy provides basic permission for step function executions.",
			},
			"name": {
				"references": [
					"var.env",
				],
			},
			"policy": {
				"references": [
					"var.sfn_policy_path",
					"data.aws_caller_identity.current.account_id",
					"data.aws_caller_identity.current",
					"data.aws_region.current.name",
					"data.aws_region.current",
				],
			},
		},
		"count": {
			"references": [
				"var.create_sfn_role",
			],
		},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "module.bkun-dgea-copy-flat-file-maskout-data.module.bkun-dgea-copy-flat-file-maskout-data",
		"name":                "sfn_policy",
		"provider_config_key": "module.bkun-dgea-copy-flat-file-maskout-data.module.bkun-dgea-copy-flat-file-maskout-data:aws",
		"provisioners":        [],
		"type":                "aws_iam_policy",
	},
	"module.bkun-dgea-copy-flat-file-maskout-data.module.bkun-dgea-copy-flat-file-maskout-data.aws_iam_policy.sfn_s3_policy": {
		"address": "module.bkun-dgea-copy-flat-file-maskout-data.module.bkun-dgea-copy-flat-file-maskout-data.aws_iam_policy.sfn_s3_policy",
		"config": {
			"description": {
				"constant_value": "This policy allows step function to set up EMR cluster",
			},
			"name": {
				"references": [
					"var.env",
				],
			},
			"policy": {
				"references": [
					"var.sfn_s3_policy_path",
					"data.aws_caller_identity.current.account_id",
					"data.aws_caller_identity.current",
					"data.aws_region.current.name",
					"data.aws_region.current",
					"var.env",
				],
			},
		},
		"count": {
			"references": [
				"var.create_sfn_role",
			],
		},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "module.bkun-dgea-copy-flat-file-maskout-data.module.bkun-dgea-copy-flat-file-maskout-data",
		"name":                "sfn_s3_policy",
		"provider_config_key": "module.bkun-dgea-copy-flat-file-maskout-data.module.bkun-dgea-copy-flat-file-maskout-data:aws",
		"provisioners":        [],
		"type":                "aws_iam_policy",
	},
	"module.bkun-dgea-copy-flat-file-maskout-data.module.bkun-dgea-copy-flat-file-maskout-data.aws_iam_role.iam_for_sfn": {
		"address": "module.bkun-dgea-copy-flat-file-maskout-data.module.bkun-dgea-copy-flat-file-maskout-data.aws_iam_role.iam_for_sfn",
		"config": {
			"assume_role_policy": {
				"constant_value": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Action\": \"sts:AssumeRole\",\n      \"Principal\": {\n        \"Service\": \"states.amazonaws.com\"\n      },\n      \"Effect\": \"Allow\"\n    }\n  ]\n}\n",
			},
			"name": {
				"references": [
					"var.env",
				],
			},
			"tags": {
				"references": [
					"var.tags",
					"var.env",
				],
			},
		},
		"count": {
			"references": [
				"var.create_sfn_role",
			],
		},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "module.bkun-dgea-copy-flat-file-maskout-data.module.bkun-dgea-copy-flat-file-maskout-data",
		"name":                "iam_for_sfn",
		"provider_config_key": "module.bkun-dgea-copy-flat-file-maskout-data.module.bkun-dgea-copy-flat-file-maskout-data:aws",
		"provisioners":        [],
		"type":                "aws_iam_role",
	},
	"module.bkun-dgea-copy-flat-file-maskout-data.module.bkun-dgea-copy-flat-file-maskout-data.aws_iam_role_policy_attachment.lambda-access-attach": {
		"address": "module.bkun-dgea-copy-flat-file-maskout-data.module.bkun-dgea-copy-flat-file-maskout-data.aws_iam_role_policy_attachment.lambda-access-attach",
		"config": {
			"policy_arn": {
				"constant_value": "arn:aws:iam::aws:policy/service-role/AWSLambdaRole",
			},
			"role": {
				"references": [
					"aws_iam_role.iam_for_sfn[0].name",
					"aws_iam_role.iam_for_sfn[0]",
					"aws_iam_role.iam_for_sfn",
				],
			},
		},
		"count": {
			"references": [
				"var.create_sfn_role",
			],
		},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "module.bkun-dgea-copy-flat-file-maskout-data.module.bkun-dgea-copy-flat-file-maskout-data",
		"name":                "lambda-access-attach",
		"provider_config_key": "module.bkun-dgea-copy-flat-file-maskout-data.module.bkun-dgea-copy-flat-file-maskout-data:aws",
		"provisioners":        [],
		"type":                "aws_iam_role_policy_attachment",
	},
	"module.bkun-dgea-copy-flat-file-maskout-data.module.bkun-dgea-copy-flat-file-maskout-data.aws_iam_role_policy_attachment.sfn-attach": {
		"address": "module.bkun-dgea-copy-flat-file-maskout-data.module.bkun-dgea-copy-flat-file-maskout-data.aws_iam_role_policy_attachment.sfn-attach",
		"config": {
			"policy_arn": {
				"references": [
					"var.create_sfn_role",
					"aws_iam_policy.sfn_policy[0].arn",
					"aws_iam_policy.sfn_policy[0]",
					"aws_iam_policy.sfn_policy",
					"data.aws_caller_identity.current.account_id",
					"data.aws_caller_identity.current",
					"var.env",
				],
			},
			"role": {
				"references": [
					"aws_iam_role.iam_for_sfn[0].name",
					"aws_iam_role.iam_for_sfn[0]",
					"aws_iam_role.iam_for_sfn",
				],
			},
		},
		"count": {
			"references": [
				"var.create_sfn_role",
			],
		},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "module.bkun-dgea-copy-flat-file-maskout-data.module.bkun-dgea-copy-flat-file-maskout-data",
		"name":                "sfn-attach",
		"provider_config_key": "module.bkun-dgea-copy-flat-file-maskout-data.module.bkun-dgea-copy-flat-file-maskout-data:aws",
		"provisioners":        [],
		"type":                "aws_iam_role_policy_attachment",
	},
	"module.bkun-dgea-copy-flat-file-maskout-data.module.bkun-dgea-copy-flat-file-maskout-data.aws_iam_role_policy_attachment.step-cloudwatch-attach": {
		"address": "module.bkun-dgea-copy-flat-file-maskout-data.module.bkun-dgea-copy-flat-file-maskout-data.aws_iam_role_policy_attachment.step-cloudwatch-attach",
		"config": {
			"policy_arn": {
				"references": [
					"var.create_sfn_role",
					"aws_iam_policy.sfn_cw_policy[0].arn",
					"aws_iam_policy.sfn_cw_policy[0]",
					"aws_iam_policy.sfn_cw_policy",
					"data.aws_caller_identity.current.account_id",
					"data.aws_caller_identity.current",
					"var.env",
				],
			},
			"role": {
				"references": [
					"aws_iam_role.iam_for_sfn[0].name",
					"aws_iam_role.iam_for_sfn[0]",
					"aws_iam_role.iam_for_sfn",
				],
			},
		},
		"count": {
			"references": [
				"var.create_sfn_role",
			],
		},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "module.bkun-dgea-copy-flat-file-maskout-data.module.bkun-dgea-copy-flat-file-maskout-data",
		"name":                "step-cloudwatch-attach",
		"provider_config_key": "module.bkun-dgea-copy-flat-file-maskout-data.module.bkun-dgea-copy-flat-file-maskout-data:aws",
		"provisioners":        [],
		"type":                "aws_iam_role_policy_attachment",
	},
	"module.bkun-dgea-copy-flat-file-maskout-data.module.bkun-dgea-copy-flat-file-maskout-data.aws_iam_role_policy_attachment.step-ec2-attach": {
		"address": "module.bkun-dgea-copy-flat-file-maskout-data.module.bkun-dgea-copy-flat-file-maskout-data.aws_iam_role_policy_attachment.step-ec2-attach",
		"config": {
			"policy_arn": {
				"references": [
					"var.create_sfn_role",
					"aws_iam_policy.sfn_ec2_policy[0].arn",
					"aws_iam_policy.sfn_ec2_policy[0]",
					"aws_iam_policy.sfn_ec2_policy",
					"data.aws_caller_identity.current.account_id",
					"data.aws_caller_identity.current",
					"var.env",
				],
			},
			"role": {
				"references": [
					"aws_iam_role.iam_for_sfn[0].name",
					"aws_iam_role.iam_for_sfn[0]",
					"aws_iam_role.iam_for_sfn",
				],
			},
		},
		"count": {
			"references": [
				"var.create_sfn_role",
			],
		},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "module.bkun-dgea-copy-flat-file-maskout-data.module.bkun-dgea-copy-flat-file-maskout-data",
		"name":                "step-ec2-attach",
		"provider_config_key": "module.bkun-dgea-copy-flat-file-maskout-data.module.bkun-dgea-copy-flat-file-maskout-data:aws",
		"provisioners":        [],
		"type":                "aws_iam_role_policy_attachment",
	},
	"module.bkun-dgea-copy-flat-file-maskout-data.module.bkun-dgea-copy-flat-file-maskout-data.aws_iam_role_policy_attachment.step-emr-attach": {
		"address": "module.bkun-dgea-copy-flat-file-maskout-data.module.bkun-dgea-copy-flat-file-maskout-data.aws_iam_role_policy_attachment.step-emr-attach",
		"config": {
			"policy_arn": {
				"references": [
					"var.create_sfn_role",
					"aws_iam_policy.sfn_emr_policy[0].arn",
					"aws_iam_policy.sfn_emr_policy[0]",
					"aws_iam_policy.sfn_emr_policy",
					"data.aws_caller_identity.current.account_id",
					"data.aws_caller_identity.current",
					"var.env",
				],
			},
			"role": {
				"references": [
					"aws_iam_role.iam_for_sfn[0].name",
					"aws_iam_role.iam_for_sfn[0]",
					"aws_iam_role.iam_for_sfn",
				],
			},
		},
		"count": {
			"references": [
				"var.create_sfn_role",
			],
		},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "module.bkun-dgea-copy-flat-file-maskout-data.module.bkun-dgea-copy-flat-file-maskout-data",
		"name":                "step-emr-attach",
		"provider_config_key": "module.bkun-dgea-copy-flat-file-maskout-data.module.bkun-dgea-copy-flat-file-maskout-data:aws",
		"provisioners":        [],
		"type":                "aws_iam_role_policy_attachment",
	},
	"module.bkun-dgea-copy-flat-file-maskout-data.module.bkun-dgea-copy-flat-file-maskout-data.aws_iam_role_policy_attachment.step-s3-attach": {
		"address": "module.bkun-dgea-copy-flat-file-maskout-data.module.bkun-dgea-copy-flat-file-maskout-data.aws_iam_role_policy_attachment.step-s3-attach",
		"config": {
			"policy_arn": {
				"references": [
					"var.create_sfn_role",
					"aws_iam_policy.sfn_s3_policy[0].arn",
					"aws_iam_policy.sfn_s3_policy[0]",
					"aws_iam_policy.sfn_s3_policy",
					"data.aws_caller_identity.current.account_id",
					"data.aws_caller_identity.current",
					"var.env",
				],
			},
			"role": {
				"references": [
					"aws_iam_role.iam_for_sfn[0].name",
					"aws_iam_role.iam_for_sfn[0]",
					"aws_iam_role.iam_for_sfn",
				],
			},
		},
		"count": {
			"references": [
				"var.create_sfn_role",
			],
		},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "module.bkun-dgea-copy-flat-file-maskout-data.module.bkun-dgea-copy-flat-file-maskout-data",
		"name":                "step-s3-attach",
		"provider_config_key": "module.bkun-dgea-copy-flat-file-maskout-data.module.bkun-dgea-copy-flat-file-maskout-data:aws",
		"provisioners":        [],
		"type":                "aws_iam_role_policy_attachment",
	},
	"module.bkun-dgea-copy-flat-file-maskout-data.module.bkun-dgea-copy-flat-file-maskout-data.aws_sfn_state_machine.this": {
		"address": "module.bkun-dgea-copy-flat-file-maskout-data.module.bkun-dgea-copy-flat-file-maskout-data.aws_sfn_state_machine.this",
		"config": {
			"definition": {
				"references": [
					"var.definition",
				],
			},
			"name": {
				"references": [
					"var.name",
				],
			},
			"role_arn": {
				"references": [
					"var.role_arn",
				],
			},
			"tags": {
				"references": [
					"var.tags",
					"local.tags",
				],
			},
		},
		"count":               {},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "module.bkun-dgea-copy-flat-file-maskout-data.module.bkun-dgea-copy-flat-file-maskout-data",
		"name":                "this",
		"provider_config_key": "module.bkun-dgea-copy-flat-file-maskout-data.module.bkun-dgea-copy-flat-file-maskout-data:aws",
		"provisioners":        [],
		"type":                "aws_sfn_state_machine",
	},
	"module.bkun-dgea-copy-flat-file-maskout-data.module.bkun-dgea-copy-flat-file-maskout-data.data.aws_caller_identity.current": {
		"address":             "module.bkun-dgea-copy-flat-file-maskout-data.module.bkun-dgea-copy-flat-file-maskout-data.data.aws_caller_identity.current",
		"config":              {},
		"count":               {},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "data",
		"module_address":      "module.bkun-dgea-copy-flat-file-maskout-data.module.bkun-dgea-copy-flat-file-maskout-data",
		"name":                "current",
		"provider_config_key": "module.bkun-dgea-copy-flat-file-maskout-data.module.bkun-dgea-copy-flat-file-maskout-data:aws",
		"provisioners":        [],
		"type":                "aws_caller_identity",
	},
	"module.bkun-dgea-copy-flat-file-maskout-data.module.bkun-dgea-copy-flat-file-maskout-data.data.aws_region.current": {
		"address":             "module.bkun-dgea-copy-flat-file-maskout-data.module.bkun-dgea-copy-flat-file-maskout-data.data.aws_region.current",
		"config":              {},
		"count":               {},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "data",
		"module_address":      "module.bkun-dgea-copy-flat-file-maskout-data.module.bkun-dgea-copy-flat-file-maskout-data",
		"name":                "current",
		"provider_config_key": "module.bkun-dgea-copy-flat-file-maskout-data.module.bkun-dgea-copy-flat-file-maskout-data:aws",
		"provisioners":        [],
		"type":                "aws_region",
	},
	"module.bkun-dgea-create-emr-roles.aws_emr_security_configuration.security_config": {
		"address": "module.bkun-dgea-create-emr-roles.aws_emr_security_configuration.security_config",
		"config": {
			"configuration": {
				"references": [
					"data.aws_region.current.name",
					"data.aws_region.current",
					"data.aws_caller_identity.current.account_id",
					"data.aws_caller_identity.current",
					"var.env",
					"var.env",
					"data.aws_region.current.name",
					"data.aws_region.current",
					"data.aws_caller_identity.current.account_id",
					"data.aws_caller_identity.current",
					"var.env",
					"var.env",
					"data.aws_region.current.name",
					"data.aws_region.current",
					"data.aws_caller_identity.current.account_id",
					"data.aws_caller_identity.current",
					"var.env",
				],
			},
			"name": {
				"references": [
					"var.env",
				],
			},
		},
		"count":               {},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "module.bkun-dgea-create-emr-roles",
		"name":                "security_config",
		"provider_config_key": "module.bkun-dgea-create-emr-roles:aws",
		"provisioners":        [],
		"type":                "aws_emr_security_configuration",
	},
	"module.bkun-dgea-create-emr-roles.aws_iam_instance_profile.emr-ec2-instance-profile": {
		"address": "module.bkun-dgea-create-emr-roles.aws_iam_instance_profile.emr-ec2-instance-profile",
		"config": {
			"name": {
				"references": [
					"var.env",
				],
			},
			"role": {
				"references": [
					"aws_iam_role.emr_ec2_role[0].name",
					"aws_iam_role.emr_ec2_role[0]",
					"aws_iam_role.emr_ec2_role",
				],
			},
		},
		"count": {
			"references": [
				"var.create_ec2_role",
			],
		},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "module.bkun-dgea-create-emr-roles",
		"name":                "emr-ec2-instance-profile",
		"provider_config_key": "module.bkun-dgea-create-emr-roles:aws",
		"provisioners":        [],
		"type":                "aws_iam_instance_profile",
	},
	"module.bkun-dgea-create-emr-roles.aws_iam_policy.ec2_dynamodb_policy": {
		"address": "module.bkun-dgea-create-emr-roles.aws_iam_policy.ec2_dynamodb_policy",
		"config": {
			"description": {
				"constant_value": "This policy allows Ec2 instances of EMR cluster to access dyanmodb.",
			},
			"name": {
				"references": [
					"var.env",
				],
			},
			"policy": {
				"references": [
					"var.ec2_dynamodb_policy_path",
					"data.aws_caller_identity.current.account_id",
					"data.aws_caller_identity.current",
					"data.aws_region.current.name",
					"data.aws_region.current",
				],
			},
		},
		"count": {
			"references": [
				"var.create_ec2_role",
			],
		},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "module.bkun-dgea-create-emr-roles",
		"name":                "ec2_dynamodb_policy",
		"provider_config_key": "module.bkun-dgea-create-emr-roles:aws",
		"provisioners":        [],
		"type":                "aws_iam_policy",
	},
	"module.bkun-dgea-create-emr-roles.aws_iam_policy.kms_policy": {
		"address": "module.bkun-dgea-create-emr-roles.aws_iam_policy.kms_policy",
		"config": {
			"description": {
				"constant_value": "This policy allows Ec2 instances of EMR cluster to access kms key",
			},
			"name": {
				"references": [
					"var.env",
				],
			},
			"policy": {
				"references": [
					"var.ec2_kms_policy_path",
					"data.aws_caller_identity.current.account_id",
					"data.aws_caller_identity.current",
					"data.aws_region.current.name",
					"data.aws_region.current",
					"var.env",
				],
			},
		},
		"count": {
			"references": [
				"var.create_ec2_role",
			],
		},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "module.bkun-dgea-create-emr-roles",
		"name":                "kms_policy",
		"provider_config_key": "module.bkun-dgea-create-emr-roles:aws",
		"provisioners":        [],
		"type":                "aws_iam_policy",
	},
	"module.bkun-dgea-create-emr-roles.aws_iam_policy.s3_policy": {
		"address": "module.bkun-dgea-create-emr-roles.aws_iam_policy.s3_policy",
		"config": {
			"description": {
				"constant_value": "This policy allows Ec2 instances of EMR cluster to access s3 bucket",
			},
			"name": {
				"references": [
					"var.env",
				],
			},
			"policy": {
				"references": [
					"var.s3_policy_path",
					"data.aws_caller_identity.current.account_id",
					"data.aws_caller_identity.current",
					"data.aws_region.current.name",
					"data.aws_region.current",
					"var.env",
				],
			},
		},
		"count": {
			"references": [
				"var.create_ec2_role",
			],
		},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "module.bkun-dgea-create-emr-roles",
		"name":                "s3_policy",
		"provider_config_key": "module.bkun-dgea-create-emr-roles:aws",
		"provisioners":        [],
		"type":                "aws_iam_policy",
	},
	"module.bkun-dgea-create-emr-roles.aws_iam_role.emr_ec2_role": {
		"address": "module.bkun-dgea-create-emr-roles.aws_iam_role.emr_ec2_role",
		"config": {
			"assume_role_policy": {
				"constant_value": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Effect\": \"Allow\",\n      \"Principal\": {\n        \"Service\": \"ec2.amazonaws.com\"\n      },\n      \"Action\": \"sts:AssumeRole\"\n    }\n  ]\n}\n",
			},
			"name": {
				"references": [
					"var.env",
				],
			},
			"tags": {
				"references": [
					"var.tags",
					"var.env",
				],
			},
		},
		"count": {
			"references": [
				"var.create_ec2_role",
			],
		},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "module.bkun-dgea-create-emr-roles",
		"name":                "emr_ec2_role",
		"provider_config_key": "module.bkun-dgea-create-emr-roles:aws",
		"provisioners":        [],
		"type":                "aws_iam_role",
	},
	"module.bkun-dgea-create-emr-roles.aws_iam_role.emr_sfn_role": {
		"address": "module.bkun-dgea-create-emr-roles.aws_iam_role.emr_sfn_role",
		"config": {
			"assume_role_policy": {
				"constant_value": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Effect\": \"Allow\",\n      \"Principal\": {\n        \"Service\": \"elasticmapreduce.amazonaws.com\"\n      },\n      \"Action\": \"sts:AssumeRole\"\n    }\n  ]\n}\n",
			},
			"name": {
				"references": [
					"var.env",
				],
			},
			"tags": {
				"references": [
					"var.tags",
					"var.env",
				],
			},
		},
		"count": {
			"references": [
				"var.create_emr_role",
			],
		},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "module.bkun-dgea-create-emr-roles",
		"name":                "emr_sfn_role",
		"provider_config_key": "module.bkun-dgea-create-emr-roles:aws",
		"provisioners":        [],
		"type":                "aws_iam_role",
	},
	"module.bkun-dgea-create-emr-roles.aws_iam_role_policy_attachment.ec2-access-attach": {
		"address": "module.bkun-dgea-create-emr-roles.aws_iam_role_policy_attachment.ec2-access-attach",
		"config": {
			"policy_arn": {
				"constant_value": "arn:aws:iam::aws:policy/AmazonEC2FullAccess",
			},
			"role": {
				"references": [
					"aws_iam_role.emr_ec2_role[0].name",
					"aws_iam_role.emr_ec2_role[0]",
					"aws_iam_role.emr_ec2_role",
				],
			},
		},
		"count": {
			"references": [
				"var.create_ec2_role",
			],
		},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "module.bkun-dgea-create-emr-roles",
		"name":                "ec2-access-attach",
		"provider_config_key": "module.bkun-dgea-create-emr-roles:aws",
		"provisioners":        [],
		"type":                "aws_iam_role_policy_attachment",
	},
	"module.bkun-dgea-create-emr-roles.aws_iam_role_policy_attachment.ec2-dynamodb-attach": {
		"address": "module.bkun-dgea-create-emr-roles.aws_iam_role_policy_attachment.ec2-dynamodb-attach",
		"config": {
			"policy_arn": {
				"references": [
					"var.create_ec2_role",
					"aws_iam_policy.ec2_dynamodb_policy[0].arn",
					"aws_iam_policy.ec2_dynamodb_policy[0]",
					"aws_iam_policy.ec2_dynamodb_policy",
					"data.aws_caller_identity.current.account_id",
					"data.aws_caller_identity.current",
					"var.env",
				],
			},
			"role": {
				"references": [
					"aws_iam_role.emr_ec2_role[0].name",
					"aws_iam_role.emr_ec2_role[0]",
					"aws_iam_role.emr_ec2_role",
				],
			},
		},
		"count": {
			"references": [
				"var.create_ec2_role",
			],
		},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "module.bkun-dgea-create-emr-roles",
		"name":                "ec2-dynamodb-attach",
		"provider_config_key": "module.bkun-dgea-create-emr-roles:aws",
		"provisioners":        [],
		"type":                "aws_iam_role_policy_attachment",
	},
	"module.bkun-dgea-create-emr-roles.aws_iam_role_policy_attachment.ec2-glue-attach": {
		"address": "module.bkun-dgea-create-emr-roles.aws_iam_role_policy_attachment.ec2-glue-attach",
		"config": {
			"policy_arn": {
				"constant_value": "arn:aws:iam::aws:policy/service-role/AWSGlueServiceRole",
			},
			"role": {
				"references": [
					"aws_iam_role.emr_ec2_role[0].name",
					"aws_iam_role.emr_ec2_role[0]",
					"aws_iam_role.emr_ec2_role",
				],
			},
		},
		"count": {
			"references": [
				"var.create_ec2_role",
			],
		},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "module.bkun-dgea-create-emr-roles",
		"name":                "ec2-glue-attach",
		"provider_config_key": "module.bkun-dgea-create-emr-roles:aws",
		"provisioners":        [],
		"type":                "aws_iam_role_policy_attachment",
	},
	"module.bkun-dgea-create-emr-roles.aws_iam_role_policy_attachment.ec2-kms-attach": {
		"address": "module.bkun-dgea-create-emr-roles.aws_iam_role_policy_attachment.ec2-kms-attach",
		"config": {
			"policy_arn": {
				"references": [
					"var.create_ec2_role",
					"aws_iam_policy.kms_policy[0].arn",
					"aws_iam_policy.kms_policy[0]",
					"aws_iam_policy.kms_policy",
					"data.aws_caller_identity.current.account_id",
					"data.aws_caller_identity.current",
					"var.env",
				],
			},
			"role": {
				"references": [
					"aws_iam_role.emr_ec2_role[0].name",
					"aws_iam_role.emr_ec2_role[0]",
					"aws_iam_role.emr_ec2_role",
				],
			},
		},
		"count": {
			"references": [
				"var.create_ec2_role",
			],
		},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "module.bkun-dgea-create-emr-roles",
		"name":                "ec2-kms-attach",
		"provider_config_key": "module.bkun-dgea-create-emr-roles:aws",
		"provisioners":        [],
		"type":                "aws_iam_role_policy_attachment",
	},
	"module.bkun-dgea-create-emr-roles.aws_iam_role_policy_attachment.ec2-secretmanager-attach": {
		"address": "module.bkun-dgea-create-emr-roles.aws_iam_role_policy_attachment.ec2-secretmanager-attach",
		"config": {
			"policy_arn": {
				"constant_value": "arn:aws:iam::aws:policy/SecretsManagerReadWrite",
			},
			"role": {
				"references": [
					"aws_iam_role.emr_ec2_role[0].name",
					"aws_iam_role.emr_ec2_role[0]",
					"aws_iam_role.emr_ec2_role",
				],
			},
		},
		"count": {
			"references": [
				"var.create_ec2_role",
			],
		},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "module.bkun-dgea-create-emr-roles",
		"name":                "ec2-secretmanager-attach",
		"provider_config_key": "module.bkun-dgea-create-emr-roles:aws",
		"provisioners":        [],
		"type":                "aws_iam_role_policy_attachment",
	},
	"module.bkun-dgea-create-emr-roles.aws_iam_role_policy_attachment.ec2-stepfunction-attach": {
		"address": "module.bkun-dgea-create-emr-roles.aws_iam_role_policy_attachment.ec2-stepfunction-attach",
		"config": {
			"policy_arn": {
				"constant_value": "arn:aws:iam::aws:policy/AWSStepFunctionsFullAccess",
			},
			"role": {
				"references": [
					"aws_iam_role.emr_ec2_role[0].name",
					"aws_iam_role.emr_ec2_role[0]",
					"aws_iam_role.emr_ec2_role",
				],
			},
		},
		"count": {
			"references": [
				"var.create_ec2_role",
			],
		},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "module.bkun-dgea-create-emr-roles",
		"name":                "ec2-stepfunction-attach",
		"provider_config_key": "module.bkun-dgea-create-emr-roles:aws",
		"provisioners":        [],
		"type":                "aws_iam_role_policy_attachment",
	},
	"module.bkun-dgea-create-emr-roles.aws_iam_role_policy_attachment.emr-access-attach": {
		"address": "module.bkun-dgea-create-emr-roles.aws_iam_role_policy_attachment.emr-access-attach",
		"config": {
			"policy_arn": {
				"constant_value": "arn:aws:iam::aws:policy/service-role/AmazonElasticMapReduceRole",
			},
			"role": {
				"references": [
					"aws_iam_role.emr_sfn_role[0].name",
					"aws_iam_role.emr_sfn_role[0]",
					"aws_iam_role.emr_sfn_role",
				],
			},
		},
		"count": {
			"references": [
				"var.create_emr_role",
			],
		},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "module.bkun-dgea-create-emr-roles",
		"name":                "emr-access-attach",
		"provider_config_key": "module.bkun-dgea-create-emr-roles:aws",
		"provisioners":        [],
		"type":                "aws_iam_role_policy_attachment",
	},
	"module.bkun-dgea-create-emr-roles.aws_iam_role_policy_attachment.s3_attach": {
		"address": "module.bkun-dgea-create-emr-roles.aws_iam_role_policy_attachment.s3_attach",
		"config": {
			"policy_arn": {
				"references": [
					"var.create_ec2_role",
					"aws_iam_policy.s3_policy[0].arn",
					"aws_iam_policy.s3_policy[0]",
					"aws_iam_policy.s3_policy",
					"data.aws_caller_identity.current.account_id",
					"data.aws_caller_identity.current",
					"var.env",
				],
			},
			"role": {
				"references": [
					"aws_iam_role.emr_ec2_role[0].name",
					"aws_iam_role.emr_ec2_role[0]",
					"aws_iam_role.emr_ec2_role",
				],
			},
		},
		"count": {
			"references": [
				"var.create_ec2_role",
			],
		},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "module.bkun-dgea-create-emr-roles",
		"name":                "s3_attach",
		"provider_config_key": "module.bkun-dgea-create-emr-roles:aws",
		"provisioners":        [],
		"type":                "aws_iam_role_policy_attachment",
	},
	"module.bkun-dgea-create-emr-roles.data.aws_caller_identity.current": {
		"address":             "module.bkun-dgea-create-emr-roles.data.aws_caller_identity.current",
		"config":              {},
		"count":               {},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "data",
		"module_address":      "module.bkun-dgea-create-emr-roles",
		"name":                "current",
		"provider_config_key": "module.bkun-dgea-create-emr-roles:aws",
		"provisioners":        [],
		"type":                "aws_caller_identity",
	},
	"module.bkun-dgea-create-emr-roles.data.aws_region.current": {
		"address":             "module.bkun-dgea-create-emr-roles.data.aws_region.current",
		"config":              {},
		"count":               {},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "data",
		"module_address":      "module.bkun-dgea-create-emr-roles",
		"name":                "current",
		"provider_config_key": "module.bkun-dgea-create-emr-roles:aws",
		"provisioners":        [],
		"type":                "aws_region",
	},
	"module.bkun-dgea-datamart-conf-redacted.data.aws_caller_identity.current": {
		"address":             "module.bkun-dgea-datamart-conf-redacted.data.aws_caller_identity.current",
		"config":              {},
		"count":               {},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "data",
		"module_address":      "module.bkun-dgea-datamart-conf-redacted",
		"name":                "current",
		"provider_config_key": "module.bkun-dgea-datamart-conf-redacted:aws",
		"provisioners":        [],
		"type":                "aws_caller_identity",
	},
	"module.bkun-dgea-datamart-conf-redacted.module.bkun-dgea-datamart-conf-redacted.aws_kms_alias.this": {
		"address": "module.bkun-dgea-datamart-conf-redacted.module.bkun-dgea-datamart-conf-redacted.aws_kms_alias.this",
		"config": {
			"name": {
				"references": [
					"var.bucket_name",
				],
			},
			"target_key_id": {
				"references": [
					"aws_kms_key.this[0].key_id",
					"aws_kms_key.this[0]",
					"aws_kms_key.this",
				],
			},
		},
		"count": {
			"references": [
				"var.create_kms_key",
			],
		},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "module.bkun-dgea-datamart-conf-redacted.module.bkun-dgea-datamart-conf-redacted",
		"name":                "this",
		"provider_config_key": "module.bkun-dgea-datamart-conf-redacted.module.bkun-dgea-datamart-conf-redacted:aws",
		"provisioners":        [],
		"type":                "aws_kms_alias",
	},
	"module.bkun-dgea-datamart-conf-redacted.module.bkun-dgea-datamart-conf-redacted.aws_kms_key.this": {
		"address": "module.bkun-dgea-datamart-conf-redacted.module.bkun-dgea-datamart-conf-redacted.aws_kms_key.this",
		"config": {
			"deletion_window_in_days": {
				"constant_value": 30,
			},
			"description": {
				"constant_value": "S3 Bucket Key",
			},
			"tags": {
				"references": [
					"var.tags",
					"var.bucket_name",
				],
			},
		},
		"count": {
			"references": [
				"var.create_kms_key",
			],
		},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "module.bkun-dgea-datamart-conf-redacted.module.bkun-dgea-datamart-conf-redacted",
		"name":                "this",
		"provider_config_key": "module.bkun-dgea-datamart-conf-redacted.module.bkun-dgea-datamart-conf-redacted:aws",
		"provisioners":        [],
		"type":                "aws_kms_key",
	},
	"module.bkun-dgea-datamart-conf-redacted.module.bkun-dgea-datamart-conf-redacted.aws_s3_bucket.this": {
		"address": "module.bkun-dgea-datamart-conf-redacted.module.bkun-dgea-datamart-conf-redacted.aws_s3_bucket.this",
		"config": {
			"acl": {
				"constant_value": "private",
			},
			"bucket": {
				"references": [
					"var.bucket_name",
				],
			},
			"server_side_encryption_configuration": [
				{
					"rule": [
						{
							"apply_server_side_encryption_by_default": [
								{
									"kms_master_key_id": {
										"references": [
											"var.create_kms_key",
											"aws_kms_key.this[0].arn",
											"aws_kms_key.this[0]",
											"aws_kms_key.this",
										],
									},
									"sse_algorithm": {
										"constant_value": "aws:kms",
									},
								},
							],
						},
					],
				},
			],
			"tags": {
				"references": [
					"var.tags",
					"var.bucket_name",
				],
			},
			"versioning": [
				{
					"enabled": {
						"constant_value": true,
					},
				},
			],
		},
		"count":               {},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "module.bkun-dgea-datamart-conf-redacted.module.bkun-dgea-datamart-conf-redacted",
		"name":                "this",
		"provider_config_key": "module.bkun-dgea-datamart-conf-redacted.module.bkun-dgea-datamart-conf-redacted:aws",
		"provisioners":        [],
		"type":                "aws_s3_bucket",
	},
	"module.bkun-dgea-datamart-conf-redacted.module.bkun-dgea-datamart-conf-redacted.aws_s3_bucket_policy.this": {
		"address": "module.bkun-dgea-datamart-conf-redacted.module.bkun-dgea-datamart-conf-redacted.aws_s3_bucket_policy.this",
		"config": {
			"bucket": {
				"references": [
					"aws_s3_bucket.this.id",
					"aws_s3_bucket.this",
				],
			},
			"policy": {
				"references": [
					"var.s3_bucket_policy",
				],
			},
		},
		"count":               {},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "module.bkun-dgea-datamart-conf-redacted.module.bkun-dgea-datamart-conf-redacted",
		"name":                "this",
		"provider_config_key": "module.bkun-dgea-datamart-conf-redacted.module.bkun-dgea-datamart-conf-redacted:aws",
		"provisioners":        [],
		"type":                "aws_s3_bucket_policy",
	},
	"module.bkun-dgea-datamart-conf-redacted.module.bkun-dgea-datamart-conf-redacted.data.aws_caller_identity.current": {
		"address":             "module.bkun-dgea-datamart-conf-redacted.module.bkun-dgea-datamart-conf-redacted.data.aws_caller_identity.current",
		"config":              {},
		"count":               {},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "data",
		"module_address":      "module.bkun-dgea-datamart-conf-redacted.module.bkun-dgea-datamart-conf-redacted",
		"name":                "current",
		"provider_config_key": "module.bkun-dgea-datamart-conf-redacted.module.bkun-dgea-datamart-conf-redacted:aws",
		"provisioners":        [],
		"type":                "aws_caller_identity",
	},
	"module.bkun-dgea-datamart-conf-redacted.module.bkun-dgea-datamart-conf-redacted.data.aws_region.current": {
		"address":             "module.bkun-dgea-datamart-conf-redacted.module.bkun-dgea-datamart-conf-redacted.data.aws_region.current",
		"config":              {},
		"count":               {},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "data",
		"module_address":      "module.bkun-dgea-datamart-conf-redacted.module.bkun-dgea-datamart-conf-redacted",
		"name":                "current",
		"provider_config_key": "module.bkun-dgea-datamart-conf-redacted.module.bkun-dgea-datamart-conf-redacted:aws",
		"provisioners":        [],
		"type":                "aws_region",
	},
	"module.bkun-dgea-datamart-raw-redacted.data.aws_caller_identity.current": {
		"address":             "module.bkun-dgea-datamart-raw-redacted.data.aws_caller_identity.current",
		"config":              {},
		"count":               {},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "data",
		"module_address":      "module.bkun-dgea-datamart-raw-redacted",
		"name":                "current",
		"provider_config_key": "module.bkun-dgea-datamart-raw-redacted:aws",
		"provisioners":        [],
		"type":                "aws_caller_identity",
	},
	"module.bkun-dgea-datamart-raw-redacted.module.bkun-dgea-dp-source-artifacts.aws_kms_alias.this": {
		"address": "module.bkun-dgea-datamart-raw-redacted.module.bkun-dgea-dp-source-artifacts.aws_kms_alias.this",
		"config": {
			"name": {
				"references": [
					"var.bucket_name",
				],
			},
			"target_key_id": {
				"references": [
					"aws_kms_key.this[0].key_id",
					"aws_kms_key.this[0]",
					"aws_kms_key.this",
				],
			},
		},
		"count": {
			"references": [
				"var.create_kms_key",
			],
		},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "module.bkun-dgea-datamart-raw-redacted.module.bkun-dgea-dp-source-artifacts",
		"name":                "this",
		"provider_config_key": "module.bkun-dgea-datamart-raw-redacted.module.bkun-dgea-dp-source-artifacts:aws",
		"provisioners":        [],
		"type":                "aws_kms_alias",
	},
	"module.bkun-dgea-datamart-raw-redacted.module.bkun-dgea-dp-source-artifacts.aws_kms_key.this": {
		"address": "module.bkun-dgea-datamart-raw-redacted.module.bkun-dgea-dp-source-artifacts.aws_kms_key.this",
		"config": {
			"deletion_window_in_days": {
				"constant_value": 30,
			},
			"description": {
				"constant_value": "S3 Bucket Key",
			},
			"tags": {
				"references": [
					"var.tags",
					"var.bucket_name",
				],
			},
		},
		"count": {
			"references": [
				"var.create_kms_key",
			],
		},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "module.bkun-dgea-datamart-raw-redacted.module.bkun-dgea-dp-source-artifacts",
		"name":                "this",
		"provider_config_key": "module.bkun-dgea-datamart-raw-redacted.module.bkun-dgea-dp-source-artifacts:aws",
		"provisioners":        [],
		"type":                "aws_kms_key",
	},
	"module.bkun-dgea-datamart-raw-redacted.module.bkun-dgea-dp-source-artifacts.aws_s3_bucket.this": {
		"address": "module.bkun-dgea-datamart-raw-redacted.module.bkun-dgea-dp-source-artifacts.aws_s3_bucket.this",
		"config": {
			"acl": {
				"constant_value": "private",
			},
			"bucket": {
				"references": [
					"var.bucket_name",
				],
			},
			"server_side_encryption_configuration": [
				{
					"rule": [
						{
							"apply_server_side_encryption_by_default": [
								{
									"kms_master_key_id": {
										"references": [
											"var.create_kms_key",
											"aws_kms_key.this[0].arn",
											"aws_kms_key.this[0]",
											"aws_kms_key.this",
										],
									},
									"sse_algorithm": {
										"constant_value": "aws:kms",
									},
								},
							],
						},
					],
				},
			],
			"tags": {
				"references": [
					"var.tags",
					"var.bucket_name",
				],
			},
			"versioning": [
				{
					"enabled": {
						"constant_value": true,
					},
				},
			],
		},
		"count":               {},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "module.bkun-dgea-datamart-raw-redacted.module.bkun-dgea-dp-source-artifacts",
		"name":                "this",
		"provider_config_key": "module.bkun-dgea-datamart-raw-redacted.module.bkun-dgea-dp-source-artifacts:aws",
		"provisioners":        [],
		"type":                "aws_s3_bucket",
	},
	"module.bkun-dgea-datamart-raw-redacted.module.bkun-dgea-dp-source-artifacts.aws_s3_bucket_policy.this": {
		"address": "module.bkun-dgea-datamart-raw-redacted.module.bkun-dgea-dp-source-artifacts.aws_s3_bucket_policy.this",
		"config": {
			"bucket": {
				"references": [
					"aws_s3_bucket.this.id",
					"aws_s3_bucket.this",
				],
			},
			"policy": {
				"references": [
					"var.s3_bucket_policy",
				],
			},
		},
		"count":               {},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "module.bkun-dgea-datamart-raw-redacted.module.bkun-dgea-dp-source-artifacts",
		"name":                "this",
		"provider_config_key": "module.bkun-dgea-datamart-raw-redacted.module.bkun-dgea-dp-source-artifacts:aws",
		"provisioners":        [],
		"type":                "aws_s3_bucket_policy",
	},
	"module.bkun-dgea-datamart-raw-redacted.module.bkun-dgea-dp-source-artifacts.data.aws_caller_identity.current": {
		"address":             "module.bkun-dgea-datamart-raw-redacted.module.bkun-dgea-dp-source-artifacts.data.aws_caller_identity.current",
		"config":              {},
		"count":               {},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "data",
		"module_address":      "module.bkun-dgea-datamart-raw-redacted.module.bkun-dgea-dp-source-artifacts",
		"name":                "current",
		"provider_config_key": "module.bkun-dgea-datamart-raw-redacted.module.bkun-dgea-dp-source-artifacts:aws",
		"provisioners":        [],
		"type":                "aws_caller_identity",
	},
	"module.bkun-dgea-datamart-raw-redacted.module.bkun-dgea-dp-source-artifacts.data.aws_region.current": {
		"address":             "module.bkun-dgea-datamart-raw-redacted.module.bkun-dgea-dp-source-artifacts.data.aws_region.current",
		"config":              {},
		"count":               {},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "data",
		"module_address":      "module.bkun-dgea-datamart-raw-redacted.module.bkun-dgea-dp-source-artifacts",
		"name":                "current",
		"provider_config_key": "module.bkun-dgea-datamart-raw-redacted.module.bkun-dgea-dp-source-artifacts:aws",
		"provisioners":        [],
		"type":                "aws_region",
	},
	"module.bkun-dgea-ddl-creation-step-function.data.aws_caller_identity.current": {
		"address":             "module.bkun-dgea-ddl-creation-step-function.data.aws_caller_identity.current",
		"config":              {},
		"count":               {},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "data",
		"module_address":      "module.bkun-dgea-ddl-creation-step-function",
		"name":                "current",
		"provider_config_key": "module.bkun-dgea-ddl-creation-step-function:aws",
		"provisioners":        [],
		"type":                "aws_caller_identity",
	},
	"module.bkun-dgea-ddl-creation-step-function.data.aws_region.current": {
		"address":             "module.bkun-dgea-ddl-creation-step-function.data.aws_region.current",
		"config":              {},
		"count":               {},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "data",
		"module_address":      "module.bkun-dgea-ddl-creation-step-function",
		"name":                "current",
		"provider_config_key": "module.bkun-dgea-ddl-creation-step-function:aws",
		"provisioners":        [],
		"type":                "aws_region",
	},
	"module.bkun-dgea-ddl-creation-step-function.module.bkun-dgea-ddl-creation-step-function.aws_iam_policy.sfn_cw_policy": {
		"address": "module.bkun-dgea-ddl-creation-step-function.module.bkun-dgea-ddl-creation-step-function.aws_iam_policy.sfn_cw_policy",
		"config": {
			"description": {
				"constant_value": "This policy allows step function to send cloudwatch events",
			},
			"name": {
				"references": [
					"var.env",
				],
			},
			"policy": {
				"references": [
					"var.sfn_cw_policy_path",
					"var.env",
					"data.aws_caller_identity.current.account_id",
					"data.aws_caller_identity.current",
					"data.aws_region.current.name",
					"data.aws_region.current",
				],
			},
		},
		"count": {
			"references": [
				"var.create_sfn_role",
			],
		},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "module.bkun-dgea-ddl-creation-step-function.module.bkun-dgea-ddl-creation-step-function",
		"name":                "sfn_cw_policy",
		"provider_config_key": "module.bkun-dgea-ddl-creation-step-function.module.bkun-dgea-ddl-creation-step-function:aws",
		"provisioners":        [],
		"type":                "aws_iam_policy",
	},
	"module.bkun-dgea-ddl-creation-step-function.module.bkun-dgea-ddl-creation-step-function.aws_iam_policy.sfn_ec2_policy": {
		"address": "module.bkun-dgea-ddl-creation-step-function.module.bkun-dgea-ddl-creation-step-function.aws_iam_policy.sfn_ec2_policy",
		"config": {
			"description": {
				"constant_value": "This policy allows step function to set up EMR cluster",
			},
			"name": {
				"references": [
					"var.env",
				],
			},
			"policy": {
				"references": [
					"var.sfn_ec2_policy_path",
					"data.aws_caller_identity.current.account_id",
					"data.aws_caller_identity.current",
					"data.aws_region.current.name",
					"data.aws_region.current",
				],
			},
		},
		"count": {
			"references": [
				"var.create_sfn_role",
			],
		},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "module.bkun-dgea-ddl-creation-step-function.module.bkun-dgea-ddl-creation-step-function",
		"name":                "sfn_ec2_policy",
		"provider_config_key": "module.bkun-dgea-ddl-creation-step-function.module.bkun-dgea-ddl-creation-step-function:aws",
		"provisioners":        [],
		"type":                "aws_iam_policy",
	},
	"module.bkun-dgea-ddl-creation-step-function.module.bkun-dgea-ddl-creation-step-function.aws_iam_policy.sfn_emr_policy": {
		"address": "module.bkun-dgea-ddl-creation-step-function.module.bkun-dgea-ddl-creation-step-function.aws_iam_policy.sfn_emr_policy",
		"config": {
			"description": {
				"constant_value": "This policy allows step function to set up EMR cluster",
			},
			"name": {
				"references": [
					"var.env",
				],
			},
			"policy": {
				"references": [
					"var.sfn_emr_policy_path",
					"data.aws_caller_identity.current.account_id",
					"data.aws_caller_identity.current",
					"var.env",
				],
			},
		},
		"count": {
			"references": [
				"var.create_sfn_role",
			],
		},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "module.bkun-dgea-ddl-creation-step-function.module.bkun-dgea-ddl-creation-step-function",
		"name":                "sfn_emr_policy",
		"provider_config_key": "module.bkun-dgea-ddl-creation-step-function.module.bkun-dgea-ddl-creation-step-function:aws",
		"provisioners":        [],
		"type":                "aws_iam_policy",
	},
	"module.bkun-dgea-ddl-creation-step-function.module.bkun-dgea-ddl-creation-step-function.aws_iam_policy.sfn_policy": {
		"address": "module.bkun-dgea-ddl-creation-step-function.module.bkun-dgea-ddl-creation-step-function.aws_iam_policy.sfn_policy",
		"config": {
			"description": {
				"constant_value": "This policy provides basic permission for step function executions.",
			},
			"name": {
				"references": [
					"var.env",
				],
			},
			"policy": {
				"references": [
					"var.sfn_policy_path",
					"data.aws_caller_identity.current.account_id",
					"data.aws_caller_identity.current",
					"data.aws_region.current.name",
					"data.aws_region.current",
				],
			},
		},
		"count": {
			"references": [
				"var.create_sfn_role",
			],
		},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "module.bkun-dgea-ddl-creation-step-function.module.bkun-dgea-ddl-creation-step-function",
		"name":                "sfn_policy",
		"provider_config_key": "module.bkun-dgea-ddl-creation-step-function.module.bkun-dgea-ddl-creation-step-function:aws",
		"provisioners":        [],
		"type":                "aws_iam_policy",
	},
	"module.bkun-dgea-ddl-creation-step-function.module.bkun-dgea-ddl-creation-step-function.aws_iam_policy.sfn_s3_policy": {
		"address": "module.bkun-dgea-ddl-creation-step-function.module.bkun-dgea-ddl-creation-step-function.aws_iam_policy.sfn_s3_policy",
		"config": {
			"description": {
				"constant_value": "This policy allows step function to set up EMR cluster",
			},
			"name": {
				"references": [
					"var.env",
				],
			},
			"policy": {
				"references": [
					"var.sfn_s3_policy_path",
					"data.aws_caller_identity.current.account_id",
					"data.aws_caller_identity.current",
					"data.aws_region.current.name",
					"data.aws_region.current",
					"var.env",
				],
			},
		},
		"count": {
			"references": [
				"var.create_sfn_role",
			],
		},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "module.bkun-dgea-ddl-creation-step-function.module.bkun-dgea-ddl-creation-step-function",
		"name":                "sfn_s3_policy",
		"provider_config_key": "module.bkun-dgea-ddl-creation-step-function.module.bkun-dgea-ddl-creation-step-function:aws",
		"provisioners":        [],
		"type":                "aws_iam_policy",
	},
	"module.bkun-dgea-ddl-creation-step-function.module.bkun-dgea-ddl-creation-step-function.aws_iam_role.iam_for_sfn": {
		"address": "module.bkun-dgea-ddl-creation-step-function.module.bkun-dgea-ddl-creation-step-function.aws_iam_role.iam_for_sfn",
		"config": {
			"assume_role_policy": {
				"constant_value": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Action\": \"sts:AssumeRole\",\n      \"Principal\": {\n        \"Service\": \"states.amazonaws.com\"\n      },\n      \"Effect\": \"Allow\"\n    }\n  ]\n}\n",
			},
			"name": {
				"references": [
					"var.env",
				],
			},
			"tags": {
				"references": [
					"var.tags",
					"var.env",
				],
			},
		},
		"count": {
			"references": [
				"var.create_sfn_role",
			],
		},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "module.bkun-dgea-ddl-creation-step-function.module.bkun-dgea-ddl-creation-step-function",
		"name":                "iam_for_sfn",
		"provider_config_key": "module.bkun-dgea-ddl-creation-step-function.module.bkun-dgea-ddl-creation-step-function:aws",
		"provisioners":        [],
		"type":                "aws_iam_role",
	},
	"module.bkun-dgea-ddl-creation-step-function.module.bkun-dgea-ddl-creation-step-function.aws_iam_role_policy_attachment.lambda-access-attach": {
		"address": "module.bkun-dgea-ddl-creation-step-function.module.bkun-dgea-ddl-creation-step-function.aws_iam_role_policy_attachment.lambda-access-attach",
		"config": {
			"policy_arn": {
				"constant_value": "arn:aws:iam::aws:policy/service-role/AWSLambdaRole",
			},
			"role": {
				"references": [
					"aws_iam_role.iam_for_sfn[0].name",
					"aws_iam_role.iam_for_sfn[0]",
					"aws_iam_role.iam_for_sfn",
				],
			},
		},
		"count": {
			"references": [
				"var.create_sfn_role",
			],
		},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "module.bkun-dgea-ddl-creation-step-function.module.bkun-dgea-ddl-creation-step-function",
		"name":                "lambda-access-attach",
		"provider_config_key": "module.bkun-dgea-ddl-creation-step-function.module.bkun-dgea-ddl-creation-step-function:aws",
		"provisioners":        [],
		"type":                "aws_iam_role_policy_attachment",
	},
	"module.bkun-dgea-ddl-creation-step-function.module.bkun-dgea-ddl-creation-step-function.aws_iam_role_policy_attachment.sfn-attach": {
		"address": "module.bkun-dgea-ddl-creation-step-function.module.bkun-dgea-ddl-creation-step-function.aws_iam_role_policy_attachment.sfn-attach",
		"config": {
			"policy_arn": {
				"references": [
					"var.create_sfn_role",
					"aws_iam_policy.sfn_policy[0].arn",
					"aws_iam_policy.sfn_policy[0]",
					"aws_iam_policy.sfn_policy",
					"data.aws_caller_identity.current.account_id",
					"data.aws_caller_identity.current",
					"var.env",
				],
			},
			"role": {
				"references": [
					"aws_iam_role.iam_for_sfn[0].name",
					"aws_iam_role.iam_for_sfn[0]",
					"aws_iam_role.iam_for_sfn",
				],
			},
		},
		"count": {
			"references": [
				"var.create_sfn_role",
			],
		},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "module.bkun-dgea-ddl-creation-step-function.module.bkun-dgea-ddl-creation-step-function",
		"name":                "sfn-attach",
		"provider_config_key": "module.bkun-dgea-ddl-creation-step-function.module.bkun-dgea-ddl-creation-step-function:aws",
		"provisioners":        [],
		"type":                "aws_iam_role_policy_attachment",
	},
	"module.bkun-dgea-ddl-creation-step-function.module.bkun-dgea-ddl-creation-step-function.aws_iam_role_policy_attachment.step-cloudwatch-attach": {
		"address": "module.bkun-dgea-ddl-creation-step-function.module.bkun-dgea-ddl-creation-step-function.aws_iam_role_policy_attachment.step-cloudwatch-attach",
		"config": {
			"policy_arn": {
				"references": [
					"var.create_sfn_role",
					"aws_iam_policy.sfn_cw_policy[0].arn",
					"aws_iam_policy.sfn_cw_policy[0]",
					"aws_iam_policy.sfn_cw_policy",
					"data.aws_caller_identity.current.account_id",
					"data.aws_caller_identity.current",
					"var.env",
				],
			},
			"role": {
				"references": [
					"aws_iam_role.iam_for_sfn[0].name",
					"aws_iam_role.iam_for_sfn[0]",
					"aws_iam_role.iam_for_sfn",
				],
			},
		},
		"count": {
			"references": [
				"var.create_sfn_role",
			],
		},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "module.bkun-dgea-ddl-creation-step-function.module.bkun-dgea-ddl-creation-step-function",
		"name":                "step-cloudwatch-attach",
		"provider_config_key": "module.bkun-dgea-ddl-creation-step-function.module.bkun-dgea-ddl-creation-step-function:aws",
		"provisioners":        [],
		"type":                "aws_iam_role_policy_attachment",
	},
	"module.bkun-dgea-ddl-creation-step-function.module.bkun-dgea-ddl-creation-step-function.aws_iam_role_policy_attachment.step-ec2-attach": {
		"address": "module.bkun-dgea-ddl-creation-step-function.module.bkun-dgea-ddl-creation-step-function.aws_iam_role_policy_attachment.step-ec2-attach",
		"config": {
			"policy_arn": {
				"references": [
					"var.create_sfn_role",
					"aws_iam_policy.sfn_ec2_policy[0].arn",
					"aws_iam_policy.sfn_ec2_policy[0]",
					"aws_iam_policy.sfn_ec2_policy",
					"data.aws_caller_identity.current.account_id",
					"data.aws_caller_identity.current",
					"var.env",
				],
			},
			"role": {
				"references": [
					"aws_iam_role.iam_for_sfn[0].name",
					"aws_iam_role.iam_for_sfn[0]",
					"aws_iam_role.iam_for_sfn",
				],
			},
		},
		"count": {
			"references": [
				"var.create_sfn_role",
			],
		},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "module.bkun-dgea-ddl-creation-step-function.module.bkun-dgea-ddl-creation-step-function",
		"name":                "step-ec2-attach",
		"provider_config_key": "module.bkun-dgea-ddl-creation-step-function.module.bkun-dgea-ddl-creation-step-function:aws",
		"provisioners":        [],
		"type":                "aws_iam_role_policy_attachment",
	},
	"module.bkun-dgea-ddl-creation-step-function.module.bkun-dgea-ddl-creation-step-function.aws_iam_role_policy_attachment.step-emr-attach": {
		"address": "module.bkun-dgea-ddl-creation-step-function.module.bkun-dgea-ddl-creation-step-function.aws_iam_role_policy_attachment.step-emr-attach",
		"config": {
			"policy_arn": {
				"references": [
					"var.create_sfn_role",
					"aws_iam_policy.sfn_emr_policy[0].arn",
					"aws_iam_policy.sfn_emr_policy[0]",
					"aws_iam_policy.sfn_emr_policy",
					"data.aws_caller_identity.current.account_id",
					"data.aws_caller_identity.current",
					"var.env",
				],
			},
			"role": {
				"references": [
					"aws_iam_role.iam_for_sfn[0].name",
					"aws_iam_role.iam_for_sfn[0]",
					"aws_iam_role.iam_for_sfn",
				],
			},
		},
		"count": {
			"references": [
				"var.create_sfn_role",
			],
		},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "module.bkun-dgea-ddl-creation-step-function.module.bkun-dgea-ddl-creation-step-function",
		"name":                "step-emr-attach",
		"provider_config_key": "module.bkun-dgea-ddl-creation-step-function.module.bkun-dgea-ddl-creation-step-function:aws",
		"provisioners":        [],
		"type":                "aws_iam_role_policy_attachment",
	},
	"module.bkun-dgea-ddl-creation-step-function.module.bkun-dgea-ddl-creation-step-function.aws_iam_role_policy_attachment.step-s3-attach": {
		"address": "module.bkun-dgea-ddl-creation-step-function.module.bkun-dgea-ddl-creation-step-function.aws_iam_role_policy_attachment.step-s3-attach",
		"config": {
			"policy_arn": {
				"references": [
					"var.create_sfn_role",
					"aws_iam_policy.sfn_s3_policy[0].arn",
					"aws_iam_policy.sfn_s3_policy[0]",
					"aws_iam_policy.sfn_s3_policy",
					"data.aws_caller_identity.current.account_id",
					"data.aws_caller_identity.current",
					"var.env",
				],
			},
			"role": {
				"references": [
					"aws_iam_role.iam_for_sfn[0].name",
					"aws_iam_role.iam_for_sfn[0]",
					"aws_iam_role.iam_for_sfn",
				],
			},
		},
		"count": {
			"references": [
				"var.create_sfn_role",
			],
		},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "module.bkun-dgea-ddl-creation-step-function.module.bkun-dgea-ddl-creation-step-function",
		"name":                "step-s3-attach",
		"provider_config_key": "module.bkun-dgea-ddl-creation-step-function.module.bkun-dgea-ddl-creation-step-function:aws",
		"provisioners":        [],
		"type":                "aws_iam_role_policy_attachment",
	},
	"module.bkun-dgea-ddl-creation-step-function.module.bkun-dgea-ddl-creation-step-function.aws_sfn_state_machine.this": {
		"address": "module.bkun-dgea-ddl-creation-step-function.module.bkun-dgea-ddl-creation-step-function.aws_sfn_state_machine.this",
		"config": {
			"definition": {
				"references": [
					"var.definition",
				],
			},
			"name": {
				"references": [
					"var.name",
				],
			},
			"role_arn": {
				"references": [
					"var.role_arn",
				],
			},
			"tags": {
				"references": [
					"var.tags",
					"local.tags",
				],
			},
		},
		"count":               {},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "module.bkun-dgea-ddl-creation-step-function.module.bkun-dgea-ddl-creation-step-function",
		"name":                "this",
		"provider_config_key": "module.bkun-dgea-ddl-creation-step-function.module.bkun-dgea-ddl-creation-step-function:aws",
		"provisioners":        [],
		"type":                "aws_sfn_state_machine",
	},
	"module.bkun-dgea-ddl-creation-step-function.module.bkun-dgea-ddl-creation-step-function.data.aws_caller_identity.current": {
		"address":             "module.bkun-dgea-ddl-creation-step-function.module.bkun-dgea-ddl-creation-step-function.data.aws_caller_identity.current",
		"config":              {},
		"count":               {},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "data",
		"module_address":      "module.bkun-dgea-ddl-creation-step-function.module.bkun-dgea-ddl-creation-step-function",
		"name":                "current",
		"provider_config_key": "module.bkun-dgea-ddl-creation-step-function.module.bkun-dgea-ddl-creation-step-function:aws",
		"provisioners":        [],
		"type":                "aws_caller_identity",
	},
	"module.bkun-dgea-ddl-creation-step-function.module.bkun-dgea-ddl-creation-step-function.data.aws_region.current": {
		"address":             "module.bkun-dgea-ddl-creation-step-function.module.bkun-dgea-ddl-creation-step-function.data.aws_region.current",
		"config":              {},
		"count":               {},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "data",
		"module_address":      "module.bkun-dgea-ddl-creation-step-function.module.bkun-dgea-ddl-creation-step-function",
		"name":                "current",
		"provider_config_key": "module.bkun-dgea-ddl-creation-step-function.module.bkun-dgea-ddl-creation-step-function:aws",
		"provisioners":        [],
		"type":                "aws_region",
	},
	"module.bkun-dgea-emr-setup-stepfunction.data.aws_caller_identity.current": {
		"address":             "module.bkun-dgea-emr-setup-stepfunction.data.aws_caller_identity.current",
		"config":              {},
		"count":               {},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "data",
		"module_address":      "module.bkun-dgea-emr-setup-stepfunction",
		"name":                "current",
		"provider_config_key": "module.bkun-dgea-emr-setup-stepfunction:aws",
		"provisioners":        [],
		"type":                "aws_caller_identity",
	},
	"module.bkun-dgea-emr-setup-stepfunction.data.aws_region.current": {
		"address":             "module.bkun-dgea-emr-setup-stepfunction.data.aws_region.current",
		"config":              {},
		"count":               {},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "data",
		"module_address":      "module.bkun-dgea-emr-setup-stepfunction",
		"name":                "current",
		"provider_config_key": "module.bkun-dgea-emr-setup-stepfunction:aws",
		"provisioners":        [],
		"type":                "aws_region",
	},
	"module.bkun-dgea-emr-setup-stepfunction.module.bkun-dgea-etl-emr-cluster-setup-stepfunction.aws_iam_policy.sfn_cw_policy": {
		"address": "module.bkun-dgea-emr-setup-stepfunction.module.bkun-dgea-etl-emr-cluster-setup-stepfunction.aws_iam_policy.sfn_cw_policy",
		"config": {
			"description": {
				"constant_value": "This policy allows step function to send cloudwatch events",
			},
			"name": {
				"references": [
					"var.env",
				],
			},
			"policy": {
				"references": [
					"var.sfn_cw_policy_path",
					"var.env",
					"data.aws_caller_identity.current.account_id",
					"data.aws_caller_identity.current",
					"data.aws_region.current.name",
					"data.aws_region.current",
				],
			},
		},
		"count": {
			"references": [
				"var.create_sfn_role",
			],
		},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "module.bkun-dgea-emr-setup-stepfunction.module.bkun-dgea-etl-emr-cluster-setup-stepfunction",
		"name":                "sfn_cw_policy",
		"provider_config_key": "module.bkun-dgea-emr-setup-stepfunction.module.bkun-dgea-etl-emr-cluster-setup-stepfunction:aws",
		"provisioners":        [],
		"type":                "aws_iam_policy",
	},
	"module.bkun-dgea-emr-setup-stepfunction.module.bkun-dgea-etl-emr-cluster-setup-stepfunction.aws_iam_policy.sfn_ec2_policy": {
		"address": "module.bkun-dgea-emr-setup-stepfunction.module.bkun-dgea-etl-emr-cluster-setup-stepfunction.aws_iam_policy.sfn_ec2_policy",
		"config": {
			"description": {
				"constant_value": "This policy allows step function to set up EMR cluster",
			},
			"name": {
				"references": [
					"var.env",
				],
			},
			"policy": {
				"references": [
					"var.sfn_ec2_policy_path",
					"data.aws_caller_identity.current.account_id",
					"data.aws_caller_identity.current",
					"data.aws_region.current.name",
					"data.aws_region.current",
				],
			},
		},
		"count": {
			"references": [
				"var.create_sfn_role",
			],
		},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "module.bkun-dgea-emr-setup-stepfunction.module.bkun-dgea-etl-emr-cluster-setup-stepfunction",
		"name":                "sfn_ec2_policy",
		"provider_config_key": "module.bkun-dgea-emr-setup-stepfunction.module.bkun-dgea-etl-emr-cluster-setup-stepfunction:aws",
		"provisioners":        [],
		"type":                "aws_iam_policy",
	},
	"module.bkun-dgea-emr-setup-stepfunction.module.bkun-dgea-etl-emr-cluster-setup-stepfunction.aws_iam_policy.sfn_emr_policy": {
		"address": "module.bkun-dgea-emr-setup-stepfunction.module.bkun-dgea-etl-emr-cluster-setup-stepfunction.aws_iam_policy.sfn_emr_policy",
		"config": {
			"description": {
				"constant_value": "This policy allows step function to set up EMR cluster",
			},
			"name": {
				"references": [
					"var.env",
				],
			},
			"policy": {
				"references": [
					"var.sfn_emr_policy_path",
					"data.aws_caller_identity.current.account_id",
					"data.aws_caller_identity.current",
					"var.env",
				],
			},
		},
		"count": {
			"references": [
				"var.create_sfn_role",
			],
		},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "module.bkun-dgea-emr-setup-stepfunction.module.bkun-dgea-etl-emr-cluster-setup-stepfunction",
		"name":                "sfn_emr_policy",
		"provider_config_key": "module.bkun-dgea-emr-setup-stepfunction.module.bkun-dgea-etl-emr-cluster-setup-stepfunction:aws",
		"provisioners":        [],
		"type":                "aws_iam_policy",
	},
	"module.bkun-dgea-emr-setup-stepfunction.module.bkun-dgea-etl-emr-cluster-setup-stepfunction.aws_iam_policy.sfn_policy": {
		"address": "module.bkun-dgea-emr-setup-stepfunction.module.bkun-dgea-etl-emr-cluster-setup-stepfunction.aws_iam_policy.sfn_policy",
		"config": {
			"description": {
				"constant_value": "This policy provides basic permission for step function executions.",
			},
			"name": {
				"references": [
					"var.env",
				],
			},
			"policy": {
				"references": [
					"var.sfn_policy_path",
					"data.aws_caller_identity.current.account_id",
					"data.aws_caller_identity.current",
					"data.aws_region.current.name",
					"data.aws_region.current",
				],
			},
		},
		"count": {
			"references": [
				"var.create_sfn_role",
			],
		},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "module.bkun-dgea-emr-setup-stepfunction.module.bkun-dgea-etl-emr-cluster-setup-stepfunction",
		"name":                "sfn_policy",
		"provider_config_key": "module.bkun-dgea-emr-setup-stepfunction.module.bkun-dgea-etl-emr-cluster-setup-stepfunction:aws",
		"provisioners":        [],
		"type":                "aws_iam_policy",
	},
	"module.bkun-dgea-emr-setup-stepfunction.module.bkun-dgea-etl-emr-cluster-setup-stepfunction.aws_iam_policy.sfn_s3_policy": {
		"address": "module.bkun-dgea-emr-setup-stepfunction.module.bkun-dgea-etl-emr-cluster-setup-stepfunction.aws_iam_policy.sfn_s3_policy",
		"config": {
			"description": {
				"constant_value": "This policy allows step function to set up EMR cluster",
			},
			"name": {
				"references": [
					"var.env",
				],
			},
			"policy": {
				"references": [
					"var.sfn_s3_policy_path",
					"data.aws_caller_identity.current.account_id",
					"data.aws_caller_identity.current",
					"data.aws_region.current.name",
					"data.aws_region.current",
					"var.env",
				],
			},
		},
		"count": {
			"references": [
				"var.create_sfn_role",
			],
		},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "module.bkun-dgea-emr-setup-stepfunction.module.bkun-dgea-etl-emr-cluster-setup-stepfunction",
		"name":                "sfn_s3_policy",
		"provider_config_key": "module.bkun-dgea-emr-setup-stepfunction.module.bkun-dgea-etl-emr-cluster-setup-stepfunction:aws",
		"provisioners":        [],
		"type":                "aws_iam_policy",
	},
	"module.bkun-dgea-emr-setup-stepfunction.module.bkun-dgea-etl-emr-cluster-setup-stepfunction.aws_iam_role.iam_for_sfn": {
		"address": "module.bkun-dgea-emr-setup-stepfunction.module.bkun-dgea-etl-emr-cluster-setup-stepfunction.aws_iam_role.iam_for_sfn",
		"config": {
			"assume_role_policy": {
				"constant_value": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Action\": \"sts:AssumeRole\",\n      \"Principal\": {\n        \"Service\": \"states.amazonaws.com\"\n      },\n      \"Effect\": \"Allow\"\n    }\n  ]\n}\n",
			},
			"name": {
				"references": [
					"var.env",
				],
			},
			"tags": {
				"references": [
					"var.tags",
					"var.env",
				],
			},
		},
		"count": {
			"references": [
				"var.create_sfn_role",
			],
		},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "module.bkun-dgea-emr-setup-stepfunction.module.bkun-dgea-etl-emr-cluster-setup-stepfunction",
		"name":                "iam_for_sfn",
		"provider_config_key": "module.bkun-dgea-emr-setup-stepfunction.module.bkun-dgea-etl-emr-cluster-setup-stepfunction:aws",
		"provisioners":        [],
		"type":                "aws_iam_role",
	},
	"module.bkun-dgea-emr-setup-stepfunction.module.bkun-dgea-etl-emr-cluster-setup-stepfunction.aws_iam_role_policy_attachment.lambda-access-attach": {
		"address": "module.bkun-dgea-emr-setup-stepfunction.module.bkun-dgea-etl-emr-cluster-setup-stepfunction.aws_iam_role_policy_attachment.lambda-access-attach",
		"config": {
			"policy_arn": {
				"constant_value": "arn:aws:iam::aws:policy/service-role/AWSLambdaRole",
			},
			"role": {
				"references": [
					"aws_iam_role.iam_for_sfn[0].name",
					"aws_iam_role.iam_for_sfn[0]",
					"aws_iam_role.iam_for_sfn",
				],
			},
		},
		"count": {
			"references": [
				"var.create_sfn_role",
			],
		},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "module.bkun-dgea-emr-setup-stepfunction.module.bkun-dgea-etl-emr-cluster-setup-stepfunction",
		"name":                "lambda-access-attach",
		"provider_config_key": "module.bkun-dgea-emr-setup-stepfunction.module.bkun-dgea-etl-emr-cluster-setup-stepfunction:aws",
		"provisioners":        [],
		"type":                "aws_iam_role_policy_attachment",
	},
	"module.bkun-dgea-emr-setup-stepfunction.module.bkun-dgea-etl-emr-cluster-setup-stepfunction.aws_iam_role_policy_attachment.sfn-attach": {
		"address": "module.bkun-dgea-emr-setup-stepfunction.module.bkun-dgea-etl-emr-cluster-setup-stepfunction.aws_iam_role_policy_attachment.sfn-attach",
		"config": {
			"policy_arn": {
				"references": [
					"var.create_sfn_role",
					"aws_iam_policy.sfn_policy[0].arn",
					"aws_iam_policy.sfn_policy[0]",
					"aws_iam_policy.sfn_policy",
					"data.aws_caller_identity.current.account_id",
					"data.aws_caller_identity.current",
					"var.env",
				],
			},
			"role": {
				"references": [
					"aws_iam_role.iam_for_sfn[0].name",
					"aws_iam_role.iam_for_sfn[0]",
					"aws_iam_role.iam_for_sfn",
				],
			},
		},
		"count": {
			"references": [
				"var.create_sfn_role",
			],
		},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "module.bkun-dgea-emr-setup-stepfunction.module.bkun-dgea-etl-emr-cluster-setup-stepfunction",
		"name":                "sfn-attach",
		"provider_config_key": "module.bkun-dgea-emr-setup-stepfunction.module.bkun-dgea-etl-emr-cluster-setup-stepfunction:aws",
		"provisioners":        [],
		"type":                "aws_iam_role_policy_attachment",
	},
	"module.bkun-dgea-emr-setup-stepfunction.module.bkun-dgea-etl-emr-cluster-setup-stepfunction.aws_iam_role_policy_attachment.step-cloudwatch-attach": {
		"address": "module.bkun-dgea-emr-setup-stepfunction.module.bkun-dgea-etl-emr-cluster-setup-stepfunction.aws_iam_role_policy_attachment.step-cloudwatch-attach",
		"config": {
			"policy_arn": {
				"references": [
					"var.create_sfn_role",
					"aws_iam_policy.sfn_cw_policy[0].arn",
					"aws_iam_policy.sfn_cw_policy[0]",
					"aws_iam_policy.sfn_cw_policy",
					"data.aws_caller_identity.current.account_id",
					"data.aws_caller_identity.current",
					"var.env",
				],
			},
			"role": {
				"references": [
					"aws_iam_role.iam_for_sfn[0].name",
					"aws_iam_role.iam_for_sfn[0]",
					"aws_iam_role.iam_for_sfn",
				],
			},
		},
		"count": {
			"references": [
				"var.create_sfn_role",
			],
		},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "module.bkun-dgea-emr-setup-stepfunction.module.bkun-dgea-etl-emr-cluster-setup-stepfunction",
		"name":                "step-cloudwatch-attach",
		"provider_config_key": "module.bkun-dgea-emr-setup-stepfunction.module.bkun-dgea-etl-emr-cluster-setup-stepfunction:aws",
		"provisioners":        [],
		"type":                "aws_iam_role_policy_attachment",
	},
	"module.bkun-dgea-emr-setup-stepfunction.module.bkun-dgea-etl-emr-cluster-setup-stepfunction.aws_iam_role_policy_attachment.step-ec2-attach": {
		"address": "module.bkun-dgea-emr-setup-stepfunction.module.bkun-dgea-etl-emr-cluster-setup-stepfunction.aws_iam_role_policy_attachment.step-ec2-attach",
		"config": {
			"policy_arn": {
				"references": [
					"var.create_sfn_role",
					"aws_iam_policy.sfn_ec2_policy[0].arn",
					"aws_iam_policy.sfn_ec2_policy[0]",
					"aws_iam_policy.sfn_ec2_policy",
					"data.aws_caller_identity.current.account_id",
					"data.aws_caller_identity.current",
					"var.env",
				],
			},
			"role": {
				"references": [
					"aws_iam_role.iam_for_sfn[0].name",
					"aws_iam_role.iam_for_sfn[0]",
					"aws_iam_role.iam_for_sfn",
				],
			},
		},
		"count": {
			"references": [
				"var.create_sfn_role",
			],
		},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "module.bkun-dgea-emr-setup-stepfunction.module.bkun-dgea-etl-emr-cluster-setup-stepfunction",
		"name":                "step-ec2-attach",
		"provider_config_key": "module.bkun-dgea-emr-setup-stepfunction.module.bkun-dgea-etl-emr-cluster-setup-stepfunction:aws",
		"provisioners":        [],
		"type":                "aws_iam_role_policy_attachment",
	},
	"module.bkun-dgea-emr-setup-stepfunction.module.bkun-dgea-etl-emr-cluster-setup-stepfunction.aws_iam_role_policy_attachment.step-emr-attach": {
		"address": "module.bkun-dgea-emr-setup-stepfunction.module.bkun-dgea-etl-emr-cluster-setup-stepfunction.aws_iam_role_policy_attachment.step-emr-attach",
		"config": {
			"policy_arn": {
				"references": [
					"var.create_sfn_role",
					"aws_iam_policy.sfn_emr_policy[0].arn",
					"aws_iam_policy.sfn_emr_policy[0]",
					"aws_iam_policy.sfn_emr_policy",
					"data.aws_caller_identity.current.account_id",
					"data.aws_caller_identity.current",
					"var.env",
				],
			},
			"role": {
				"references": [
					"aws_iam_role.iam_for_sfn[0].name",
					"aws_iam_role.iam_for_sfn[0]",
					"aws_iam_role.iam_for_sfn",
				],
			},
		},
		"count": {
			"references": [
				"var.create_sfn_role",
			],
		},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "module.bkun-dgea-emr-setup-stepfunction.module.bkun-dgea-etl-emr-cluster-setup-stepfunction",
		"name":                "step-emr-attach",
		"provider_config_key": "module.bkun-dgea-emr-setup-stepfunction.module.bkun-dgea-etl-emr-cluster-setup-stepfunction:aws",
		"provisioners":        [],
		"type":                "aws_iam_role_policy_attachment",
	},
	"module.bkun-dgea-emr-setup-stepfunction.module.bkun-dgea-etl-emr-cluster-setup-stepfunction.aws_iam_role_policy_attachment.step-s3-attach": {
		"address": "module.bkun-dgea-emr-setup-stepfunction.module.bkun-dgea-etl-emr-cluster-setup-stepfunction.aws_iam_role_policy_attachment.step-s3-attach",
		"config": {
			"policy_arn": {
				"references": [
					"var.create_sfn_role",
					"aws_iam_policy.sfn_s3_policy[0].arn",
					"aws_iam_policy.sfn_s3_policy[0]",
					"aws_iam_policy.sfn_s3_policy",
					"data.aws_caller_identity.current.account_id",
					"data.aws_caller_identity.current",
					"var.env",
				],
			},
			"role": {
				"references": [
					"aws_iam_role.iam_for_sfn[0].name",
					"aws_iam_role.iam_for_sfn[0]",
					"aws_iam_role.iam_for_sfn",
				],
			},
		},
		"count": {
			"references": [
				"var.create_sfn_role",
			],
		},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "module.bkun-dgea-emr-setup-stepfunction.module.bkun-dgea-etl-emr-cluster-setup-stepfunction",
		"name":                "step-s3-attach",
		"provider_config_key": "module.bkun-dgea-emr-setup-stepfunction.module.bkun-dgea-etl-emr-cluster-setup-stepfunction:aws",
		"provisioners":        [],
		"type":                "aws_iam_role_policy_attachment",
	},
	"module.bkun-dgea-emr-setup-stepfunction.module.bkun-dgea-etl-emr-cluster-setup-stepfunction.aws_sfn_state_machine.this": {
		"address": "module.bkun-dgea-emr-setup-stepfunction.module.bkun-dgea-etl-emr-cluster-setup-stepfunction.aws_sfn_state_machine.this",
		"config": {
			"definition": {
				"references": [
					"var.definition",
				],
			},
			"name": {
				"references": [
					"var.name",
				],
			},
			"role_arn": {
				"references": [
					"var.role_arn",
				],
			},
			"tags": {
				"references": [
					"var.tags",
					"local.tags",
				],
			},
		},
		"count":               {},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "module.bkun-dgea-emr-setup-stepfunction.module.bkun-dgea-etl-emr-cluster-setup-stepfunction",
		"name":                "this",
		"provider_config_key": "module.bkun-dgea-emr-setup-stepfunction.module.bkun-dgea-etl-emr-cluster-setup-stepfunction:aws",
		"provisioners":        [],
		"type":                "aws_sfn_state_machine",
	},
	"module.bkun-dgea-emr-setup-stepfunction.module.bkun-dgea-etl-emr-cluster-setup-stepfunction.data.aws_caller_identity.current": {
		"address":             "module.bkun-dgea-emr-setup-stepfunction.module.bkun-dgea-etl-emr-cluster-setup-stepfunction.data.aws_caller_identity.current",
		"config":              {},
		"count":               {},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "data",
		"module_address":      "module.bkun-dgea-emr-setup-stepfunction.module.bkun-dgea-etl-emr-cluster-setup-stepfunction",
		"name":                "current",
		"provider_config_key": "module.bkun-dgea-emr-setup-stepfunction.module.bkun-dgea-etl-emr-cluster-setup-stepfunction:aws",
		"provisioners":        [],
		"type":                "aws_caller_identity",
	},
	"module.bkun-dgea-emr-setup-stepfunction.module.bkun-dgea-etl-emr-cluster-setup-stepfunction.data.aws_region.current": {
		"address":             "module.bkun-dgea-emr-setup-stepfunction.module.bkun-dgea-etl-emr-cluster-setup-stepfunction.data.aws_region.current",
		"config":              {},
		"count":               {},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "data",
		"module_address":      "module.bkun-dgea-emr-setup-stepfunction.module.bkun-dgea-etl-emr-cluster-setup-stepfunction",
		"name":                "current",
		"provider_config_key": "module.bkun-dgea-emr-setup-stepfunction.module.bkun-dgea-etl-emr-cluster-setup-stepfunction:aws",
		"provisioners":        [],
		"type":                "aws_region",
	},
	"module.bkun-dgea-etl-stepfunction.data.aws_caller_identity.current": {
		"address":             "module.bkun-dgea-etl-stepfunction.data.aws_caller_identity.current",
		"config":              {},
		"count":               {},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "data",
		"module_address":      "module.bkun-dgea-etl-stepfunction",
		"name":                "current",
		"provider_config_key": "module.bkun-dgea-etl-stepfunction:aws",
		"provisioners":        [],
		"type":                "aws_caller_identity",
	},
	"module.bkun-dgea-etl-stepfunction.data.aws_region.current": {
		"address":             "module.bkun-dgea-etl-stepfunction.data.aws_region.current",
		"config":              {},
		"count":               {},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "data",
		"module_address":      "module.bkun-dgea-etl-stepfunction",
		"name":                "current",
		"provider_config_key": "module.bkun-dgea-etl-stepfunction:aws",
		"provisioners":        [],
		"type":                "aws_region",
	},
	"module.bkun-dgea-etl-stepfunction.module.bkun-dgea-etl-stepfunction.aws_iam_policy.sfn_cw_policy": {
		"address": "module.bkun-dgea-etl-stepfunction.module.bkun-dgea-etl-stepfunction.aws_iam_policy.sfn_cw_policy",
		"config": {
			"description": {
				"constant_value": "This policy allows step function to send cloudwatch events",
			},
			"name": {
				"references": [
					"var.env",
				],
			},
			"policy": {
				"references": [
					"var.sfn_cw_policy_path",
					"var.env",
					"data.aws_caller_identity.current.account_id",
					"data.aws_caller_identity.current",
					"data.aws_region.current.name",
					"data.aws_region.current",
				],
			},
		},
		"count": {
			"references": [
				"var.create_sfn_role",
			],
		},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "module.bkun-dgea-etl-stepfunction.module.bkun-dgea-etl-stepfunction",
		"name":                "sfn_cw_policy",
		"provider_config_key": "module.bkun-dgea-etl-stepfunction.module.bkun-dgea-etl-stepfunction:aws",
		"provisioners":        [],
		"type":                "aws_iam_policy",
	},
	"module.bkun-dgea-etl-stepfunction.module.bkun-dgea-etl-stepfunction.aws_iam_policy.sfn_ec2_policy": {
		"address": "module.bkun-dgea-etl-stepfunction.module.bkun-dgea-etl-stepfunction.aws_iam_policy.sfn_ec2_policy",
		"config": {
			"description": {
				"constant_value": "This policy allows step function to set up EMR cluster",
			},
			"name": {
				"references": [
					"var.env",
				],
			},
			"policy": {
				"references": [
					"var.sfn_ec2_policy_path",
					"data.aws_caller_identity.current.account_id",
					"data.aws_caller_identity.current",
					"data.aws_region.current.name",
					"data.aws_region.current",
				],
			},
		},
		"count": {
			"references": [
				"var.create_sfn_role",
			],
		},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "module.bkun-dgea-etl-stepfunction.module.bkun-dgea-etl-stepfunction",
		"name":                "sfn_ec2_policy",
		"provider_config_key": "module.bkun-dgea-etl-stepfunction.module.bkun-dgea-etl-stepfunction:aws",
		"provisioners":        [],
		"type":                "aws_iam_policy",
	},
	"module.bkun-dgea-etl-stepfunction.module.bkun-dgea-etl-stepfunction.aws_iam_policy.sfn_emr_policy": {
		"address": "module.bkun-dgea-etl-stepfunction.module.bkun-dgea-etl-stepfunction.aws_iam_policy.sfn_emr_policy",
		"config": {
			"description": {
				"constant_value": "This policy allows step function to set up EMR cluster",
			},
			"name": {
				"references": [
					"var.env",
				],
			},
			"policy": {
				"references": [
					"var.sfn_emr_policy_path",
					"data.aws_caller_identity.current.account_id",
					"data.aws_caller_identity.current",
					"var.env",
				],
			},
		},
		"count": {
			"references": [
				"var.create_sfn_role",
			],
		},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "module.bkun-dgea-etl-stepfunction.module.bkun-dgea-etl-stepfunction",
		"name":                "sfn_emr_policy",
		"provider_config_key": "module.bkun-dgea-etl-stepfunction.module.bkun-dgea-etl-stepfunction:aws",
		"provisioners":        [],
		"type":                "aws_iam_policy",
	},
	"module.bkun-dgea-etl-stepfunction.module.bkun-dgea-etl-stepfunction.aws_iam_policy.sfn_policy": {
		"address": "module.bkun-dgea-etl-stepfunction.module.bkun-dgea-etl-stepfunction.aws_iam_policy.sfn_policy",
		"config": {
			"description": {
				"constant_value": "This policy provides basic permission for step function executions.",
			},
			"name": {
				"references": [
					"var.env",
				],
			},
			"policy": {
				"references": [
					"var.sfn_policy_path",
					"data.aws_caller_identity.current.account_id",
					"data.aws_caller_identity.current",
					"data.aws_region.current.name",
					"data.aws_region.current",
				],
			},
		},
		"count": {
			"references": [
				"var.create_sfn_role",
			],
		},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "module.bkun-dgea-etl-stepfunction.module.bkun-dgea-etl-stepfunction",
		"name":                "sfn_policy",
		"provider_config_key": "module.bkun-dgea-etl-stepfunction.module.bkun-dgea-etl-stepfunction:aws",
		"provisioners":        [],
		"type":                "aws_iam_policy",
	},
	"module.bkun-dgea-etl-stepfunction.module.bkun-dgea-etl-stepfunction.aws_iam_policy.sfn_s3_policy": {
		"address": "module.bkun-dgea-etl-stepfunction.module.bkun-dgea-etl-stepfunction.aws_iam_policy.sfn_s3_policy",
		"config": {
			"description": {
				"constant_value": "This policy allows step function to set up EMR cluster",
			},
			"name": {
				"references": [
					"var.env",
				],
			},
			"policy": {
				"references": [
					"var.sfn_s3_policy_path",
					"data.aws_caller_identity.current.account_id",
					"data.aws_caller_identity.current",
					"data.aws_region.current.name",
					"data.aws_region.current",
					"var.env",
				],
			},
		},
		"count": {
			"references": [
				"var.create_sfn_role",
			],
		},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "module.bkun-dgea-etl-stepfunction.module.bkun-dgea-etl-stepfunction",
		"name":                "sfn_s3_policy",
		"provider_config_key": "module.bkun-dgea-etl-stepfunction.module.bkun-dgea-etl-stepfunction:aws",
		"provisioners":        [],
		"type":                "aws_iam_policy",
	},
	"module.bkun-dgea-etl-stepfunction.module.bkun-dgea-etl-stepfunction.aws_iam_role.iam_for_sfn": {
		"address": "module.bkun-dgea-etl-stepfunction.module.bkun-dgea-etl-stepfunction.aws_iam_role.iam_for_sfn",
		"config": {
			"assume_role_policy": {
				"constant_value": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Action\": \"sts:AssumeRole\",\n      \"Principal\": {\n        \"Service\": \"states.amazonaws.com\"\n      },\n      \"Effect\": \"Allow\"\n    }\n  ]\n}\n",
			},
			"name": {
				"references": [
					"var.env",
				],
			},
			"tags": {
				"references": [
					"var.tags",
					"var.env",
				],
			},
		},
		"count": {
			"references": [
				"var.create_sfn_role",
			],
		},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "module.bkun-dgea-etl-stepfunction.module.bkun-dgea-etl-stepfunction",
		"name":                "iam_for_sfn",
		"provider_config_key": "module.bkun-dgea-etl-stepfunction.module.bkun-dgea-etl-stepfunction:aws",
		"provisioners":        [],
		"type":                "aws_iam_role",
	},
	"module.bkun-dgea-etl-stepfunction.module.bkun-dgea-etl-stepfunction.aws_iam_role_policy_attachment.lambda-access-attach": {
		"address": "module.bkun-dgea-etl-stepfunction.module.bkun-dgea-etl-stepfunction.aws_iam_role_policy_attachment.lambda-access-attach",
		"config": {
			"policy_arn": {
				"constant_value": "arn:aws:iam::aws:policy/service-role/AWSLambdaRole",
			},
			"role": {
				"references": [
					"aws_iam_role.iam_for_sfn[0].name",
					"aws_iam_role.iam_for_sfn[0]",
					"aws_iam_role.iam_for_sfn",
				],
			},
		},
		"count": {
			"references": [
				"var.create_sfn_role",
			],
		},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "module.bkun-dgea-etl-stepfunction.module.bkun-dgea-etl-stepfunction",
		"name":                "lambda-access-attach",
		"provider_config_key": "module.bkun-dgea-etl-stepfunction.module.bkun-dgea-etl-stepfunction:aws",
		"provisioners":        [],
		"type":                "aws_iam_role_policy_attachment",
	},
	"module.bkun-dgea-etl-stepfunction.module.bkun-dgea-etl-stepfunction.aws_iam_role_policy_attachment.sfn-attach": {
		"address": "module.bkun-dgea-etl-stepfunction.module.bkun-dgea-etl-stepfunction.aws_iam_role_policy_attachment.sfn-attach",
		"config": {
			"policy_arn": {
				"references": [
					"var.create_sfn_role",
					"aws_iam_policy.sfn_policy[0].arn",
					"aws_iam_policy.sfn_policy[0]",
					"aws_iam_policy.sfn_policy",
					"data.aws_caller_identity.current.account_id",
					"data.aws_caller_identity.current",
					"var.env",
				],
			},
			"role": {
				"references": [
					"aws_iam_role.iam_for_sfn[0].name",
					"aws_iam_role.iam_for_sfn[0]",
					"aws_iam_role.iam_for_sfn",
				],
			},
		},
		"count": {
			"references": [
				"var.create_sfn_role",
			],
		},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "module.bkun-dgea-etl-stepfunction.module.bkun-dgea-etl-stepfunction",
		"name":                "sfn-attach",
		"provider_config_key": "module.bkun-dgea-etl-stepfunction.module.bkun-dgea-etl-stepfunction:aws",
		"provisioners":        [],
		"type":                "aws_iam_role_policy_attachment",
	},
	"module.bkun-dgea-etl-stepfunction.module.bkun-dgea-etl-stepfunction.aws_iam_role_policy_attachment.step-cloudwatch-attach": {
		"address": "module.bkun-dgea-etl-stepfunction.module.bkun-dgea-etl-stepfunction.aws_iam_role_policy_attachment.step-cloudwatch-attach",
		"config": {
			"policy_arn": {
				"references": [
					"var.create_sfn_role",
					"aws_iam_policy.sfn_cw_policy[0].arn",
					"aws_iam_policy.sfn_cw_policy[0]",
					"aws_iam_policy.sfn_cw_policy",
					"data.aws_caller_identity.current.account_id",
					"data.aws_caller_identity.current",
					"var.env",
				],
			},
			"role": {
				"references": [
					"aws_iam_role.iam_for_sfn[0].name",
					"aws_iam_role.iam_for_sfn[0]",
					"aws_iam_role.iam_for_sfn",
				],
			},
		},
		"count": {
			"references": [
				"var.create_sfn_role",
			],
		},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "module.bkun-dgea-etl-stepfunction.module.bkun-dgea-etl-stepfunction",
		"name":                "step-cloudwatch-attach",
		"provider_config_key": "module.bkun-dgea-etl-stepfunction.module.bkun-dgea-etl-stepfunction:aws",
		"provisioners":        [],
		"type":                "aws_iam_role_policy_attachment",
	},
	"module.bkun-dgea-etl-stepfunction.module.bkun-dgea-etl-stepfunction.aws_iam_role_policy_attachment.step-ec2-attach": {
		"address": "module.bkun-dgea-etl-stepfunction.module.bkun-dgea-etl-stepfunction.aws_iam_role_policy_attachment.step-ec2-attach",
		"config": {
			"policy_arn": {
				"references": [
					"var.create_sfn_role",
					"aws_iam_policy.sfn_ec2_policy[0].arn",
					"aws_iam_policy.sfn_ec2_policy[0]",
					"aws_iam_policy.sfn_ec2_policy",
					"data.aws_caller_identity.current.account_id",
					"data.aws_caller_identity.current",
					"var.env",
				],
			},
			"role": {
				"references": [
					"aws_iam_role.iam_for_sfn[0].name",
					"aws_iam_role.iam_for_sfn[0]",
					"aws_iam_role.iam_for_sfn",
				],
			},
		},
		"count": {
			"references": [
				"var.create_sfn_role",
			],
		},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "module.bkun-dgea-etl-stepfunction.module.bkun-dgea-etl-stepfunction",
		"name":                "step-ec2-attach",
		"provider_config_key": "module.bkun-dgea-etl-stepfunction.module.bkun-dgea-etl-stepfunction:aws",
		"provisioners":        [],
		"type":                "aws_iam_role_policy_attachment",
	},
	"module.bkun-dgea-etl-stepfunction.module.bkun-dgea-etl-stepfunction.aws_iam_role_policy_attachment.step-emr-attach": {
		"address": "module.bkun-dgea-etl-stepfunction.module.bkun-dgea-etl-stepfunction.aws_iam_role_policy_attachment.step-emr-attach",
		"config": {
			"policy_arn": {
				"references": [
					"var.create_sfn_role",
					"aws_iam_policy.sfn_emr_policy[0].arn",
					"aws_iam_policy.sfn_emr_policy[0]",
					"aws_iam_policy.sfn_emr_policy",
					"data.aws_caller_identity.current.account_id",
					"data.aws_caller_identity.current",
					"var.env",
				],
			},
			"role": {
				"references": [
					"aws_iam_role.iam_for_sfn[0].name",
					"aws_iam_role.iam_for_sfn[0]",
					"aws_iam_role.iam_for_sfn",
				],
			},
		},
		"count": {
			"references": [
				"var.create_sfn_role",
			],
		},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "module.bkun-dgea-etl-stepfunction.module.bkun-dgea-etl-stepfunction",
		"name":                "step-emr-attach",
		"provider_config_key": "module.bkun-dgea-etl-stepfunction.module.bkun-dgea-etl-stepfunction:aws",
		"provisioners":        [],
		"type":                "aws_iam_role_policy_attachment",
	},
	"module.bkun-dgea-etl-stepfunction.module.bkun-dgea-etl-stepfunction.aws_iam_role_policy_attachment.step-s3-attach": {
		"address": "module.bkun-dgea-etl-stepfunction.module.bkun-dgea-etl-stepfunction.aws_iam_role_policy_attachment.step-s3-attach",
		"config": {
			"policy_arn": {
				"references": [
					"var.create_sfn_role",
					"aws_iam_policy.sfn_s3_policy[0].arn",
					"aws_iam_policy.sfn_s3_policy[0]",
					"aws_iam_policy.sfn_s3_policy",
					"data.aws_caller_identity.current.account_id",
					"data.aws_caller_identity.current",
					"var.env",
				],
			},
			"role": {
				"references": [
					"aws_iam_role.iam_for_sfn[0].name",
					"aws_iam_role.iam_for_sfn[0]",
					"aws_iam_role.iam_for_sfn",
				],
			},
		},
		"count": {
			"references": [
				"var.create_sfn_role",
			],
		},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "module.bkun-dgea-etl-stepfunction.module.bkun-dgea-etl-stepfunction",
		"name":                "step-s3-attach",
		"provider_config_key": "module.bkun-dgea-etl-stepfunction.module.bkun-dgea-etl-stepfunction:aws",
		"provisioners":        [],
		"type":                "aws_iam_role_policy_attachment",
	},
	"module.bkun-dgea-etl-stepfunction.module.bkun-dgea-etl-stepfunction.aws_sfn_state_machine.this": {
		"address": "module.bkun-dgea-etl-stepfunction.module.bkun-dgea-etl-stepfunction.aws_sfn_state_machine.this",
		"config": {
			"definition": {
				"references": [
					"var.definition",
				],
			},
			"name": {
				"references": [
					"var.name",
				],
			},
			"role_arn": {
				"references": [
					"var.role_arn",
				],
			},
			"tags": {
				"references": [
					"var.tags",
					"local.tags",
				],
			},
		},
		"count":               {},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "module.bkun-dgea-etl-stepfunction.module.bkun-dgea-etl-stepfunction",
		"name":                "this",
		"provider_config_key": "module.bkun-dgea-etl-stepfunction.module.bkun-dgea-etl-stepfunction:aws",
		"provisioners":        [],
		"type":                "aws_sfn_state_machine",
	},
	"module.bkun-dgea-etl-stepfunction.module.bkun-dgea-etl-stepfunction.data.aws_caller_identity.current": {
		"address":             "module.bkun-dgea-etl-stepfunction.module.bkun-dgea-etl-stepfunction.data.aws_caller_identity.current",
		"config":              {},
		"count":               {},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "data",
		"module_address":      "module.bkun-dgea-etl-stepfunction.module.bkun-dgea-etl-stepfunction",
		"name":                "current",
		"provider_config_key": "module.bkun-dgea-etl-stepfunction.module.bkun-dgea-etl-stepfunction:aws",
		"provisioners":        [],
		"type":                "aws_caller_identity",
	},
	"module.bkun-dgea-etl-stepfunction.module.bkun-dgea-etl-stepfunction.data.aws_region.current": {
		"address":             "module.bkun-dgea-etl-stepfunction.module.bkun-dgea-etl-stepfunction.data.aws_region.current",
		"config":              {},
		"count":               {},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "data",
		"module_address":      "module.bkun-dgea-etl-stepfunction.module.bkun-dgea-etl-stepfunction",
		"name":                "current",
		"provider_config_key": "module.bkun-dgea-etl-stepfunction.module.bkun-dgea-etl-stepfunction:aws",
		"provisioners":        [],
		"type":                "aws_region",
	},
	"module.bkun-dgea-maskout-data-copy.data.aws_caller_identity.current": {
		"address":             "module.bkun-dgea-maskout-data-copy.data.aws_caller_identity.current",
		"config":              {},
		"count":               {},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "data",
		"module_address":      "module.bkun-dgea-maskout-data-copy",
		"name":                "current",
		"provider_config_key": "module.bkun-dgea-maskout-data-copy:aws",
		"provisioners":        [],
		"type":                "aws_caller_identity",
	},
	"module.bkun-dgea-maskout-data-copy.data.aws_region.current": {
		"address":             "module.bkun-dgea-maskout-data-copy.data.aws_region.current",
		"config":              {},
		"count":               {},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "data",
		"module_address":      "module.bkun-dgea-maskout-data-copy",
		"name":                "current",
		"provider_config_key": "module.bkun-dgea-maskout-data-copy:aws",
		"provisioners":        [],
		"type":                "aws_region",
	},
	"module.bkun-dgea-maskout-data-copy.module.bkun-dgea-maskout-data-copy.aws_iam_policy.sfn_cw_policy": {
		"address": "module.bkun-dgea-maskout-data-copy.module.bkun-dgea-maskout-data-copy.aws_iam_policy.sfn_cw_policy",
		"config": {
			"description": {
				"constant_value": "This policy allows step function to send cloudwatch events",
			},
			"name": {
				"references": [
					"var.env",
				],
			},
			"policy": {
				"references": [
					"var.sfn_cw_policy_path",
					"var.env",
					"data.aws_caller_identity.current.account_id",
					"data.aws_caller_identity.current",
					"data.aws_region.current.name",
					"data.aws_region.current",
				],
			},
		},
		"count": {
			"references": [
				"var.create_sfn_role",
			],
		},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "module.bkun-dgea-maskout-data-copy.module.bkun-dgea-maskout-data-copy",
		"name":                "sfn_cw_policy",
		"provider_config_key": "module.bkun-dgea-maskout-data-copy.module.bkun-dgea-maskout-data-copy:aws",
		"provisioners":        [],
		"type":                "aws_iam_policy",
	},
	"module.bkun-dgea-maskout-data-copy.module.bkun-dgea-maskout-data-copy.aws_iam_policy.sfn_ec2_policy": {
		"address": "module.bkun-dgea-maskout-data-copy.module.bkun-dgea-maskout-data-copy.aws_iam_policy.sfn_ec2_policy",
		"config": {
			"description": {
				"constant_value": "This policy allows step function to set up EMR cluster",
			},
			"name": {
				"references": [
					"var.env",
				],
			},
			"policy": {
				"references": [
					"var.sfn_ec2_policy_path",
					"data.aws_caller_identity.current.account_id",
					"data.aws_caller_identity.current",
					"data.aws_region.current.name",
					"data.aws_region.current",
				],
			},
		},
		"count": {
			"references": [
				"var.create_sfn_role",
			],
		},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "module.bkun-dgea-maskout-data-copy.module.bkun-dgea-maskout-data-copy",
		"name":                "sfn_ec2_policy",
		"provider_config_key": "module.bkun-dgea-maskout-data-copy.module.bkun-dgea-maskout-data-copy:aws",
		"provisioners":        [],
		"type":                "aws_iam_policy",
	},
	"module.bkun-dgea-maskout-data-copy.module.bkun-dgea-maskout-data-copy.aws_iam_policy.sfn_emr_policy": {
		"address": "module.bkun-dgea-maskout-data-copy.module.bkun-dgea-maskout-data-copy.aws_iam_policy.sfn_emr_policy",
		"config": {
			"description": {
				"constant_value": "This policy allows step function to set up EMR cluster",
			},
			"name": {
				"references": [
					"var.env",
				],
			},
			"policy": {
				"references": [
					"var.sfn_emr_policy_path",
					"data.aws_caller_identity.current.account_id",
					"data.aws_caller_identity.current",
					"var.env",
				],
			},
		},
		"count": {
			"references": [
				"var.create_sfn_role",
			],
		},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "module.bkun-dgea-maskout-data-copy.module.bkun-dgea-maskout-data-copy",
		"name":                "sfn_emr_policy",
		"provider_config_key": "module.bkun-dgea-maskout-data-copy.module.bkun-dgea-maskout-data-copy:aws",
		"provisioners":        [],
		"type":                "aws_iam_policy",
	},
	"module.bkun-dgea-maskout-data-copy.module.bkun-dgea-maskout-data-copy.aws_iam_policy.sfn_policy": {
		"address": "module.bkun-dgea-maskout-data-copy.module.bkun-dgea-maskout-data-copy.aws_iam_policy.sfn_policy",
		"config": {
			"description": {
				"constant_value": "This policy provides basic permission for step function executions.",
			},
			"name": {
				"references": [
					"var.env",
				],
			},
			"policy": {
				"references": [
					"var.sfn_policy_path",
					"data.aws_caller_identity.current.account_id",
					"data.aws_caller_identity.current",
					"data.aws_region.current.name",
					"data.aws_region.current",
				],
			},
		},
		"count": {
			"references": [
				"var.create_sfn_role",
			],
		},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "module.bkun-dgea-maskout-data-copy.module.bkun-dgea-maskout-data-copy",
		"name":                "sfn_policy",
		"provider_config_key": "module.bkun-dgea-maskout-data-copy.module.bkun-dgea-maskout-data-copy:aws",
		"provisioners":        [],
		"type":                "aws_iam_policy",
	},
	"module.bkun-dgea-maskout-data-copy.module.bkun-dgea-maskout-data-copy.aws_iam_policy.sfn_s3_policy": {
		"address": "module.bkun-dgea-maskout-data-copy.module.bkun-dgea-maskout-data-copy.aws_iam_policy.sfn_s3_policy",
		"config": {
			"description": {
				"constant_value": "This policy allows step function to set up EMR cluster",
			},
			"name": {
				"references": [
					"var.env",
				],
			},
			"policy": {
				"references": [
					"var.sfn_s3_policy_path",
					"data.aws_caller_identity.current.account_id",
					"data.aws_caller_identity.current",
					"data.aws_region.current.name",
					"data.aws_region.current",
					"var.env",
				],
			},
		},
		"count": {
			"references": [
				"var.create_sfn_role",
			],
		},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "module.bkun-dgea-maskout-data-copy.module.bkun-dgea-maskout-data-copy",
		"name":                "sfn_s3_policy",
		"provider_config_key": "module.bkun-dgea-maskout-data-copy.module.bkun-dgea-maskout-data-copy:aws",
		"provisioners":        [],
		"type":                "aws_iam_policy",
	},
	"module.bkun-dgea-maskout-data-copy.module.bkun-dgea-maskout-data-copy.aws_iam_role.iam_for_sfn": {
		"address": "module.bkun-dgea-maskout-data-copy.module.bkun-dgea-maskout-data-copy.aws_iam_role.iam_for_sfn",
		"config": {
			"assume_role_policy": {
				"constant_value": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Action\": \"sts:AssumeRole\",\n      \"Principal\": {\n        \"Service\": \"states.amazonaws.com\"\n      },\n      \"Effect\": \"Allow\"\n    }\n  ]\n}\n",
			},
			"name": {
				"references": [
					"var.env",
				],
			},
			"tags": {
				"references": [
					"var.tags",
					"var.env",
				],
			},
		},
		"count": {
			"references": [
				"var.create_sfn_role",
			],
		},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "module.bkun-dgea-maskout-data-copy.module.bkun-dgea-maskout-data-copy",
		"name":                "iam_for_sfn",
		"provider_config_key": "module.bkun-dgea-maskout-data-copy.module.bkun-dgea-maskout-data-copy:aws",
		"provisioners":        [],
		"type":                "aws_iam_role",
	},
	"module.bkun-dgea-maskout-data-copy.module.bkun-dgea-maskout-data-copy.aws_iam_role_policy_attachment.lambda-access-attach": {
		"address": "module.bkun-dgea-maskout-data-copy.module.bkun-dgea-maskout-data-copy.aws_iam_role_policy_attachment.lambda-access-attach",
		"config": {
			"policy_arn": {
				"constant_value": "arn:aws:iam::aws:policy/service-role/AWSLambdaRole",
			},
			"role": {
				"references": [
					"aws_iam_role.iam_for_sfn[0].name",
					"aws_iam_role.iam_for_sfn[0]",
					"aws_iam_role.iam_for_sfn",
				],
			},
		},
		"count": {
			"references": [
				"var.create_sfn_role",
			],
		},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "module.bkun-dgea-maskout-data-copy.module.bkun-dgea-maskout-data-copy",
		"name":                "lambda-access-attach",
		"provider_config_key": "module.bkun-dgea-maskout-data-copy.module.bkun-dgea-maskout-data-copy:aws",
		"provisioners":        [],
		"type":                "aws_iam_role_policy_attachment",
	},
	"module.bkun-dgea-maskout-data-copy.module.bkun-dgea-maskout-data-copy.aws_iam_role_policy_attachment.sfn-attach": {
		"address": "module.bkun-dgea-maskout-data-copy.module.bkun-dgea-maskout-data-copy.aws_iam_role_policy_attachment.sfn-attach",
		"config": {
			"policy_arn": {
				"references": [
					"var.create_sfn_role",
					"aws_iam_policy.sfn_policy[0].arn",
					"aws_iam_policy.sfn_policy[0]",
					"aws_iam_policy.sfn_policy",
					"data.aws_caller_identity.current.account_id",
					"data.aws_caller_identity.current",
					"var.env",
				],
			},
			"role": {
				"references": [
					"aws_iam_role.iam_for_sfn[0].name",
					"aws_iam_role.iam_for_sfn[0]",
					"aws_iam_role.iam_for_sfn",
				],
			},
		},
		"count": {
			"references": [
				"var.create_sfn_role",
			],
		},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "module.bkun-dgea-maskout-data-copy.module.bkun-dgea-maskout-data-copy",
		"name":                "sfn-attach",
		"provider_config_key": "module.bkun-dgea-maskout-data-copy.module.bkun-dgea-maskout-data-copy:aws",
		"provisioners":        [],
		"type":                "aws_iam_role_policy_attachment",
	},
	"module.bkun-dgea-maskout-data-copy.module.bkun-dgea-maskout-data-copy.aws_iam_role_policy_attachment.step-cloudwatch-attach": {
		"address": "module.bkun-dgea-maskout-data-copy.module.bkun-dgea-maskout-data-copy.aws_iam_role_policy_attachment.step-cloudwatch-attach",
		"config": {
			"policy_arn": {
				"references": [
					"var.create_sfn_role",
					"aws_iam_policy.sfn_cw_policy[0].arn",
					"aws_iam_policy.sfn_cw_policy[0]",
					"aws_iam_policy.sfn_cw_policy",
					"data.aws_caller_identity.current.account_id",
					"data.aws_caller_identity.current",
					"var.env",
				],
			},
			"role": {
				"references": [
					"aws_iam_role.iam_for_sfn[0].name",
					"aws_iam_role.iam_for_sfn[0]",
					"aws_iam_role.iam_for_sfn",
				],
			},
		},
		"count": {
			"references": [
				"var.create_sfn_role",
			],
		},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "module.bkun-dgea-maskout-data-copy.module.bkun-dgea-maskout-data-copy",
		"name":                "step-cloudwatch-attach",
		"provider_config_key": "module.bkun-dgea-maskout-data-copy.module.bkun-dgea-maskout-data-copy:aws",
		"provisioners":        [],
		"type":                "aws_iam_role_policy_attachment",
	},
	"module.bkun-dgea-maskout-data-copy.module.bkun-dgea-maskout-data-copy.aws_iam_role_policy_attachment.step-ec2-attach": {
		"address": "module.bkun-dgea-maskout-data-copy.module.bkun-dgea-maskout-data-copy.aws_iam_role_policy_attachment.step-ec2-attach",
		"config": {
			"policy_arn": {
				"references": [
					"var.create_sfn_role",
					"aws_iam_policy.sfn_ec2_policy[0].arn",
					"aws_iam_policy.sfn_ec2_policy[0]",
					"aws_iam_policy.sfn_ec2_policy",
					"data.aws_caller_identity.current.account_id",
					"data.aws_caller_identity.current",
					"var.env",
				],
			},
			"role": {
				"references": [
					"aws_iam_role.iam_for_sfn[0].name",
					"aws_iam_role.iam_for_sfn[0]",
					"aws_iam_role.iam_for_sfn",
				],
			},
		},
		"count": {
			"references": [
				"var.create_sfn_role",
			],
		},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "module.bkun-dgea-maskout-data-copy.module.bkun-dgea-maskout-data-copy",
		"name":                "step-ec2-attach",
		"provider_config_key": "module.bkun-dgea-maskout-data-copy.module.bkun-dgea-maskout-data-copy:aws",
		"provisioners":        [],
		"type":                "aws_iam_role_policy_attachment",
	},
	"module.bkun-dgea-maskout-data-copy.module.bkun-dgea-maskout-data-copy.aws_iam_role_policy_attachment.step-emr-attach": {
		"address": "module.bkun-dgea-maskout-data-copy.module.bkun-dgea-maskout-data-copy.aws_iam_role_policy_attachment.step-emr-attach",
		"config": {
			"policy_arn": {
				"references": [
					"var.create_sfn_role",
					"aws_iam_policy.sfn_emr_policy[0].arn",
					"aws_iam_policy.sfn_emr_policy[0]",
					"aws_iam_policy.sfn_emr_policy",
					"data.aws_caller_identity.current.account_id",
					"data.aws_caller_identity.current",
					"var.env",
				],
			},
			"role": {
				"references": [
					"aws_iam_role.iam_for_sfn[0].name",
					"aws_iam_role.iam_for_sfn[0]",
					"aws_iam_role.iam_for_sfn",
				],
			},
		},
		"count": {
			"references": [
				"var.create_sfn_role",
			],
		},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "module.bkun-dgea-maskout-data-copy.module.bkun-dgea-maskout-data-copy",
		"name":                "step-emr-attach",
		"provider_config_key": "module.bkun-dgea-maskout-data-copy.module.bkun-dgea-maskout-data-copy:aws",
		"provisioners":        [],
		"type":                "aws_iam_role_policy_attachment",
	},
	"module.bkun-dgea-maskout-data-copy.module.bkun-dgea-maskout-data-copy.aws_iam_role_policy_attachment.step-s3-attach": {
		"address": "module.bkun-dgea-maskout-data-copy.module.bkun-dgea-maskout-data-copy.aws_iam_role_policy_attachment.step-s3-attach",
		"config": {
			"policy_arn": {
				"references": [
					"var.create_sfn_role",
					"aws_iam_policy.sfn_s3_policy[0].arn",
					"aws_iam_policy.sfn_s3_policy[0]",
					"aws_iam_policy.sfn_s3_policy",
					"data.aws_caller_identity.current.account_id",
					"data.aws_caller_identity.current",
					"var.env",
				],
			},
			"role": {
				"references": [
					"aws_iam_role.iam_for_sfn[0].name",
					"aws_iam_role.iam_for_sfn[0]",
					"aws_iam_role.iam_for_sfn",
				],
			},
		},
		"count": {
			"references": [
				"var.create_sfn_role",
			],
		},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "module.bkun-dgea-maskout-data-copy.module.bkun-dgea-maskout-data-copy",
		"name":                "step-s3-attach",
		"provider_config_key": "module.bkun-dgea-maskout-data-copy.module.bkun-dgea-maskout-data-copy:aws",
		"provisioners":        [],
		"type":                "aws_iam_role_policy_attachment",
	},
	"module.bkun-dgea-maskout-data-copy.module.bkun-dgea-maskout-data-copy.aws_sfn_state_machine.this": {
		"address": "module.bkun-dgea-maskout-data-copy.module.bkun-dgea-maskout-data-copy.aws_sfn_state_machine.this",
		"config": {
			"definition": {
				"references": [
					"var.definition",
				],
			},
			"name": {
				"references": [
					"var.name",
				],
			},
			"role_arn": {
				"references": [
					"var.role_arn",
				],
			},
			"tags": {
				"references": [
					"var.tags",
					"local.tags",
				],
			},
		},
		"count":               {},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "module.bkun-dgea-maskout-data-copy.module.bkun-dgea-maskout-data-copy",
		"name":                "this",
		"provider_config_key": "module.bkun-dgea-maskout-data-copy.module.bkun-dgea-maskout-data-copy:aws",
		"provisioners":        [],
		"type":                "aws_sfn_state_machine",
	},
	"module.bkun-dgea-maskout-data-copy.module.bkun-dgea-maskout-data-copy.data.aws_caller_identity.current": {
		"address":             "module.bkun-dgea-maskout-data-copy.module.bkun-dgea-maskout-data-copy.data.aws_caller_identity.current",
		"config":              {},
		"count":               {},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "data",
		"module_address":      "module.bkun-dgea-maskout-data-copy.module.bkun-dgea-maskout-data-copy",
		"name":                "current",
		"provider_config_key": "module.bkun-dgea-maskout-data-copy.module.bkun-dgea-maskout-data-copy:aws",
		"provisioners":        [],
		"type":                "aws_caller_identity",
	},
	"module.bkun-dgea-maskout-data-copy.module.bkun-dgea-maskout-data-copy.data.aws_region.current": {
		"address":             "module.bkun-dgea-maskout-data-copy.module.bkun-dgea-maskout-data-copy.data.aws_region.current",
		"config":              {},
		"count":               {},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "data",
		"module_address":      "module.bkun-dgea-maskout-data-copy.module.bkun-dgea-maskout-data-copy",
		"name":                "current",
		"provider_config_key": "module.bkun-dgea-maskout-data-copy.module.bkun-dgea-maskout-data-copy:aws",
		"provisioners":        [],
		"type":                "aws_region",
	},
	"module.bkun-dgea-trigger-redshift-process.data.aws_caller_identity.current": {
		"address":             "module.bkun-dgea-trigger-redshift-process.data.aws_caller_identity.current",
		"config":              {},
		"count":               {},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "data",
		"module_address":      "module.bkun-dgea-trigger-redshift-process",
		"name":                "current",
		"provider_config_key": "module.bkun-dgea-trigger-redshift-process:aws",
		"provisioners":        [],
		"type":                "aws_caller_identity",
	},
	"module.bkun-dgea-trigger-redshift-process.data.aws_region.current": {
		"address":             "module.bkun-dgea-trigger-redshift-process.data.aws_region.current",
		"config":              {},
		"count":               {},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "data",
		"module_address":      "module.bkun-dgea-trigger-redshift-process",
		"name":                "current",
		"provider_config_key": "module.bkun-dgea-trigger-redshift-process:aws",
		"provisioners":        [],
		"type":                "aws_region",
	},
	"module.bkun-dgea-trigger-redshift-process.module.bkun-dgea-s3-to-redshift-stepfunction.aws_iam_policy.sfn_cw_policy": {
		"address": "module.bkun-dgea-trigger-redshift-process.module.bkun-dgea-s3-to-redshift-stepfunction.aws_iam_policy.sfn_cw_policy",
		"config": {
			"description": {
				"constant_value": "This policy allows step function to send cloudwatch events",
			},
			"name": {
				"references": [
					"var.env",
				],
			},
			"policy": {
				"references": [
					"var.sfn_cw_policy_path",
					"var.env",
					"data.aws_caller_identity.current.account_id",
					"data.aws_caller_identity.current",
					"data.aws_region.current.name",
					"data.aws_region.current",
				],
			},
		},
		"count": {
			"references": [
				"var.create_sfn_role",
			],
		},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "module.bkun-dgea-trigger-redshift-process.module.bkun-dgea-s3-to-redshift-stepfunction",
		"name":                "sfn_cw_policy",
		"provider_config_key": "module.bkun-dgea-trigger-redshift-process.module.bkun-dgea-s3-to-redshift-stepfunction:aws",
		"provisioners":        [],
		"type":                "aws_iam_policy",
	},
	"module.bkun-dgea-trigger-redshift-process.module.bkun-dgea-s3-to-redshift-stepfunction.aws_iam_policy.sfn_ec2_policy": {
		"address": "module.bkun-dgea-trigger-redshift-process.module.bkun-dgea-s3-to-redshift-stepfunction.aws_iam_policy.sfn_ec2_policy",
		"config": {
			"description": {
				"constant_value": "This policy allows step function to set up EMR cluster",
			},
			"name": {
				"references": [
					"var.env",
				],
			},
			"policy": {
				"references": [
					"var.sfn_ec2_policy_path",
					"data.aws_caller_identity.current.account_id",
					"data.aws_caller_identity.current",
					"data.aws_region.current.name",
					"data.aws_region.current",
				],
			},
		},
		"count": {
			"references": [
				"var.create_sfn_role",
			],
		},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "module.bkun-dgea-trigger-redshift-process.module.bkun-dgea-s3-to-redshift-stepfunction",
		"name":                "sfn_ec2_policy",
		"provider_config_key": "module.bkun-dgea-trigger-redshift-process.module.bkun-dgea-s3-to-redshift-stepfunction:aws",
		"provisioners":        [],
		"type":                "aws_iam_policy",
	},
	"module.bkun-dgea-trigger-redshift-process.module.bkun-dgea-s3-to-redshift-stepfunction.aws_iam_policy.sfn_emr_policy": {
		"address": "module.bkun-dgea-trigger-redshift-process.module.bkun-dgea-s3-to-redshift-stepfunction.aws_iam_policy.sfn_emr_policy",
		"config": {
			"description": {
				"constant_value": "This policy allows step function to set up EMR cluster",
			},
			"name": {
				"references": [
					"var.env",
				],
			},
			"policy": {
				"references": [
					"var.sfn_emr_policy_path",
					"data.aws_caller_identity.current.account_id",
					"data.aws_caller_identity.current",
					"var.env",
				],
			},
		},
		"count": {
			"references": [
				"var.create_sfn_role",
			],
		},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "module.bkun-dgea-trigger-redshift-process.module.bkun-dgea-s3-to-redshift-stepfunction",
		"name":                "sfn_emr_policy",
		"provider_config_key": "module.bkun-dgea-trigger-redshift-process.module.bkun-dgea-s3-to-redshift-stepfunction:aws",
		"provisioners":        [],
		"type":                "aws_iam_policy",
	},
	"module.bkun-dgea-trigger-redshift-process.module.bkun-dgea-s3-to-redshift-stepfunction.aws_iam_policy.sfn_policy": {
		"address": "module.bkun-dgea-trigger-redshift-process.module.bkun-dgea-s3-to-redshift-stepfunction.aws_iam_policy.sfn_policy",
		"config": {
			"description": {
				"constant_value": "This policy provides basic permission for step function executions.",
			},
			"name": {
				"references": [
					"var.env",
				],
			},
			"policy": {
				"references": [
					"var.sfn_policy_path",
					"data.aws_caller_identity.current.account_id",
					"data.aws_caller_identity.current",
					"data.aws_region.current.name",
					"data.aws_region.current",
				],
			},
		},
		"count": {
			"references": [
				"var.create_sfn_role",
			],
		},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "module.bkun-dgea-trigger-redshift-process.module.bkun-dgea-s3-to-redshift-stepfunction",
		"name":                "sfn_policy",
		"provider_config_key": "module.bkun-dgea-trigger-redshift-process.module.bkun-dgea-s3-to-redshift-stepfunction:aws",
		"provisioners":        [],
		"type":                "aws_iam_policy",
	},
	"module.bkun-dgea-trigger-redshift-process.module.bkun-dgea-s3-to-redshift-stepfunction.aws_iam_policy.sfn_s3_policy": {
		"address": "module.bkun-dgea-trigger-redshift-process.module.bkun-dgea-s3-to-redshift-stepfunction.aws_iam_policy.sfn_s3_policy",
		"config": {
			"description": {
				"constant_value": "This policy allows step function to set up EMR cluster",
			},
			"name": {
				"references": [
					"var.env",
				],
			},
			"policy": {
				"references": [
					"var.sfn_s3_policy_path",
					"data.aws_caller_identity.current.account_id",
					"data.aws_caller_identity.current",
					"data.aws_region.current.name",
					"data.aws_region.current",
					"var.env",
				],
			},
		},
		"count": {
			"references": [
				"var.create_sfn_role",
			],
		},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "module.bkun-dgea-trigger-redshift-process.module.bkun-dgea-s3-to-redshift-stepfunction",
		"name":                "sfn_s3_policy",
		"provider_config_key": "module.bkun-dgea-trigger-redshift-process.module.bkun-dgea-s3-to-redshift-stepfunction:aws",
		"provisioners":        [],
		"type":                "aws_iam_policy",
	},
	"module.bkun-dgea-trigger-redshift-process.module.bkun-dgea-s3-to-redshift-stepfunction.aws_iam_role.iam_for_sfn": {
		"address": "module.bkun-dgea-trigger-redshift-process.module.bkun-dgea-s3-to-redshift-stepfunction.aws_iam_role.iam_for_sfn",
		"config": {
			"assume_role_policy": {
				"constant_value": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Action\": \"sts:AssumeRole\",\n      \"Principal\": {\n        \"Service\": \"states.amazonaws.com\"\n      },\n      \"Effect\": \"Allow\"\n    }\n  ]\n}\n",
			},
			"name": {
				"references": [
					"var.env",
				],
			},
			"tags": {
				"references": [
					"var.tags",
					"var.env",
				],
			},
		},
		"count": {
			"references": [
				"var.create_sfn_role",
			],
		},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "module.bkun-dgea-trigger-redshift-process.module.bkun-dgea-s3-to-redshift-stepfunction",
		"name":                "iam_for_sfn",
		"provider_config_key": "module.bkun-dgea-trigger-redshift-process.module.bkun-dgea-s3-to-redshift-stepfunction:aws",
		"provisioners":        [],
		"type":                "aws_iam_role",
	},
	"module.bkun-dgea-trigger-redshift-process.module.bkun-dgea-s3-to-redshift-stepfunction.aws_iam_role_policy_attachment.lambda-access-attach": {
		"address": "module.bkun-dgea-trigger-redshift-process.module.bkun-dgea-s3-to-redshift-stepfunction.aws_iam_role_policy_attachment.lambda-access-attach",
		"config": {
			"policy_arn": {
				"constant_value": "arn:aws:iam::aws:policy/service-role/AWSLambdaRole",
			},
			"role": {
				"references": [
					"aws_iam_role.iam_for_sfn[0].name",
					"aws_iam_role.iam_for_sfn[0]",
					"aws_iam_role.iam_for_sfn",
				],
			},
		},
		"count": {
			"references": [
				"var.create_sfn_role",
			],
		},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "module.bkun-dgea-trigger-redshift-process.module.bkun-dgea-s3-to-redshift-stepfunction",
		"name":                "lambda-access-attach",
		"provider_config_key": "module.bkun-dgea-trigger-redshift-process.module.bkun-dgea-s3-to-redshift-stepfunction:aws",
		"provisioners":        [],
		"type":                "aws_iam_role_policy_attachment",
	},
	"module.bkun-dgea-trigger-redshift-process.module.bkun-dgea-s3-to-redshift-stepfunction.aws_iam_role_policy_attachment.sfn-attach": {
		"address": "module.bkun-dgea-trigger-redshift-process.module.bkun-dgea-s3-to-redshift-stepfunction.aws_iam_role_policy_attachment.sfn-attach",
		"config": {
			"policy_arn": {
				"references": [
					"var.create_sfn_role",
					"aws_iam_policy.sfn_policy[0].arn",
					"aws_iam_policy.sfn_policy[0]",
					"aws_iam_policy.sfn_policy",
					"data.aws_caller_identity.current.account_id",
					"data.aws_caller_identity.current",
					"var.env",
				],
			},
			"role": {
				"references": [
					"aws_iam_role.iam_for_sfn[0].name",
					"aws_iam_role.iam_for_sfn[0]",
					"aws_iam_role.iam_for_sfn",
				],
			},
		},
		"count": {
			"references": [
				"var.create_sfn_role",
			],
		},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "module.bkun-dgea-trigger-redshift-process.module.bkun-dgea-s3-to-redshift-stepfunction",
		"name":                "sfn-attach",
		"provider_config_key": "module.bkun-dgea-trigger-redshift-process.module.bkun-dgea-s3-to-redshift-stepfunction:aws",
		"provisioners":        [],
		"type":                "aws_iam_role_policy_attachment",
	},
	"module.bkun-dgea-trigger-redshift-process.module.bkun-dgea-s3-to-redshift-stepfunction.aws_iam_role_policy_attachment.step-cloudwatch-attach": {
		"address": "module.bkun-dgea-trigger-redshift-process.module.bkun-dgea-s3-to-redshift-stepfunction.aws_iam_role_policy_attachment.step-cloudwatch-attach",
		"config": {
			"policy_arn": {
				"references": [
					"var.create_sfn_role",
					"aws_iam_policy.sfn_cw_policy[0].arn",
					"aws_iam_policy.sfn_cw_policy[0]",
					"aws_iam_policy.sfn_cw_policy",
					"data.aws_caller_identity.current.account_id",
					"data.aws_caller_identity.current",
					"var.env",
				],
			},
			"role": {
				"references": [
					"aws_iam_role.iam_for_sfn[0].name",
					"aws_iam_role.iam_for_sfn[0]",
					"aws_iam_role.iam_for_sfn",
				],
			},
		},
		"count": {
			"references": [
				"var.create_sfn_role",
			],
		},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "module.bkun-dgea-trigger-redshift-process.module.bkun-dgea-s3-to-redshift-stepfunction",
		"name":                "step-cloudwatch-attach",
		"provider_config_key": "module.bkun-dgea-trigger-redshift-process.module.bkun-dgea-s3-to-redshift-stepfunction:aws",
		"provisioners":        [],
		"type":                "aws_iam_role_policy_attachment",
	},
	"module.bkun-dgea-trigger-redshift-process.module.bkun-dgea-s3-to-redshift-stepfunction.aws_iam_role_policy_attachment.step-ec2-attach": {
		"address": "module.bkun-dgea-trigger-redshift-process.module.bkun-dgea-s3-to-redshift-stepfunction.aws_iam_role_policy_attachment.step-ec2-attach",
		"config": {
			"policy_arn": {
				"references": [
					"var.create_sfn_role",
					"aws_iam_policy.sfn_ec2_policy[0].arn",
					"aws_iam_policy.sfn_ec2_policy[0]",
					"aws_iam_policy.sfn_ec2_policy",
					"data.aws_caller_identity.current.account_id",
					"data.aws_caller_identity.current",
					"var.env",
				],
			},
			"role": {
				"references": [
					"aws_iam_role.iam_for_sfn[0].name",
					"aws_iam_role.iam_for_sfn[0]",
					"aws_iam_role.iam_for_sfn",
				],
			},
		},
		"count": {
			"references": [
				"var.create_sfn_role",
			],
		},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "module.bkun-dgea-trigger-redshift-process.module.bkun-dgea-s3-to-redshift-stepfunction",
		"name":                "step-ec2-attach",
		"provider_config_key": "module.bkun-dgea-trigger-redshift-process.module.bkun-dgea-s3-to-redshift-stepfunction:aws",
		"provisioners":        [],
		"type":                "aws_iam_role_policy_attachment",
	},
	"module.bkun-dgea-trigger-redshift-process.module.bkun-dgea-s3-to-redshift-stepfunction.aws_iam_role_policy_attachment.step-emr-attach": {
		"address": "module.bkun-dgea-trigger-redshift-process.module.bkun-dgea-s3-to-redshift-stepfunction.aws_iam_role_policy_attachment.step-emr-attach",
		"config": {
			"policy_arn": {
				"references": [
					"var.create_sfn_role",
					"aws_iam_policy.sfn_emr_policy[0].arn",
					"aws_iam_policy.sfn_emr_policy[0]",
					"aws_iam_policy.sfn_emr_policy",
					"data.aws_caller_identity.current.account_id",
					"data.aws_caller_identity.current",
					"var.env",
				],
			},
			"role": {
				"references": [
					"aws_iam_role.iam_for_sfn[0].name",
					"aws_iam_role.iam_for_sfn[0]",
					"aws_iam_role.iam_for_sfn",
				],
			},
		},
		"count": {
			"references": [
				"var.create_sfn_role",
			],
		},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "module.bkun-dgea-trigger-redshift-process.module.bkun-dgea-s3-to-redshift-stepfunction",
		"name":                "step-emr-attach",
		"provider_config_key": "module.bkun-dgea-trigger-redshift-process.module.bkun-dgea-s3-to-redshift-stepfunction:aws",
		"provisioners":        [],
		"type":                "aws_iam_role_policy_attachment",
	},
	"module.bkun-dgea-trigger-redshift-process.module.bkun-dgea-s3-to-redshift-stepfunction.aws_iam_role_policy_attachment.step-s3-attach": {
		"address": "module.bkun-dgea-trigger-redshift-process.module.bkun-dgea-s3-to-redshift-stepfunction.aws_iam_role_policy_attachment.step-s3-attach",
		"config": {
			"policy_arn": {
				"references": [
					"var.create_sfn_role",
					"aws_iam_policy.sfn_s3_policy[0].arn",
					"aws_iam_policy.sfn_s3_policy[0]",
					"aws_iam_policy.sfn_s3_policy",
					"data.aws_caller_identity.current.account_id",
					"data.aws_caller_identity.current",
					"var.env",
				],
			},
			"role": {
				"references": [
					"aws_iam_role.iam_for_sfn[0].name",
					"aws_iam_role.iam_for_sfn[0]",
					"aws_iam_role.iam_for_sfn",
				],
			},
		},
		"count": {
			"references": [
				"var.create_sfn_role",
			],
		},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "module.bkun-dgea-trigger-redshift-process.module.bkun-dgea-s3-to-redshift-stepfunction",
		"name":                "step-s3-attach",
		"provider_config_key": "module.bkun-dgea-trigger-redshift-process.module.bkun-dgea-s3-to-redshift-stepfunction:aws",
		"provisioners":        [],
		"type":                "aws_iam_role_policy_attachment",
	},
	"module.bkun-dgea-trigger-redshift-process.module.bkun-dgea-s3-to-redshift-stepfunction.aws_sfn_state_machine.this": {
		"address": "module.bkun-dgea-trigger-redshift-process.module.bkun-dgea-s3-to-redshift-stepfunction.aws_sfn_state_machine.this",
		"config": {
			"definition": {
				"references": [
					"var.definition",
				],
			},
			"name": {
				"references": [
					"var.name",
				],
			},
			"role_arn": {
				"references": [
					"var.role_arn",
				],
			},
			"tags": {
				"references": [
					"var.tags",
					"local.tags",
				],
			},
		},
		"count":               {},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "module.bkun-dgea-trigger-redshift-process.module.bkun-dgea-s3-to-redshift-stepfunction",
		"name":                "this",
		"provider_config_key": "module.bkun-dgea-trigger-redshift-process.module.bkun-dgea-s3-to-redshift-stepfunction:aws",
		"provisioners":        [],
		"type":                "aws_sfn_state_machine",
	},
	"module.bkun-dgea-trigger-redshift-process.module.bkun-dgea-s3-to-redshift-stepfunction.data.aws_caller_identity.current": {
		"address":             "module.bkun-dgea-trigger-redshift-process.module.bkun-dgea-s3-to-redshift-stepfunction.data.aws_caller_identity.current",
		"config":              {},
		"count":               {},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "data",
		"module_address":      "module.bkun-dgea-trigger-redshift-process.module.bkun-dgea-s3-to-redshift-stepfunction",
		"name":                "current",
		"provider_config_key": "module.bkun-dgea-trigger-redshift-process.module.bkun-dgea-s3-to-redshift-stepfunction:aws",
		"provisioners":        [],
		"type":                "aws_caller_identity",
	},
	"module.bkun-dgea-trigger-redshift-process.module.bkun-dgea-s3-to-redshift-stepfunction.data.aws_region.current": {
		"address":             "module.bkun-dgea-trigger-redshift-process.module.bkun-dgea-s3-to-redshift-stepfunction.data.aws_region.current",
		"config":              {},
		"count":               {},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "data",
		"module_address":      "module.bkun-dgea-trigger-redshift-process.module.bkun-dgea-s3-to-redshift-stepfunction",
		"name":                "current",
		"provider_config_key": "module.bkun-dgea-trigger-redshift-process.module.bkun-dgea-s3-to-redshift-stepfunction:aws",
		"provisioners":        [],
		"type":                "aws_region",
	},
}

provisioners = {}

variables = {
	"base_path": {
		"default":        "./s3/bkun-dgea-dp-source-artifacts",
		"description":    "",
		"module_address": "",
		"name":           "base_path",
	},
	"cluster_database_name": {
		"default":        "uat",
		"description":    "The name of the database to create",
		"module_address": "",
		"name":           "cluster_database_name",
	},
	"cluster_master_password": {
		"default":        "Hellow$123WE",
		"description":    "Master user password",
		"module_address": "",
		"name":           "cluster_master_password",
	},
	"cluster_master_username": {
		"default":        "awsuser",
		"description":    "Master username",
		"module_address": "",
		"name":           "cluster_master_username",
	},
	"cluster_name": {
		"default":        "datamart",
		"description":    "Redshift cluster name to be provided here",
		"module_address": "",
		"name":           "cluster_name",
	},
	"cluster_node_type": {
		"default":        "dc2.8xlarge",
		"description":    "Redshift cluster node type",
		"module_address": "",
		"name":           "cluster_node_type",
	},
	"cluster_number_of_nodes": {
		"default":        5,
		"description":    "Number of nodes in the cluster (values greater than 1 will trigger 'cluster_type' of 'multi-node')",
		"module_address": "",
		"name":           "cluster_number_of_nodes",
	},
	"create_kms_key": {
		"default":        false,
		"description":    "Create a new KMS key for use with this bucket",
		"module_address": "",
		"name":           "create_kms_key",
	},
	"create_sfn_role": {
		"default":        true,
		"description":    "Contains policy to interact EC2 instances via step functions.",
		"module_address": "",
		"name":           "create_sfn_role",
	},
	"di_dynamodb_policy_path": {
		"default":        "./iam/lambda-function/cross-account.json",
		"description":    "Path to policy json",
		"module_address": "",
		"name":           "di_dynamodb_policy_path",
	},
	"dynamodb_email_policy_path": {
		"default":        "./iam/lambda-function/bkun-dgea-dynamodb-email-notification-handler/dynamodb_write.json",
		"description":    "Path to policy json",
		"module_address": "",
		"name":           "dynamodb_email_policy_path",
	},
	"ec2_dynamodb_policy_path": {
		"default":        "./iam/emr-role/ec2-dynamodb-policy.json",
		"description":    "Contains policy to keep emr logs on S3 and trasfer role to ec2 instances of emr cluster.",
		"module_address": "",
		"name":           "ec2_dynamodb_policy_path",
	},
	"ec2_kms_policy_path": {
		"default":        "./iam/emr-role/kms.json",
		"description":    "Policies for ec2 instances of emr cluster to s3.",
		"module_address": "",
		"name":           "ec2_kms_policy_path",
	},
	"ec2_policy_path": {
		"default":        "./iam/lambda-function/ec2.json",
		"description":    "Path to policy json",
		"module_address": "",
		"name":           "ec2_policy_path",
	},
	"emr_policy_path": {
		"default":        "./iam/lambda-function/emr_cluster.json",
		"description":    "Path to policy json",
		"module_address": "",
		"name":           "emr_policy_path",
	},
	"encrypted": {
		"default":        true,
		"description":    "Encryption is specified whether true of false",
		"module_address": "",
		"name":           "encrypted",
	},
	"env": {
		"default":        "uat",
		"description":    "Environment for which we are running terrafrom scripts like dev, test, prod",
		"module_address": "",
		"name":           "env",
	},
	"env_prefix": {
		"default":        "bkun-dgea",
		"description":    "environment prefix to be provided here",
		"module_address": "",
		"name":           "env_prefix",
	},
	"generic_policy_path": {
		"default":        "./iam/emr-role/generic-policy.json",
		"description":    "Generic policies for ec2 instances of emr cluster.",
		"module_address": "",
		"name":           "generic_policy_path",
	},
	"module.bkun-dgea-check-data-migration-emr-cluster-availability.module.bkun-dgea-check-data-migration-emr-cluster-availability:cloudwatch_log_retention_days": {
		"default":        14,
		"description":    "The number of days to keep Lambda logs in CloudWatch for",
		"module_address": "module.bkun-dgea-check-data-migration-emr-cluster-availability.module.bkun-dgea-check-data-migration-emr-cluster-availability",
		"name":           "cloudwatch_log_retention_days",
	},
	"module.bkun-dgea-check-data-migration-emr-cluster-availability.module.bkun-dgea-check-data-migration-emr-cluster-availability:create_role": {
		"default":        false,
		"description":    "Defaults to false - setting to true will create a role for use with the Lambda Function. Requires role_policy",
		"module_address": "module.bkun-dgea-check-data-migration-emr-cluster-availability.module.bkun-dgea-check-data-migration-emr-cluster-availability",
		"name":           "create_role",
	},
	"module.bkun-dgea-check-data-migration-emr-cluster-availability.module.bkun-dgea-check-data-migration-emr-cluster-availability:env": {
		"default":        "di",
		"description":    "",
		"module_address": "module.bkun-dgea-check-data-migration-emr-cluster-availability.module.bkun-dgea-check-data-migration-emr-cluster-availability",
		"name":           "env",
	},
	"module.bkun-dgea-check-data-migration-emr-cluster-availability.module.bkun-dgea-check-data-migration-emr-cluster-availability:env_prefix": {
		"default":        "bku-dev",
		"description":    "",
		"module_address": "module.bkun-dgea-check-data-migration-emr-cluster-availability.module.bkun-dgea-check-data-migration-emr-cluster-availability",
		"name":           "env_prefix",
	},
	"module.bkun-dgea-check-data-migration-emr-cluster-availability.module.bkun-dgea-check-data-migration-emr-cluster-availability:environment_vars": {
		"default":        null,
		"description":    "",
		"module_address": "module.bkun-dgea-check-data-migration-emr-cluster-availability.module.bkun-dgea-check-data-migration-emr-cluster-availability",
		"name":           "environment_vars",
	},
	"module.bkun-dgea-check-data-migration-emr-cluster-availability.module.bkun-dgea-check-data-migration-emr-cluster-availability:handler": {
		"default":        null,
		"description":    "Name of the Lambda handler for the function",
		"module_address": "module.bkun-dgea-check-data-migration-emr-cluster-availability.module.bkun-dgea-check-data-migration-emr-cluster-availability",
		"name":           "handler",
	},
	"module.bkun-dgea-check-data-migration-emr-cluster-availability.module.bkun-dgea-check-data-migration-emr-cluster-availability:lambda_invocation_principals": {
		"default":        [],
		"description":    "List of principals allowed to invoke the Lambda Function",
		"module_address": "module.bkun-dgea-check-data-migration-emr-cluster-availability.module.bkun-dgea-check-data-migration-emr-cluster-availability",
		"name":           "lambda_invocation_principals",
	},
	"module.bkun-dgea-check-data-migration-emr-cluster-availability.module.bkun-dgea-check-data-migration-emr-cluster-availability:latest_version": {
		"default":        true,
		"description":    "Use the latest object version for the S3 key containing the Lambda code",
		"module_address": "module.bkun-dgea-check-data-migration-emr-cluster-availability.module.bkun-dgea-check-data-migration-emr-cluster-availability",
		"name":           "latest_version",
	},
	"module.bkun-dgea-check-data-migration-emr-cluster-availability.module.bkun-dgea-check-data-migration-emr-cluster-availability:layers": {
		"default":        [],
		"description":    "List of Lambda Layers to include for the function",
		"module_address": "module.bkun-dgea-check-data-migration-emr-cluster-availability.module.bkun-dgea-check-data-migration-emr-cluster-availability",
		"name":           "layers",
	},
	"module.bkun-dgea-check-data-migration-emr-cluster-availability.module.bkun-dgea-check-data-migration-emr-cluster-availability:name": {
		"default":        null,
		"description":    "The name to give the Lambda function",
		"module_address": "module.bkun-dgea-check-data-migration-emr-cluster-availability.module.bkun-dgea-check-data-migration-emr-cluster-availability",
		"name":           "name",
	},
	"module.bkun-dgea-check-data-migration-emr-cluster-availability.module.bkun-dgea-check-data-migration-emr-cluster-availability:role_arn": {
		"default":        "",
		"description":    "Role ARN used for the Lambda function - ignore if leveraging create_role",
		"module_address": "module.bkun-dgea-check-data-migration-emr-cluster-availability.module.bkun-dgea-check-data-migration-emr-cluster-availability",
		"name":           "role_arn",
	},
	"module.bkun-dgea-check-data-migration-emr-cluster-availability.module.bkun-dgea-check-data-migration-emr-cluster-availability:role_policy": {
		"default":        "",
		"description":    "The role policy to use when leveraging create_role - ignore if leveraging role_arn",
		"module_address": "module.bkun-dgea-check-data-migration-emr-cluster-availability.module.bkun-dgea-check-data-migration-emr-cluster-availability",
		"name":           "role_policy",
	},
	"module.bkun-dgea-check-data-migration-emr-cluster-availability.module.bkun-dgea-check-data-migration-emr-cluster-availability:runtime": {
		"default":        null,
		"description":    "Runtime for the Lambda function",
		"module_address": "module.bkun-dgea-check-data-migration-emr-cluster-availability.module.bkun-dgea-check-data-migration-emr-cluster-availability",
		"name":           "runtime",
	},
	"module.bkun-dgea-check-data-migration-emr-cluster-availability.module.bkun-dgea-check-data-migration-emr-cluster-availability:s3_bucket": {
		"default":        null,
		"description":    "S3 Bucket that containing the Lambda code",
		"module_address": "module.bkun-dgea-check-data-migration-emr-cluster-availability.module.bkun-dgea-check-data-migration-emr-cluster-availability",
		"name":           "s3_bucket",
	},
	"module.bkun-dgea-check-data-migration-emr-cluster-availability.module.bkun-dgea-check-data-migration-emr-cluster-availability:s3_key": {
		"default":        null,
		"description":    "S3 Object Key (.zip file) containing the Lambda code",
		"module_address": "module.bkun-dgea-check-data-migration-emr-cluster-availability.module.bkun-dgea-check-data-migration-emr-cluster-availability",
		"name":           "s3_key",
	},
	"module.bkun-dgea-check-data-migration-emr-cluster-availability.module.bkun-dgea-check-data-migration-emr-cluster-availability:s3_layer_key": {
		"default":        "terraform/lambda/bu_logging.zip",
		"description":    "S3 Object Key (.zip file) containing the Lambda layer",
		"module_address": "module.bkun-dgea-check-data-migration-emr-cluster-availability.module.bkun-dgea-check-data-migration-emr-cluster-availability",
		"name":           "s3_layer_key",
	},
	"module.bkun-dgea-check-data-migration-emr-cluster-availability.module.bkun-dgea-check-data-migration-emr-cluster-availability:s3_object_version": {
		"default":        "",
		"description":    "The object version for the S3 Key containing the Lambda code - ignore if using latest_version",
		"module_address": "module.bkun-dgea-check-data-migration-emr-cluster-availability.module.bkun-dgea-check-data-migration-emr-cluster-availability",
		"name":           "s3_object_version",
	},
	"module.bkun-dgea-check-data-migration-emr-cluster-availability.module.bkun-dgea-check-data-migration-emr-cluster-availability:security_group_ids": {
		"default":        null,
		"description":    "List of security group ids when Lambda Function should run in the VPC.",
		"module_address": "module.bkun-dgea-check-data-migration-emr-cluster-availability.module.bkun-dgea-check-data-migration-emr-cluster-availability",
		"name":           "security_group_ids",
	},
	"module.bkun-dgea-check-data-migration-emr-cluster-availability.module.bkun-dgea-check-data-migration-emr-cluster-availability:subnet_ids": {
		"default":        null,
		"description":    "List of subnet ids when Lambda Function should run in the VPC. Usually private or intra subnets.",
		"module_address": "module.bkun-dgea-check-data-migration-emr-cluster-availability.module.bkun-dgea-check-data-migration-emr-cluster-availability",
		"name":           "subnet_ids",
	},
	"module.bkun-dgea-check-data-migration-emr-cluster-availability.module.bkun-dgea-check-data-migration-emr-cluster-availability:tags": {
		"default":        {},
		"description":    "A map of tags to apply to resources created by this module",
		"module_address": "module.bkun-dgea-check-data-migration-emr-cluster-availability.module.bkun-dgea-check-data-migration-emr-cluster-availability",
		"name":           "tags",
	},
	"module.bkun-dgea-check-data-migration-emr-cluster-availability.module.bkun-dgea-check-data-migration-emr-cluster-availability:timeout": {
		"default":        300,
		"description":    "Timeout for the Lambda function",
		"module_address": "module.bkun-dgea-check-data-migration-emr-cluster-availability.module.bkun-dgea-check-data-migration-emr-cluster-availability",
		"name":           "timeout",
	},
	"module.bkun-dgea-check-data-migration-emr-cluster-availability:ec2_policy_path": {
		"default":        "../../iam/lambda-function/ec2.json",
		"description":    "Path to policy json",
		"module_address": "module.bkun-dgea-check-data-migration-emr-cluster-availability",
		"name":           "ec2_policy_path",
	},
	"module.bkun-dgea-check-data-migration-emr-cluster-availability:emr_policy_path": {
		"default":        "../../iam/lambda-function/emr_cluster.json",
		"description":    "Path to policy json",
		"module_address": "module.bkun-dgea-check-data-migration-emr-cluster-availability",
		"name":           "emr_policy_path",
	},
	"module.bkun-dgea-check-data-migration-emr-cluster-availability:env": {
		"default":        "uat",
		"description":    "Environment for which we are running terrafrom scripts like dev, test, prod",
		"module_address": "module.bkun-dgea-check-data-migration-emr-cluster-availability",
		"name":           "env",
	},
	"module.bkun-dgea-check-data-migration-emr-cluster-availability:s3_key": {
		"default":        "terraform/lambda",
		"description":    "Source bucket to store lambda function code and other required scripts",
		"module_address": "module.bkun-dgea-check-data-migration-emr-cluster-availability",
		"name":           "s3_key",
	},
	"module.bkun-dgea-check-data-migration-emr-cluster-availability:security_group_ids": {
		"default":        null,
		"description":    "List of security group ids when Lambda Function should run in the VPC.",
		"module_address": "module.bkun-dgea-check-data-migration-emr-cluster-availability",
		"name":           "security_group_ids",
	},
	"module.bkun-dgea-check-data-migration-emr-cluster-availability:subnet_ids": {
		"default":        null,
		"description":    "List of subnet ids when Lambda Function should run in the VPC. Usually private or intra subnets.",
		"module_address": "module.bkun-dgea-check-data-migration-emr-cluster-availability",
		"name":           "subnet_ids",
	},
	"module.bkun-dgea-check-data-migration-emr-cluster-availability:tags": {
		"default": {
			"ApplicationID":   "0",
			"ApplicationName": "Data-Ingestion",
			"ApplicationRole": "",
			"BackupTier":      "NA",
			"BusinessLine":    "Data Governance And Eprise. Arch",
			"CostCenter":      "6703",
			"Environment":     "uat",
			"ProjectID":       "PRJ0010800",
			"Tier":            "4",
		},
		"description":    "A mapping of tags to assign to all resources",
		"module_address": "module.bkun-dgea-check-data-migration-emr-cluster-availability",
		"name":           "tags",
	},
	"module.bkun-dgea-copy-flat-file-maskout-data.module.bkun-dgea-copy-flat-file-maskout-data:create_role": {
		"default":        false,
		"description":    "Defaults to false - setting to true will create a role for use to the state machine. Requires role_policy",
		"module_address": "module.bkun-dgea-copy-flat-file-maskout-data.module.bkun-dgea-copy-flat-file-maskout-data",
		"name":           "create_role",
	},
	"module.bkun-dgea-copy-flat-file-maskout-data.module.bkun-dgea-copy-flat-file-maskout-data:create_sfn_role": {
		"default":        false,
		"description":    "Contains policy to interact EC2 instances via step functions.",
		"module_address": "module.bkun-dgea-copy-flat-file-maskout-data.module.bkun-dgea-copy-flat-file-maskout-data",
		"name":           "create_sfn_role",
	},
	"module.bkun-dgea-copy-flat-file-maskout-data.module.bkun-dgea-copy-flat-file-maskout-data:definition": {
		"default":        null,
		"description":    "The ASL code for the state machine",
		"module_address": "module.bkun-dgea-copy-flat-file-maskout-data.module.bkun-dgea-copy-flat-file-maskout-data",
		"name":           "definition",
	},
	"module.bkun-dgea-copy-flat-file-maskout-data.module.bkun-dgea-copy-flat-file-maskout-data:ec2_dynamodb_policy_path": {
		"default":        "../../iam/step-function/ec2-dynamodb-policy.json",
		"description":    "Policies for ec2 instances of emr cluster to write data ingestion status in dynamodb.",
		"module_address": "module.bkun-dgea-copy-flat-file-maskout-data.module.bkun-dgea-copy-flat-file-maskout-data",
		"name":           "ec2_dynamodb_policy_path",
	},
	"module.bkun-dgea-copy-flat-file-maskout-data.module.bkun-dgea-copy-flat-file-maskout-data:env": {
		"default":        "test",
		"description":    "Environment for which we are running terrafrom scripts like dev, test, prod",
		"module_address": "module.bkun-dgea-copy-flat-file-maskout-data.module.bkun-dgea-copy-flat-file-maskout-data",
		"name":           "env",
	},
	"module.bkun-dgea-copy-flat-file-maskout-data.module.bkun-dgea-copy-flat-file-maskout-data:name": {
		"default":        null,
		"description":    "The name to give the state machine",
		"module_address": "module.bkun-dgea-copy-flat-file-maskout-data.module.bkun-dgea-copy-flat-file-maskout-data",
		"name":           "name",
	},
	"module.bkun-dgea-copy-flat-file-maskout-data.module.bkun-dgea-copy-flat-file-maskout-data:role_arn": {
		"default":        null,
		"description":    "Role ARN used for the state machine - ignore if leveraging create_role",
		"module_address": "module.bkun-dgea-copy-flat-file-maskout-data.module.bkun-dgea-copy-flat-file-maskout-data",
		"name":           "role_arn",
	},
	"module.bkun-dgea-copy-flat-file-maskout-data.module.bkun-dgea-copy-flat-file-maskout-data:role_policy": {
		"default":        null,
		"description":    "The role policy to use when leveraging create_role - ignore if leveraging role_arn",
		"module_address": "module.bkun-dgea-copy-flat-file-maskout-data.module.bkun-dgea-copy-flat-file-maskout-data",
		"name":           "role_policy",
	},
	"module.bkun-dgea-copy-flat-file-maskout-data.module.bkun-dgea-copy-flat-file-maskout-data:sfn_cw_policy_path": {
		"default":        "../../iam/step-function/sfn-cw-policy.json",
		"description":    "Contains policy to keep emr logs on S3 and trasfer role to ec2 instances of emr cluster.",
		"module_address": "module.bkun-dgea-copy-flat-file-maskout-data.module.bkun-dgea-copy-flat-file-maskout-data",
		"name":           "sfn_cw_policy_path",
	},
	"module.bkun-dgea-copy-flat-file-maskout-data.module.bkun-dgea-copy-flat-file-maskout-data:sfn_ec2_policy_path": {
		"default":        "../../iam/step-function/sfn-ec2-policy.json",
		"description":    "Contains policy to interact EC2 instances via step functions.",
		"module_address": "module.bkun-dgea-copy-flat-file-maskout-data.module.bkun-dgea-copy-flat-file-maskout-data",
		"name":           "sfn_ec2_policy_path",
	},
	"module.bkun-dgea-copy-flat-file-maskout-data.module.bkun-dgea-copy-flat-file-maskout-data:sfn_emr_policy_path": {
		"default":        "../../iam/step-function/sfn-emr-policy.json",
		"description":    "Contains policy to execute various EMR commands using step functions like createcluster.",
		"module_address": "module.bkun-dgea-copy-flat-file-maskout-data.module.bkun-dgea-copy-flat-file-maskout-data",
		"name":           "sfn_emr_policy_path",
	},
	"module.bkun-dgea-copy-flat-file-maskout-data.module.bkun-dgea-copy-flat-file-maskout-data:sfn_policy_path": {
		"default":        "../../iam/step-function/policy.json",
		"description":    "Contains generic policy for step function execution and interacting with different services.",
		"module_address": "module.bkun-dgea-copy-flat-file-maskout-data.module.bkun-dgea-copy-flat-file-maskout-data",
		"name":           "sfn_policy_path",
	},
	"module.bkun-dgea-copy-flat-file-maskout-data.module.bkun-dgea-copy-flat-file-maskout-data:sfn_s3_policy_path": {
		"default":        "../../iam/step-function/sfn-s3-policy.json",
		"description":    "Path to emr ec2 policy",
		"module_address": "module.bkun-dgea-copy-flat-file-maskout-data.module.bkun-dgea-copy-flat-file-maskout-data",
		"name":           "sfn_s3_policy_path",
	},
	"module.bkun-dgea-copy-flat-file-maskout-data.module.bkun-dgea-copy-flat-file-maskout-data:tags": {
		"default":        {},
		"description":    "A map of tags to apply to resources created by this module",
		"module_address": "module.bkun-dgea-copy-flat-file-maskout-data.module.bkun-dgea-copy-flat-file-maskout-data",
		"name":           "tags",
	},
	"module.bkun-dgea-copy-flat-file-maskout-data:core_instance_count": {
		"default":        2,
		"description":    "",
		"module_address": "module.bkun-dgea-copy-flat-file-maskout-data",
		"name":           "core_instance_count",
	},
	"module.bkun-dgea-copy-flat-file-maskout-data:create_sfn_role": {
		"default":        false,
		"description":    "Contains policy to interact EC2 instances via step functions.",
		"module_address": "module.bkun-dgea-copy-flat-file-maskout-data",
		"name":           "create_sfn_role",
	},
	"module.bkun-dgea-copy-flat-file-maskout-data:ec2_dynamodb_policy_path": {
		"default":        "../../iam/step-function/ec2-dynamodb-policy.json",
		"description":    "Policies for ec2 instances of emr cluster to write data ingestion status in dynamodb.",
		"module_address": "module.bkun-dgea-copy-flat-file-maskout-data",
		"name":           "ec2_dynamodb_policy_path",
	},
	"module.bkun-dgea-copy-flat-file-maskout-data:ec2_key_name": {
		"default":        "DP-UAT-EMR",
		"description":    "",
		"module_address": "module.bkun-dgea-copy-flat-file-maskout-data",
		"name":           "ec2_key_name",
	},
	"module.bkun-dgea-copy-flat-file-maskout-data:emr_release_label": {
		"default":        "emr-5.29.0",
		"description":    "",
		"module_address": "module.bkun-dgea-copy-flat-file-maskout-data",
		"name":           "emr_release_label",
	},
	"module.bkun-dgea-copy-flat-file-maskout-data:env": {
		"default":        "uat",
		"description":    "Environment for which we are running terrafrom scripts like dev, test, prod",
		"module_address": "module.bkun-dgea-copy-flat-file-maskout-data",
		"name":           "env",
	},
	"module.bkun-dgea-copy-flat-file-maskout-data:instance_type": {
		"default":        "m5.xlarge",
		"description":    "",
		"module_address": "module.bkun-dgea-copy-flat-file-maskout-data",
		"name":           "instance_type",
	},
	"module.bkun-dgea-copy-flat-file-maskout-data:master_instance_count": {
		"default":        1,
		"description":    "",
		"module_address": "module.bkun-dgea-copy-flat-file-maskout-data",
		"name":           "master_instance_count",
	},
	"module.bkun-dgea-copy-flat-file-maskout-data:sfn_cw_policy_path": {
		"default":        "../../iam/step-function/sfn-cw-policy.json",
		"description":    "Contains policy to keep emr logs on S3 and trasfer role to ec2 instances of emr cluster.",
		"module_address": "module.bkun-dgea-copy-flat-file-maskout-data",
		"name":           "sfn_cw_policy_path",
	},
	"module.bkun-dgea-copy-flat-file-maskout-data:sfn_ec2_policy_path": {
		"default":        "../../iam/step-function/sfn-ec2-policy.json",
		"description":    "Contains policy to interact EC2 instances via step functions.",
		"module_address": "module.bkun-dgea-copy-flat-file-maskout-data",
		"name":           "sfn_ec2_policy_path",
	},
	"module.bkun-dgea-copy-flat-file-maskout-data:sfn_emr_policy_path": {
		"default":        "../../iam/step-function/sfn-emr-policy.json",
		"description":    "Contains policy to execute various EMR commands using step functions like createcluster.",
		"module_address": "module.bkun-dgea-copy-flat-file-maskout-data",
		"name":           "sfn_emr_policy_path",
	},
	"module.bkun-dgea-copy-flat-file-maskout-data:sfn_policy_path": {
		"default":        "../../iam/step-function/policy.json",
		"description":    "Contains generic policy for step function execution and interacting with different services.",
		"module_address": "module.bkun-dgea-copy-flat-file-maskout-data",
		"name":           "sfn_policy_path",
	},
	"module.bkun-dgea-copy-flat-file-maskout-data:sfn_s3_policy_path": {
		"default":        "../../iam/step-function/sfn-s3-policy.json",
		"description":    "Path to emr ec2 policy",
		"module_address": "module.bkun-dgea-copy-flat-file-maskout-data",
		"name":           "sfn_s3_policy_path",
	},
	"module.bkun-dgea-copy-flat-file-maskout-data:subnet_id": {
		"default":        "subnet-07911106ea5728129",
		"description":    "",
		"module_address": "module.bkun-dgea-copy-flat-file-maskout-data",
		"name":           "subnet_id",
	},
	"module.bkun-dgea-copy-flat-file-maskout-data:tags": {
		"default": {
			"ApplicationID":   "",
			"ApplicationName": "data-processing-emr",
			"ApplicationRole": "",
			"BackupTier":      "NA",
			"BusinessLine":    "Data Governance And Eprise. Arch",
			"CostCenter":      "",
			"Environment":     "uat",
			"ProjectID":       "PRJ0010800",
			"Tier":            "4",
		},
		"description":    "A mapping of tags to assign to all resources",
		"module_address": "module.bkun-dgea-copy-flat-file-maskout-data",
		"name":           "tags",
	},
	"module.bkun-dgea-create-emr-roles:create_ec2_role": {
		"default":        true,
		"description":    "Contains policy to interact EC2 instances via step functions.",
		"module_address": "module.bkun-dgea-create-emr-roles",
		"name":           "create_ec2_role",
	},
	"module.bkun-dgea-create-emr-roles:create_emr_role": {
		"default":        true,
		"description":    "Contains policy to interact EC2 instances via step functions.",
		"module_address": "module.bkun-dgea-create-emr-roles",
		"name":           "create_emr_role",
	},
	"module.bkun-dgea-create-emr-roles:create_emr_security_conf": {
		"default":        true,
		"description":    "Defaults to false - setting to true will create a role for use to the state machine. Requires role_policy",
		"module_address": "module.bkun-dgea-create-emr-roles",
		"name":           "create_emr_security_conf",
	},
	"module.bkun-dgea-create-emr-roles:ec2_dynamodb_policy_path": {
		"default":        "./ec2-dynamodb-policy.json",
		"description":    "Policies for ec2 instances of emr cluster to write data ingestion status in dynamodb.",
		"module_address": "module.bkun-dgea-create-emr-roles",
		"name":           "ec2_dynamodb_policy_path",
	},
	"module.bkun-dgea-create-emr-roles:ec2_kms_policy_path": {
		"default":        "./kms.json",
		"description":    "Policies for ec2 instances of emr cluster to kms keys.",
		"module_address": "module.bkun-dgea-create-emr-roles",
		"name":           "ec2_kms_policy_path",
	},
	"module.bkun-dgea-create-emr-roles:env": {
		"default":        "uat",
		"description":    "Environment for which we are running terrafrom scripts like dev, test, prod",
		"module_address": "module.bkun-dgea-create-emr-roles",
		"name":           "env",
	},
	"module.bkun-dgea-create-emr-roles:generic_policy_path": {
		"default":        "./generic-policy.json",
		"description":    "Generic policies for ec2 instances of emr cluster.",
		"module_address": "module.bkun-dgea-create-emr-roles",
		"name":           "generic_policy_path",
	},
	"module.bkun-dgea-create-emr-roles:s3_policy_path": {
		"default":        "./s3.json",
		"description":    "Policies for ec2 instances of emr cluster to s3.",
		"module_address": "module.bkun-dgea-create-emr-roles",
		"name":           "s3_policy_path",
	},
	"module.bkun-dgea-create-emr-roles:tags": {
		"default":        {},
		"description":    "A map of tags to apply to resources created by this module",
		"module_address": "module.bkun-dgea-create-emr-roles",
		"name":           "tags",
	},
	"module.bkun-dgea-datamart-conf-redacted.module.bkun-dgea-datamart-conf-redacted:bucket_name": {
		"default":        null,
		"description":    "The name to give the S3 bucket - must be globally unique",
		"module_address": "module.bkun-dgea-datamart-conf-redacted.module.bkun-dgea-datamart-conf-redacted",
		"name":           "bucket_name",
	},
	"module.bkun-dgea-datamart-conf-redacted.module.bkun-dgea-datamart-conf-redacted:create_kms_key": {
		"default":        true,
		"description":    "Create a new KMS key for use with this bucket",
		"module_address": "module.bkun-dgea-datamart-conf-redacted.module.bkun-dgea-datamart-conf-redacted",
		"name":           "create_kms_key",
	},
	"module.bkun-dgea-datamart-conf-redacted.module.bkun-dgea-datamart-conf-redacted:default_encryption": {
		"default":        false,
		"description":    "Enable default encryption for uploaded objects",
		"module_address": "module.bkun-dgea-datamart-conf-redacted.module.bkun-dgea-datamart-conf-redacted",
		"name":           "default_encryption",
	},
	"module.bkun-dgea-datamart-conf-redacted.module.bkun-dgea-datamart-conf-redacted:enable_versioning": {
		"default":        false,
		"description":    "Enable object versioning for the S3 bucket",
		"module_address": "module.bkun-dgea-datamart-conf-redacted.module.bkun-dgea-datamart-conf-redacted",
		"name":           "enable_versioning",
	},
	"module.bkun-dgea-datamart-conf-redacted.module.bkun-dgea-datamart-conf-redacted:kms_key_arn": {
		"default":        null,
		"description":    "If using default_encryption, define the ARN of the KMS key to use - ignore if using create_kms_key",
		"module_address": "module.bkun-dgea-datamart-conf-redacted.module.bkun-dgea-datamart-conf-redacted",
		"name":           "kms_key_arn",
	},
	"module.bkun-dgea-datamart-conf-redacted.module.bkun-dgea-datamart-conf-redacted:s3_bucket_acl": {
		"default":        "private",
		"description":    "The S3 pre-canned ACL to use for the bucket",
		"module_address": "module.bkun-dgea-datamart-conf-redacted.module.bkun-dgea-datamart-conf-redacted",
		"name":           "s3_bucket_acl",
	},
	"module.bkun-dgea-datamart-conf-redacted.module.bkun-dgea-datamart-conf-redacted:s3_bucket_policy": {
		"default":        null,
		"description":    "Bucket Policy to be applied to the bucket",
		"module_address": "module.bkun-dgea-datamart-conf-redacted.module.bkun-dgea-datamart-conf-redacted",
		"name":           "s3_bucket_policy",
	},
	"module.bkun-dgea-datamart-conf-redacted.module.bkun-dgea-datamart-conf-redacted:tags": {
		"default":        {},
		"description":    "A map of tags to apply to resources created by this module",
		"module_address": "module.bkun-dgea-datamart-conf-redacted.module.bkun-dgea-datamart-conf-redacted",
		"name":           "tags",
	},
	"module.bkun-dgea-datamart-conf-redacted:base_path": {
		"default":        ".",
		"description":    "",
		"module_address": "module.bkun-dgea-datamart-conf-redacted",
		"name":           "base_path",
	},
	"module.bkun-dgea-datamart-conf-redacted:create_kms_key": {
		"default":        true,
		"description":    "Create a new KMS key for use with this bucket",
		"module_address": "module.bkun-dgea-datamart-conf-redacted",
		"name":           "create_kms_key",
	},
	"module.bkun-dgea-datamart-conf-redacted:default_encryption": {
		"default":        true,
		"description":    "Enable default encryption for uploaded objects",
		"module_address": "module.bkun-dgea-datamart-conf-redacted",
		"name":           "default_encryption",
	},
	"module.bkun-dgea-datamart-conf-redacted:enable_versioning": {
		"default":        true,
		"description":    "Enable object versioning for the S3 bucket",
		"module_address": "module.bkun-dgea-datamart-conf-redacted",
		"name":           "enable_versioning",
	},
	"module.bkun-dgea-datamart-conf-redacted:env": {
		"default":        "uat",
		"description":    "Environment for which we are running terrafrom scripts like dev, uat, prod",
		"module_address": "module.bkun-dgea-datamart-conf-redacted",
		"name":           "env",
	},
	"module.bkun-dgea-datamart-conf-redacted:kms_key_arn": {
		"default":        null,
		"description":    "If using default_encryption, define the ARN of the KMS key to use - ignore if using create_kms_key",
		"module_address": "module.bkun-dgea-datamart-conf-redacted",
		"name":           "kms_key_arn",
	},
	"module.bkun-dgea-datamart-conf-redacted:name": {
		"default":        "bkun-dgea-dev-ingest-source-artifacts-version-2",
		"description":    "The name to give the S3 bucket - must be globally unique",
		"module_address": "module.bkun-dgea-datamart-conf-redacted",
		"name":           "name",
	},
	"module.bkun-dgea-datamart-conf-redacted:object_key": {
		"default":        "ingestion/",
		"description":    "It is the object key that we are uploading in s3",
		"module_address": "module.bkun-dgea-datamart-conf-redacted",
		"name":           "object_key",
	},
	"module.bkun-dgea-datamart-conf-redacted:object_source": {
		"default":        "ingestion/",
		"description":    "It is the object source that we are uploading in s3",
		"module_address": "module.bkun-dgea-datamart-conf-redacted",
		"name":           "object_source",
	},
	"module.bkun-dgea-datamart-conf-redacted:s3_bucket_acl": {
		"default":        "private",
		"description":    "The S3 pre-canned ACL to use for the bucket",
		"module_address": "module.bkun-dgea-datamart-conf-redacted",
		"name":           "s3_bucket_acl",
	},
	"module.bkun-dgea-datamart-conf-redacted:s3_source_bucket_policy_path": {
		"default":        "source_bucket_policy.json",
		"description":    "Bucket Policy to be applied to the bucket",
		"module_address": "module.bkun-dgea-datamart-conf-redacted",
		"name":           "s3_source_bucket_policy_path",
	},
	"module.bkun-dgea-datamart-conf-redacted:tags": {
		"default":        {},
		"description":    "A map of tags to apply to resources created by this module",
		"module_address": "module.bkun-dgea-datamart-conf-redacted",
		"name":           "tags",
	},
	"module.bkun-dgea-datamart-raw-redacted.module.bkun-dgea-dp-source-artifacts:bucket_name": {
		"default":        null,
		"description":    "The name to give the S3 bucket - must be globally unique",
		"module_address": "module.bkun-dgea-datamart-raw-redacted.module.bkun-dgea-dp-source-artifacts",
		"name":           "bucket_name",
	},
	"module.bkun-dgea-datamart-raw-redacted.module.bkun-dgea-dp-source-artifacts:create_kms_key": {
		"default":        true,
		"description":    "Create a new KMS key for use with this bucket",
		"module_address": "module.bkun-dgea-datamart-raw-redacted.module.bkun-dgea-dp-source-artifacts",
		"name":           "create_kms_key",
	},
	"module.bkun-dgea-datamart-raw-redacted.module.bkun-dgea-dp-source-artifacts:default_encryption": {
		"default":        false,
		"description":    "Enable default encryption for uploaded objects",
		"module_address": "module.bkun-dgea-datamart-raw-redacted.module.bkun-dgea-dp-source-artifacts",
		"name":           "default_encryption",
	},
	"module.bkun-dgea-datamart-raw-redacted.module.bkun-dgea-dp-source-artifacts:enable_versioning": {
		"default":        false,
		"description":    "Enable object versioning for the S3 bucket",
		"module_address": "module.bkun-dgea-datamart-raw-redacted.module.bkun-dgea-dp-source-artifacts",
		"name":           "enable_versioning",
	},
	"module.bkun-dgea-datamart-raw-redacted.module.bkun-dgea-dp-source-artifacts:kms_key_arn": {
		"default":        null,
		"description":    "If using default_encryption, define the ARN of the KMS key to use - ignore if using create_kms_key",
		"module_address": "module.bkun-dgea-datamart-raw-redacted.module.bkun-dgea-dp-source-artifacts",
		"name":           "kms_key_arn",
	},
	"module.bkun-dgea-datamart-raw-redacted.module.bkun-dgea-dp-source-artifacts:s3_bucket_acl": {
		"default":        "private",
		"description":    "The S3 pre-canned ACL to use for the bucket",
		"module_address": "module.bkun-dgea-datamart-raw-redacted.module.bkun-dgea-dp-source-artifacts",
		"name":           "s3_bucket_acl",
	},
	"module.bkun-dgea-datamart-raw-redacted.module.bkun-dgea-dp-source-artifacts:s3_bucket_policy": {
		"default":        null,
		"description":    "Bucket Policy to be applied to the bucket",
		"module_address": "module.bkun-dgea-datamart-raw-redacted.module.bkun-dgea-dp-source-artifacts",
		"name":           "s3_bucket_policy",
	},
	"module.bkun-dgea-datamart-raw-redacted.module.bkun-dgea-dp-source-artifacts:tags": {
		"default":        {},
		"description":    "A map of tags to apply to resources created by this module",
		"module_address": "module.bkun-dgea-datamart-raw-redacted.module.bkun-dgea-dp-source-artifacts",
		"name":           "tags",
	},
	"module.bkun-dgea-datamart-raw-redacted:base_path": {
		"default":        ".",
		"description":    "",
		"module_address": "module.bkun-dgea-datamart-raw-redacted",
		"name":           "base_path",
	},
	"module.bkun-dgea-datamart-raw-redacted:create_kms_key": {
		"default":        true,
		"description":    "Create a new KMS key for use with this bucket",
		"module_address": "module.bkun-dgea-datamart-raw-redacted",
		"name":           "create_kms_key",
	},
	"module.bkun-dgea-datamart-raw-redacted:default_encryption": {
		"default":        true,
		"description":    "Enable default encryption for uploaded objects",
		"module_address": "module.bkun-dgea-datamart-raw-redacted",
		"name":           "default_encryption",
	},
	"module.bkun-dgea-datamart-raw-redacted:enable_versioning": {
		"default":        true,
		"description":    "Enable object versioning for the S3 bucket",
		"module_address": "module.bkun-dgea-datamart-raw-redacted",
		"name":           "enable_versioning",
	},
	"module.bkun-dgea-datamart-raw-redacted:env": {
		"default":        "uat",
		"description":    "Environment for which we are running terrafrom scripts like dev, uat, prod",
		"module_address": "module.bkun-dgea-datamart-raw-redacted",
		"name":           "env",
	},
	"module.bkun-dgea-datamart-raw-redacted:kms_key_arn": {
		"default":        null,
		"description":    "If using default_encryption, define the ARN of the KMS key to use - ignore if using create_kms_key",
		"module_address": "module.bkun-dgea-datamart-raw-redacted",
		"name":           "kms_key_arn",
	},
	"module.bkun-dgea-datamart-raw-redacted:name": {
		"default":        "bkun-dgea-dev-ingest-source-artifacts-version-2",
		"description":    "The name to give the S3 bucket - must be globally unique",
		"module_address": "module.bkun-dgea-datamart-raw-redacted",
		"name":           "name",
	},
	"module.bkun-dgea-datamart-raw-redacted:object_key": {
		"default":        "ingestion/",
		"description":    "It is the object key that we are uploading in s3",
		"module_address": "module.bkun-dgea-datamart-raw-redacted",
		"name":           "object_key",
	},
	"module.bkun-dgea-datamart-raw-redacted:object_source": {
		"default":        "ingestion/",
		"description":    "It is the object source that we are uploading in s3",
		"module_address": "module.bkun-dgea-datamart-raw-redacted",
		"name":           "object_source",
	},
	"module.bkun-dgea-datamart-raw-redacted:s3_bucket_acl": {
		"default":        "private",
		"description":    "The S3 pre-canned ACL to use for the bucket",
		"module_address": "module.bkun-dgea-datamart-raw-redacted",
		"name":           "s3_bucket_acl",
	},
	"module.bkun-dgea-datamart-raw-redacted:s3_source_bucket_policy_path": {
		"default":        "source_bucket_policy.json",
		"description":    "Bucket Policy to be applied to the bucket",
		"module_address": "module.bkun-dgea-datamart-raw-redacted",
		"name":           "s3_source_bucket_policy_path",
	},
	"module.bkun-dgea-datamart-raw-redacted:tags": {
		"default":        {},
		"description":    "A map of tags to apply to resources created by this module",
		"module_address": "module.bkun-dgea-datamart-raw-redacted",
		"name":           "tags",
	},
	"module.bkun-dgea-ddl-creation-step-function.module.bkun-dgea-ddl-creation-step-function:create_role": {
		"default":        false,
		"description":    "Defaults to false - setting to true will create a role for use to the state machine. Requires role_policy",
		"module_address": "module.bkun-dgea-ddl-creation-step-function.module.bkun-dgea-ddl-creation-step-function",
		"name":           "create_role",
	},
	"module.bkun-dgea-ddl-creation-step-function.module.bkun-dgea-ddl-creation-step-function:create_sfn_role": {
		"default":        false,
		"description":    "Contains policy to interact EC2 instances via step functions.",
		"module_address": "module.bkun-dgea-ddl-creation-step-function.module.bkun-dgea-ddl-creation-step-function",
		"name":           "create_sfn_role",
	},
	"module.bkun-dgea-ddl-creation-step-function.module.bkun-dgea-ddl-creation-step-function:definition": {
		"default":        null,
		"description":    "The ASL code for the state machine",
		"module_address": "module.bkun-dgea-ddl-creation-step-function.module.bkun-dgea-ddl-creation-step-function",
		"name":           "definition",
	},
	"module.bkun-dgea-ddl-creation-step-function.module.bkun-dgea-ddl-creation-step-function:ec2_dynamodb_policy_path": {
		"default":        "../../iam/step-function/ec2-dynamodb-policy.json",
		"description":    "Policies for ec2 instances of emr cluster to write data ingestion status in dynamodb.",
		"module_address": "module.bkun-dgea-ddl-creation-step-function.module.bkun-dgea-ddl-creation-step-function",
		"name":           "ec2_dynamodb_policy_path",
	},
	"module.bkun-dgea-ddl-creation-step-function.module.bkun-dgea-ddl-creation-step-function:env": {
		"default":        "test",
		"description":    "Environment for which we are running terrafrom scripts like dev, test, prod",
		"module_address": "module.bkun-dgea-ddl-creation-step-function.module.bkun-dgea-ddl-creation-step-function",
		"name":           "env",
	},
	"module.bkun-dgea-ddl-creation-step-function.module.bkun-dgea-ddl-creation-step-function:name": {
		"default":        null,
		"description":    "The name to give the state machine",
		"module_address": "module.bkun-dgea-ddl-creation-step-function.module.bkun-dgea-ddl-creation-step-function",
		"name":           "name",
	},
	"module.bkun-dgea-ddl-creation-step-function.module.bkun-dgea-ddl-creation-step-function:role_arn": {
		"default":        null,
		"description":    "Role ARN used for the state machine - ignore if leveraging create_role",
		"module_address": "module.bkun-dgea-ddl-creation-step-function.module.bkun-dgea-ddl-creation-step-function",
		"name":           "role_arn",
	},
	"module.bkun-dgea-ddl-creation-step-function.module.bkun-dgea-ddl-creation-step-function:role_policy": {
		"default":        null,
		"description":    "The role policy to use when leveraging create_role - ignore if leveraging role_arn",
		"module_address": "module.bkun-dgea-ddl-creation-step-function.module.bkun-dgea-ddl-creation-step-function",
		"name":           "role_policy",
	},
	"module.bkun-dgea-ddl-creation-step-function.module.bkun-dgea-ddl-creation-step-function:sfn_cw_policy_path": {
		"default":        "../../iam/step-function/sfn-cw-policy.json",
		"description":    "Contains policy to keep emr logs on S3 and trasfer role to ec2 instances of emr cluster.",
		"module_address": "module.bkun-dgea-ddl-creation-step-function.module.bkun-dgea-ddl-creation-step-function",
		"name":           "sfn_cw_policy_path",
	},
	"module.bkun-dgea-ddl-creation-step-function.module.bkun-dgea-ddl-creation-step-function:sfn_ec2_policy_path": {
		"default":        "../../iam/step-function/sfn-ec2-policy.json",
		"description":    "Contains policy to interact EC2 instances via step functions.",
		"module_address": "module.bkun-dgea-ddl-creation-step-function.module.bkun-dgea-ddl-creation-step-function",
		"name":           "sfn_ec2_policy_path",
	},
	"module.bkun-dgea-ddl-creation-step-function.module.bkun-dgea-ddl-creation-step-function:sfn_emr_policy_path": {
		"default":        "../../iam/step-function/sfn-emr-policy.json",
		"description":    "Contains policy to execute various EMR commands using step functions like createcluster.",
		"module_address": "module.bkun-dgea-ddl-creation-step-function.module.bkun-dgea-ddl-creation-step-function",
		"name":           "sfn_emr_policy_path",
	},
	"module.bkun-dgea-ddl-creation-step-function.module.bkun-dgea-ddl-creation-step-function:sfn_policy_path": {
		"default":        "../../iam/step-function/policy.json",
		"description":    "Contains generic policy for step function execution and interacting with different services.",
		"module_address": "module.bkun-dgea-ddl-creation-step-function.module.bkun-dgea-ddl-creation-step-function",
		"name":           "sfn_policy_path",
	},
	"module.bkun-dgea-ddl-creation-step-function.module.bkun-dgea-ddl-creation-step-function:sfn_s3_policy_path": {
		"default":        "../../iam/step-function/sfn-s3-policy.json",
		"description":    "Path to emr ec2 policy",
		"module_address": "module.bkun-dgea-ddl-creation-step-function.module.bkun-dgea-ddl-creation-step-function",
		"name":           "sfn_s3_policy_path",
	},
	"module.bkun-dgea-ddl-creation-step-function.module.bkun-dgea-ddl-creation-step-function:tags": {
		"default":        {},
		"description":    "A map of tags to apply to resources created by this module",
		"module_address": "module.bkun-dgea-ddl-creation-step-function.module.bkun-dgea-ddl-creation-step-function",
		"name":           "tags",
	},
	"module.bkun-dgea-ddl-creation-step-function:core_instance_count": {
		"default":        2,
		"description":    "",
		"module_address": "module.bkun-dgea-ddl-creation-step-function",
		"name":           "core_instance_count",
	},
	"module.bkun-dgea-ddl-creation-step-function:create_sfn_role": {
		"default":        true,
		"description":    "Contains policy to interact EC2 instances via step functions.",
		"module_address": "module.bkun-dgea-ddl-creation-step-function",
		"name":           "create_sfn_role",
	},
	"module.bkun-dgea-ddl-creation-step-function:ec2_dynamodb_policy_path": {
		"default":        "../../iam/step-function/ec2-dynamodb-policy.json",
		"description":    "Policies for ec2 instances of emr cluster to write data ingestion status in dynamodb.",
		"module_address": "module.bkun-dgea-ddl-creation-step-function",
		"name":           "ec2_dynamodb_policy_path",
	},
	"module.bkun-dgea-ddl-creation-step-function:emr_release_label": {
		"default":        "emr-5.29.0",
		"description":    "",
		"module_address": "module.bkun-dgea-ddl-creation-step-function",
		"name":           "emr_release_label",
	},
	"module.bkun-dgea-ddl-creation-step-function:env": {
		"default":        "uat",
		"description":    "Environment for which we are running terrafrom scripts like dev, test, prod",
		"module_address": "module.bkun-dgea-ddl-creation-step-function",
		"name":           "env",
	},
	"module.bkun-dgea-ddl-creation-step-function:instance_type": {
		"default":        "m5.xlarge",
		"description":    "",
		"module_address": "module.bkun-dgea-ddl-creation-step-function",
		"name":           "instance_type",
	},
	"module.bkun-dgea-ddl-creation-step-function:master_instance_count": {
		"default":        1,
		"description":    "",
		"module_address": "module.bkun-dgea-ddl-creation-step-function",
		"name":           "master_instance_count",
	},
	"module.bkun-dgea-ddl-creation-step-function:sfn_cw_policy_path": {
		"default":        "../../iam/step-function/sfn-cw-policy.json",
		"description":    "Contains policy to keep emr logs on S3 and trasfer role to ec2 instances of emr cluster.",
		"module_address": "module.bkun-dgea-ddl-creation-step-function",
		"name":           "sfn_cw_policy_path",
	},
	"module.bkun-dgea-ddl-creation-step-function:sfn_ec2_policy_path": {
		"default":        "../../iam/step-function/sfn-ec2-policy.json",
		"description":    "Contains policy to interact EC2 instances via step functions.",
		"module_address": "module.bkun-dgea-ddl-creation-step-function",
		"name":           "sfn_ec2_policy_path",
	},
	"module.bkun-dgea-ddl-creation-step-function:sfn_emr_policy_path": {
		"default":        "../../iam/step-function/sfn-emr-policy.json",
		"description":    "Contains policy to execute various EMR commands using step functions like createcluster.",
		"module_address": "module.bkun-dgea-ddl-creation-step-function",
		"name":           "sfn_emr_policy_path",
	},
	"module.bkun-dgea-ddl-creation-step-function:sfn_policy_path": {
		"default":        "../../iam/step-function/policy.json",
		"description":    "Contains generic policy for step function execution and interacting with different services.",
		"module_address": "module.bkun-dgea-ddl-creation-step-function",
		"name":           "sfn_policy_path",
	},
	"module.bkun-dgea-ddl-creation-step-function:sfn_s3_policy_path": {
		"default":        "../../iam/step-function/sfn-s3-policy.json",
		"description":    "Path to emr ec2 policy",
		"module_address": "module.bkun-dgea-ddl-creation-step-function",
		"name":           "sfn_s3_policy_path",
	},
	"module.bkun-dgea-ddl-creation-step-function:sfn_subnet_id": {
		"default":        "subnet-0a80d66c576c8407a",
		"description":    "",
		"module_address": "module.bkun-dgea-ddl-creation-step-function",
		"name":           "sfn_subnet_id",
	},
	"module.bkun-dgea-ddl-creation-step-function:tags": {
		"default": {
			"ApplicationID":   "",
			"ApplicationName": "data-processing-emr",
			"ApplicationRole": "",
			"BackupTier":      "NA",
			"BusinessLine":    "Data Governance And Eprise. Arch",
			"CostCenter":      "",
			"Environment":     "uat",
			"ProjectID":       "PRJ0010800",
			"Tier":            "4",
		},
		"description":    "A mapping of tags to assign to all resources",
		"module_address": "module.bkun-dgea-ddl-creation-step-function",
		"name":           "tags",
	},
	"module.bkun-dgea-emr-setup-stepfunction.module.bkun-dgea-etl-emr-cluster-setup-stepfunction:create_role": {
		"default":        false,
		"description":    "Defaults to false - setting to true will create a role for use to the state machine. Requires role_policy",
		"module_address": "module.bkun-dgea-emr-setup-stepfunction.module.bkun-dgea-etl-emr-cluster-setup-stepfunction",
		"name":           "create_role",
	},
	"module.bkun-dgea-emr-setup-stepfunction.module.bkun-dgea-etl-emr-cluster-setup-stepfunction:create_sfn_role": {
		"default":        false,
		"description":    "Contains policy to interact EC2 instances via step functions.",
		"module_address": "module.bkun-dgea-emr-setup-stepfunction.module.bkun-dgea-etl-emr-cluster-setup-stepfunction",
		"name":           "create_sfn_role",
	},
	"module.bkun-dgea-emr-setup-stepfunction.module.bkun-dgea-etl-emr-cluster-setup-stepfunction:definition": {
		"default":        null,
		"description":    "The ASL code for the state machine",
		"module_address": "module.bkun-dgea-emr-setup-stepfunction.module.bkun-dgea-etl-emr-cluster-setup-stepfunction",
		"name":           "definition",
	},
	"module.bkun-dgea-emr-setup-stepfunction.module.bkun-dgea-etl-emr-cluster-setup-stepfunction:ec2_dynamodb_policy_path": {
		"default":        "../../iam/step-function/ec2-dynamodb-policy.json",
		"description":    "Policies for ec2 instances of emr cluster to write data ingestion status in dynamodb.",
		"module_address": "module.bkun-dgea-emr-setup-stepfunction.module.bkun-dgea-etl-emr-cluster-setup-stepfunction",
		"name":           "ec2_dynamodb_policy_path",
	},
	"module.bkun-dgea-emr-setup-stepfunction.module.bkun-dgea-etl-emr-cluster-setup-stepfunction:env": {
		"default":        "test",
		"description":    "Environment for which we are running terrafrom scripts like dev, test, prod",
		"module_address": "module.bkun-dgea-emr-setup-stepfunction.module.bkun-dgea-etl-emr-cluster-setup-stepfunction",
		"name":           "env",
	},
	"module.bkun-dgea-emr-setup-stepfunction.module.bkun-dgea-etl-emr-cluster-setup-stepfunction:name": {
		"default":        null,
		"description":    "The name to give the state machine",
		"module_address": "module.bkun-dgea-emr-setup-stepfunction.module.bkun-dgea-etl-emr-cluster-setup-stepfunction",
		"name":           "name",
	},
	"module.bkun-dgea-emr-setup-stepfunction.module.bkun-dgea-etl-emr-cluster-setup-stepfunction:role_arn": {
		"default":        null,
		"description":    "Role ARN used for the state machine - ignore if leveraging create_role",
		"module_address": "module.bkun-dgea-emr-setup-stepfunction.module.bkun-dgea-etl-emr-cluster-setup-stepfunction",
		"name":           "role_arn",
	},
	"module.bkun-dgea-emr-setup-stepfunction.module.bkun-dgea-etl-emr-cluster-setup-stepfunction:role_policy": {
		"default":        null,
		"description":    "The role policy to use when leveraging create_role - ignore if leveraging role_arn",
		"module_address": "module.bkun-dgea-emr-setup-stepfunction.module.bkun-dgea-etl-emr-cluster-setup-stepfunction",
		"name":           "role_policy",
	},
	"module.bkun-dgea-emr-setup-stepfunction.module.bkun-dgea-etl-emr-cluster-setup-stepfunction:sfn_cw_policy_path": {
		"default":        "../../iam/step-function/sfn-cw-policy.json",
		"description":    "Contains policy to keep emr logs on S3 and trasfer role to ec2 instances of emr cluster.",
		"module_address": "module.bkun-dgea-emr-setup-stepfunction.module.bkun-dgea-etl-emr-cluster-setup-stepfunction",
		"name":           "sfn_cw_policy_path",
	},
	"module.bkun-dgea-emr-setup-stepfunction.module.bkun-dgea-etl-emr-cluster-setup-stepfunction:sfn_ec2_policy_path": {
		"default":        "../../iam/step-function/sfn-ec2-policy.json",
		"description":    "Contains policy to interact EC2 instances via step functions.",
		"module_address": "module.bkun-dgea-emr-setup-stepfunction.module.bkun-dgea-etl-emr-cluster-setup-stepfunction",
		"name":           "sfn_ec2_policy_path",
	},
	"module.bkun-dgea-emr-setup-stepfunction.module.bkun-dgea-etl-emr-cluster-setup-stepfunction:sfn_emr_policy_path": {
		"default":        "../../iam/step-function/sfn-emr-policy.json",
		"description":    "Contains policy to execute various EMR commands using step functions like createcluster.",
		"module_address": "module.bkun-dgea-emr-setup-stepfunction.module.bkun-dgea-etl-emr-cluster-setup-stepfunction",
		"name":           "sfn_emr_policy_path",
	},
	"module.bkun-dgea-emr-setup-stepfunction.module.bkun-dgea-etl-emr-cluster-setup-stepfunction:sfn_policy_path": {
		"default":        "../../iam/step-function/policy.json",
		"description":    "Contains generic policy for step function execution and interacting with different services.",
		"module_address": "module.bkun-dgea-emr-setup-stepfunction.module.bkun-dgea-etl-emr-cluster-setup-stepfunction",
		"name":           "sfn_policy_path",
	},
	"module.bkun-dgea-emr-setup-stepfunction.module.bkun-dgea-etl-emr-cluster-setup-stepfunction:sfn_s3_policy_path": {
		"default":        "../../iam/step-function/sfn-s3-policy.json",
		"description":    "Path to emr ec2 policy",
		"module_address": "module.bkun-dgea-emr-setup-stepfunction.module.bkun-dgea-etl-emr-cluster-setup-stepfunction",
		"name":           "sfn_s3_policy_path",
	},
	"module.bkun-dgea-emr-setup-stepfunction.module.bkun-dgea-etl-emr-cluster-setup-stepfunction:tags": {
		"default":        {},
		"description":    "A map of tags to apply to resources created by this module",
		"module_address": "module.bkun-dgea-emr-setup-stepfunction.module.bkun-dgea-etl-emr-cluster-setup-stepfunction",
		"name":           "tags",
	},
	"module.bkun-dgea-emr-setup-stepfunction:core_instance_count": {
		"default":        2,
		"description":    "",
		"module_address": "module.bkun-dgea-emr-setup-stepfunction",
		"name":           "core_instance_count",
	},
	"module.bkun-dgea-emr-setup-stepfunction:create_sfn_role": {
		"default":        true,
		"description":    "Contains policy to interact EC2 instances via step functions.",
		"module_address": "module.bkun-dgea-emr-setup-stepfunction",
		"name":           "create_sfn_role",
	},
	"module.bkun-dgea-emr-setup-stepfunction:ec2_dynamodb_policy_path": {
		"default":        "../../iam/step-function/ec2-dynamodb-policy.json",
		"description":    "Policies for ec2 instances of emr cluster to write data ingestion status in dynamodb.",
		"module_address": "module.bkun-dgea-emr-setup-stepfunction",
		"name":           "ec2_dynamodb_policy_path",
	},
	"module.bkun-dgea-emr-setup-stepfunction:ec2_key_name": {
		"default":        "DP-UAT-EMR",
		"description":    "",
		"module_address": "module.bkun-dgea-emr-setup-stepfunction",
		"name":           "ec2_key_name",
	},
	"module.bkun-dgea-emr-setup-stepfunction:emr_release_label": {
		"default":        "emr-5.29.0",
		"description":    "",
		"module_address": "module.bkun-dgea-emr-setup-stepfunction",
		"name":           "emr_release_label",
	},
	"module.bkun-dgea-emr-setup-stepfunction:env": {
		"default":        "uat",
		"description":    "Environment for which we are running terrafrom scripts like dev, test, prod",
		"module_address": "module.bkun-dgea-emr-setup-stepfunction",
		"name":           "env",
	},
	"module.bkun-dgea-emr-setup-stepfunction:instance_type": {
		"default":        "m5.xlarge",
		"description":    "",
		"module_address": "module.bkun-dgea-emr-setup-stepfunction",
		"name":           "instance_type",
	},
	"module.bkun-dgea-emr-setup-stepfunction:master_instance_count": {
		"default":        1,
		"description":    "",
		"module_address": "module.bkun-dgea-emr-setup-stepfunction",
		"name":           "master_instance_count",
	},
	"module.bkun-dgea-emr-setup-stepfunction:sfn_cw_policy_path": {
		"default":        "../../iam/step-function/sfn-cw-policy.json",
		"description":    "Contains policy to keep emr logs on S3 and trasfer role to ec2 instances of emr cluster.",
		"module_address": "module.bkun-dgea-emr-setup-stepfunction",
		"name":           "sfn_cw_policy_path",
	},
	"module.bkun-dgea-emr-setup-stepfunction:sfn_ec2_policy_path": {
		"default":        "../../iam/step-function/sfn-ec2-policy.json",
		"description":    "Contains policy to interact EC2 instances via step functions.",
		"module_address": "module.bkun-dgea-emr-setup-stepfunction",
		"name":           "sfn_ec2_policy_path",
	},
	"module.bkun-dgea-emr-setup-stepfunction:sfn_emr_policy_path": {
		"default":        "../../iam/step-function/sfn-emr-policy.json",
		"description":    "Contains policy to execute various EMR commands using step functions like createcluster.",
		"module_address": "module.bkun-dgea-emr-setup-stepfunction",
		"name":           "sfn_emr_policy_path",
	},
	"module.bkun-dgea-emr-setup-stepfunction:sfn_policy_path": {
		"default":        "../../iam/step-function/policy.json",
		"description":    "Contains generic policy for step function execution and interacting with different services.",
		"module_address": "module.bkun-dgea-emr-setup-stepfunction",
		"name":           "sfn_policy_path",
	},
	"module.bkun-dgea-emr-setup-stepfunction:sfn_s3_policy_path": {
		"default":        "../../iam/step-function/sfn-s3-policy.json",
		"description":    "Path to emr ec2 policy",
		"module_address": "module.bkun-dgea-emr-setup-stepfunction",
		"name":           "sfn_s3_policy_path",
	},
	"module.bkun-dgea-emr-setup-stepfunction:sfn_subnet_id": {
		"default":        null,
		"description":    "",
		"module_address": "module.bkun-dgea-emr-setup-stepfunction",
		"name":           "sfn_subnet_id",
	},
	"module.bkun-dgea-emr-setup-stepfunction:tags": {
		"default": {
			"ApplicationID":   "",
			"ApplicationName": "data-processing-emr",
			"ApplicationRole": "",
			"BackupTier":      "NA",
			"BusinessLine":    "Data Governance And Eprise. Arch",
			"CostCenter":      "",
			"Environment":     "uat",
			"ProjectID":       "PRJ0010800",
			"Tier":            "4",
		},
		"description":    "A mapping of tags to assign to all resources",
		"module_address": "module.bkun-dgea-emr-setup-stepfunction",
		"name":           "tags",
	},
	"module.bkun-dgea-etl-stepfunction.module.bkun-dgea-etl-stepfunction:create_role": {
		"default":        false,
		"description":    "Defaults to false - setting to true will create a role for use to the state machine. Requires role_policy",
		"module_address": "module.bkun-dgea-etl-stepfunction.module.bkun-dgea-etl-stepfunction",
		"name":           "create_role",
	},
	"module.bkun-dgea-etl-stepfunction.module.bkun-dgea-etl-stepfunction:create_sfn_role": {
		"default":        false,
		"description":    "Contains policy to interact EC2 instances via step functions.",
		"module_address": "module.bkun-dgea-etl-stepfunction.module.bkun-dgea-etl-stepfunction",
		"name":           "create_sfn_role",
	},
	"module.bkun-dgea-etl-stepfunction.module.bkun-dgea-etl-stepfunction:definition": {
		"default":        null,
		"description":    "The ASL code for the state machine",
		"module_address": "module.bkun-dgea-etl-stepfunction.module.bkun-dgea-etl-stepfunction",
		"name":           "definition",
	},
	"module.bkun-dgea-etl-stepfunction.module.bkun-dgea-etl-stepfunction:ec2_dynamodb_policy_path": {
		"default":        "../../iam/step-function/ec2-dynamodb-policy.json",
		"description":    "Policies for ec2 instances of emr cluster to write data ingestion status in dynamodb.",
		"module_address": "module.bkun-dgea-etl-stepfunction.module.bkun-dgea-etl-stepfunction",
		"name":           "ec2_dynamodb_policy_path",
	},
	"module.bkun-dgea-etl-stepfunction.module.bkun-dgea-etl-stepfunction:env": {
		"default":        "test",
		"description":    "Environment for which we are running terrafrom scripts like dev, test, prod",
		"module_address": "module.bkun-dgea-etl-stepfunction.module.bkun-dgea-etl-stepfunction",
		"name":           "env",
	},
	"module.bkun-dgea-etl-stepfunction.module.bkun-dgea-etl-stepfunction:name": {
		"default":        null,
		"description":    "The name to give the state machine",
		"module_address": "module.bkun-dgea-etl-stepfunction.module.bkun-dgea-etl-stepfunction",
		"name":           "name",
	},
	"module.bkun-dgea-etl-stepfunction.module.bkun-dgea-etl-stepfunction:role_arn": {
		"default":        null,
		"description":    "Role ARN used for the state machine - ignore if leveraging create_role",
		"module_address": "module.bkun-dgea-etl-stepfunction.module.bkun-dgea-etl-stepfunction",
		"name":           "role_arn",
	},
	"module.bkun-dgea-etl-stepfunction.module.bkun-dgea-etl-stepfunction:role_policy": {
		"default":        null,
		"description":    "The role policy to use when leveraging create_role - ignore if leveraging role_arn",
		"module_address": "module.bkun-dgea-etl-stepfunction.module.bkun-dgea-etl-stepfunction",
		"name":           "role_policy",
	},
	"module.bkun-dgea-etl-stepfunction.module.bkun-dgea-etl-stepfunction:sfn_cw_policy_path": {
		"default":        "../../iam/step-function/sfn-cw-policy.json",
		"description":    "Contains policy to keep emr logs on S3 and trasfer role to ec2 instances of emr cluster.",
		"module_address": "module.bkun-dgea-etl-stepfunction.module.bkun-dgea-etl-stepfunction",
		"name":           "sfn_cw_policy_path",
	},
	"module.bkun-dgea-etl-stepfunction.module.bkun-dgea-etl-stepfunction:sfn_ec2_policy_path": {
		"default":        "../../iam/step-function/sfn-ec2-policy.json",
		"description":    "Contains policy to interact EC2 instances via step functions.",
		"module_address": "module.bkun-dgea-etl-stepfunction.module.bkun-dgea-etl-stepfunction",
		"name":           "sfn_ec2_policy_path",
	},
	"module.bkun-dgea-etl-stepfunction.module.bkun-dgea-etl-stepfunction:sfn_emr_policy_path": {
		"default":        "../../iam/step-function/sfn-emr-policy.json",
		"description":    "Contains policy to execute various EMR commands using step functions like createcluster.",
		"module_address": "module.bkun-dgea-etl-stepfunction.module.bkun-dgea-etl-stepfunction",
		"name":           "sfn_emr_policy_path",
	},
	"module.bkun-dgea-etl-stepfunction.module.bkun-dgea-etl-stepfunction:sfn_policy_path": {
		"default":        "../../iam/step-function/policy.json",
		"description":    "Contains generic policy for step function execution and interacting with different services.",
		"module_address": "module.bkun-dgea-etl-stepfunction.module.bkun-dgea-etl-stepfunction",
		"name":           "sfn_policy_path",
	},
	"module.bkun-dgea-etl-stepfunction.module.bkun-dgea-etl-stepfunction:sfn_s3_policy_path": {
		"default":        "../../iam/step-function/sfn-s3-policy.json",
		"description":    "Path to emr ec2 policy",
		"module_address": "module.bkun-dgea-etl-stepfunction.module.bkun-dgea-etl-stepfunction",
		"name":           "sfn_s3_policy_path",
	},
	"module.bkun-dgea-etl-stepfunction.module.bkun-dgea-etl-stepfunction:tags": {
		"default":        {},
		"description":    "A map of tags to apply to resources created by this module",
		"module_address": "module.bkun-dgea-etl-stepfunction.module.bkun-dgea-etl-stepfunction",
		"name":           "tags",
	},
	"module.bkun-dgea-etl-stepfunction:core_instance_count": {
		"default":        2,
		"description":    "",
		"module_address": "module.bkun-dgea-etl-stepfunction",
		"name":           "core_instance_count",
	},
	"module.bkun-dgea-etl-stepfunction:create_policy": {
		"default":        true,
		"description":    "Contains policy to interact EC2 instances via step functions.",
		"module_address": "module.bkun-dgea-etl-stepfunction",
		"name":           "create_policy",
	},
	"module.bkun-dgea-etl-stepfunction:create_sfn_role": {
		"default":        true,
		"description":    "Contains policy to interact EC2 instances via step functions.",
		"module_address": "module.bkun-dgea-etl-stepfunction",
		"name":           "create_sfn_role",
	},
	"module.bkun-dgea-etl-stepfunction:ec2_dynamodb_policy_path": {
		"default":        "../../iam/step-function/ec2-dynamodb-policy.json",
		"description":    "Policies for ec2 instances of emr cluster to write data ingestion status in dynamodb.",
		"module_address": "module.bkun-dgea-etl-stepfunction",
		"name":           "ec2_dynamodb_policy_path",
	},
	"module.bkun-dgea-etl-stepfunction:ec2_key_name": {
		"default":        "DP-UAT-EMR",
		"description":    "",
		"module_address": "module.bkun-dgea-etl-stepfunction",
		"name":           "ec2_key_name",
	},
	"module.bkun-dgea-etl-stepfunction:emr_release_label": {
		"default":        "emr-5.29.0",
		"description":    "",
		"module_address": "module.bkun-dgea-etl-stepfunction",
		"name":           "emr_release_label",
	},
	"module.bkun-dgea-etl-stepfunction:env": {
		"default":        "uat",
		"description":    "Environment for which we are running terrafrom scripts like dev, test, prod",
		"module_address": "module.bkun-dgea-etl-stepfunction",
		"name":           "env",
	},
	"module.bkun-dgea-etl-stepfunction:instance_type": {
		"default":        "m5.xlarge",
		"description":    "",
		"module_address": "module.bkun-dgea-etl-stepfunction",
		"name":           "instance_type",
	},
	"module.bkun-dgea-etl-stepfunction:master_instance_count": {
		"default":        1,
		"description":    "",
		"module_address": "module.bkun-dgea-etl-stepfunction",
		"name":           "master_instance_count",
	},
	"module.bkun-dgea-etl-stepfunction:sfn_cw_policy_path": {
		"default":        "../../iam/step-function/sfn-cw-policy.json",
		"description":    "Contains policy to keep emr logs on S3 and trasfer role to ec2 instances of emr cluster.",
		"module_address": "module.bkun-dgea-etl-stepfunction",
		"name":           "sfn_cw_policy_path",
	},
	"module.bkun-dgea-etl-stepfunction:sfn_ec2_policy_path": {
		"default":        "../../iam/step-function/sfn-ec2-policy.json",
		"description":    "Contains policy to interact EC2 instances via step functions.",
		"module_address": "module.bkun-dgea-etl-stepfunction",
		"name":           "sfn_ec2_policy_path",
	},
	"module.bkun-dgea-etl-stepfunction:sfn_emr_policy_path": {
		"default":        "../../iam/step-function/sfn-emr-policy.json",
		"description":    "Contains policy to execute various EMR commands using step functions like createcluster.",
		"module_address": "module.bkun-dgea-etl-stepfunction",
		"name":           "sfn_emr_policy_path",
	},
	"module.bkun-dgea-etl-stepfunction:sfn_policy_path": {
		"default":        "../../iam/step-function/policy.json",
		"description":    "Contains generic policy for step function execution and interacting with different services.",
		"module_address": "module.bkun-dgea-etl-stepfunction",
		"name":           "sfn_policy_path",
	},
	"module.bkun-dgea-etl-stepfunction:sfn_s3_policy_path": {
		"default":        "../../iam/step-function/sfn-s3-policy.json",
		"description":    "Path to emr ec2 policy",
		"module_address": "module.bkun-dgea-etl-stepfunction",
		"name":           "sfn_s3_policy_path",
	},
	"module.bkun-dgea-etl-stepfunction:sfn_subnet_id": {
		"default":        null,
		"description":    "",
		"module_address": "module.bkun-dgea-etl-stepfunction",
		"name":           "sfn_subnet_id",
	},
	"module.bkun-dgea-etl-stepfunction:tags": {
		"default": {
			"ApplicationID":   "",
			"ApplicationName": "data-processing-emr",
			"ApplicationRole": "",
			"BackupTier":      "NA",
			"BusinessLine":    "Data Governance And Eprise. Arch",
			"CostCenter":      "",
			"Environment":     "uat",
			"ProjectID":       "PRJ0010800",
			"Tier":            "4",
		},
		"description":    "A mapping of tags to assign to all resources",
		"module_address": "module.bkun-dgea-etl-stepfunction",
		"name":           "tags",
	},
	"module.bkun-dgea-maskout-data-copy.module.bkun-dgea-maskout-data-copy:create_role": {
		"default":        false,
		"description":    "Defaults to false - setting to true will create a role for use to the state machine. Requires role_policy",
		"module_address": "module.bkun-dgea-maskout-data-copy.module.bkun-dgea-maskout-data-copy",
		"name":           "create_role",
	},
	"module.bkun-dgea-maskout-data-copy.module.bkun-dgea-maskout-data-copy:create_sfn_role": {
		"default":        false,
		"description":    "Contains policy to interact EC2 instances via step functions.",
		"module_address": "module.bkun-dgea-maskout-data-copy.module.bkun-dgea-maskout-data-copy",
		"name":           "create_sfn_role",
	},
	"module.bkun-dgea-maskout-data-copy.module.bkun-dgea-maskout-data-copy:definition": {
		"default":        null,
		"description":    "The ASL code for the state machine",
		"module_address": "module.bkun-dgea-maskout-data-copy.module.bkun-dgea-maskout-data-copy",
		"name":           "definition",
	},
	"module.bkun-dgea-maskout-data-copy.module.bkun-dgea-maskout-data-copy:ec2_dynamodb_policy_path": {
		"default":        "../../iam/step-function/ec2-dynamodb-policy.json",
		"description":    "Policies for ec2 instances of emr cluster to write data ingestion status in dynamodb.",
		"module_address": "module.bkun-dgea-maskout-data-copy.module.bkun-dgea-maskout-data-copy",
		"name":           "ec2_dynamodb_policy_path",
	},
	"module.bkun-dgea-maskout-data-copy.module.bkun-dgea-maskout-data-copy:env": {
		"default":        "test",
		"description":    "Environment for which we are running terrafrom scripts like dev, test, prod",
		"module_address": "module.bkun-dgea-maskout-data-copy.module.bkun-dgea-maskout-data-copy",
		"name":           "env",
	},
	"module.bkun-dgea-maskout-data-copy.module.bkun-dgea-maskout-data-copy:name": {
		"default":        null,
		"description":    "The name to give the state machine",
		"module_address": "module.bkun-dgea-maskout-data-copy.module.bkun-dgea-maskout-data-copy",
		"name":           "name",
	},
	"module.bkun-dgea-maskout-data-copy.module.bkun-dgea-maskout-data-copy:role_arn": {
		"default":        null,
		"description":    "Role ARN used for the state machine - ignore if leveraging create_role",
		"module_address": "module.bkun-dgea-maskout-data-copy.module.bkun-dgea-maskout-data-copy",
		"name":           "role_arn",
	},
	"module.bkun-dgea-maskout-data-copy.module.bkun-dgea-maskout-data-copy:role_policy": {
		"default":        null,
		"description":    "The role policy to use when leveraging create_role - ignore if leveraging role_arn",
		"module_address": "module.bkun-dgea-maskout-data-copy.module.bkun-dgea-maskout-data-copy",
		"name":           "role_policy",
	},
	"module.bkun-dgea-maskout-data-copy.module.bkun-dgea-maskout-data-copy:sfn_cw_policy_path": {
		"default":        "../../iam/step-function/sfn-cw-policy.json",
		"description":    "Contains policy to keep emr logs on S3 and trasfer role to ec2 instances of emr cluster.",
		"module_address": "module.bkun-dgea-maskout-data-copy.module.bkun-dgea-maskout-data-copy",
		"name":           "sfn_cw_policy_path",
	},
	"module.bkun-dgea-maskout-data-copy.module.bkun-dgea-maskout-data-copy:sfn_ec2_policy_path": {
		"default":        "../../iam/step-function/sfn-ec2-policy.json",
		"description":    "Contains policy to interact EC2 instances via step functions.",
		"module_address": "module.bkun-dgea-maskout-data-copy.module.bkun-dgea-maskout-data-copy",
		"name":           "sfn_ec2_policy_path",
	},
	"module.bkun-dgea-maskout-data-copy.module.bkun-dgea-maskout-data-copy:sfn_emr_policy_path": {
		"default":        "../../iam/step-function/sfn-emr-policy.json",
		"description":    "Contains policy to execute various EMR commands using step functions like createcluster.",
		"module_address": "module.bkun-dgea-maskout-data-copy.module.bkun-dgea-maskout-data-copy",
		"name":           "sfn_emr_policy_path",
	},
	"module.bkun-dgea-maskout-data-copy.module.bkun-dgea-maskout-data-copy:sfn_policy_path": {
		"default":        "../../iam/step-function/policy.json",
		"description":    "Contains generic policy for step function execution and interacting with different services.",
		"module_address": "module.bkun-dgea-maskout-data-copy.module.bkun-dgea-maskout-data-copy",
		"name":           "sfn_policy_path",
	},
	"module.bkun-dgea-maskout-data-copy.module.bkun-dgea-maskout-data-copy:sfn_s3_policy_path": {
		"default":        "../../iam/step-function/sfn-s3-policy.json",
		"description":    "Path to emr ec2 policy",
		"module_address": "module.bkun-dgea-maskout-data-copy.module.bkun-dgea-maskout-data-copy",
		"name":           "sfn_s3_policy_path",
	},
	"module.bkun-dgea-maskout-data-copy.module.bkun-dgea-maskout-data-copy:tags": {
		"default":        {},
		"description":    "A map of tags to apply to resources created by this module",
		"module_address": "module.bkun-dgea-maskout-data-copy.module.bkun-dgea-maskout-data-copy",
		"name":           "tags",
	},
	"module.bkun-dgea-maskout-data-copy:core_instance_count": {
		"default":        2,
		"description":    "",
		"module_address": "module.bkun-dgea-maskout-data-copy",
		"name":           "core_instance_count",
	},
	"module.bkun-dgea-maskout-data-copy:create_sfn_role": {
		"default":        false,
		"description":    "Contains policy to interact EC2 instances via step functions.",
		"module_address": "module.bkun-dgea-maskout-data-copy",
		"name":           "create_sfn_role",
	},
	"module.bkun-dgea-maskout-data-copy:ec2_dynamodb_policy_path": {
		"default":        "../../iam/step-function/ec2-dynamodb-policy.json",
		"description":    "Policies for ec2 instances of emr cluster to write data ingestion status in dynamodb.",
		"module_address": "module.bkun-dgea-maskout-data-copy",
		"name":           "ec2_dynamodb_policy_path",
	},
	"module.bkun-dgea-maskout-data-copy:emr_release_label": {
		"default":        "emr-5.29.0",
		"description":    "",
		"module_address": "module.bkun-dgea-maskout-data-copy",
		"name":           "emr_release_label",
	},
	"module.bkun-dgea-maskout-data-copy:env": {
		"default":        "uat",
		"description":    "Environment for which we are running terrafrom scripts like dev, test, prod",
		"module_address": "module.bkun-dgea-maskout-data-copy",
		"name":           "env",
	},
	"module.bkun-dgea-maskout-data-copy:instance_type": {
		"default":        "m5.xlarge",
		"description":    "",
		"module_address": "module.bkun-dgea-maskout-data-copy",
		"name":           "instance_type",
	},
	"module.bkun-dgea-maskout-data-copy:master_instance_count": {
		"default":        1,
		"description":    "",
		"module_address": "module.bkun-dgea-maskout-data-copy",
		"name":           "master_instance_count",
	},
	"module.bkun-dgea-maskout-data-copy:sfn_cw_policy_path": {
		"default":        "../../iam/step-function/sfn-cw-policy.json",
		"description":    "Contains policy to keep emr logs on S3 and trasfer role to ec2 instances of emr cluster.",
		"module_address": "module.bkun-dgea-maskout-data-copy",
		"name":           "sfn_cw_policy_path",
	},
	"module.bkun-dgea-maskout-data-copy:sfn_ec2_policy_path": {
		"default":        "../../iam/step-function/sfn-ec2-policy.json",
		"description":    "Contains policy to interact EC2 instances via step functions.",
		"module_address": "module.bkun-dgea-maskout-data-copy",
		"name":           "sfn_ec2_policy_path",
	},
	"module.bkun-dgea-maskout-data-copy:sfn_emr_policy_path": {
		"default":        "../../iam/step-function/sfn-emr-policy.json",
		"description":    "Contains policy to execute various EMR commands using step functions like createcluster.",
		"module_address": "module.bkun-dgea-maskout-data-copy",
		"name":           "sfn_emr_policy_path",
	},
	"module.bkun-dgea-maskout-data-copy:sfn_policy_path": {
		"default":        "../../iam/step-function/policy.json",
		"description":    "Contains generic policy for step function execution and interacting with different services.",
		"module_address": "module.bkun-dgea-maskout-data-copy",
		"name":           "sfn_policy_path",
	},
	"module.bkun-dgea-maskout-data-copy:sfn_s3_policy_path": {
		"default":        "../../iam/step-function/sfn-s3-policy.json",
		"description":    "Path to emr ec2 policy",
		"module_address": "module.bkun-dgea-maskout-data-copy",
		"name":           "sfn_s3_policy_path",
	},
	"module.bkun-dgea-maskout-data-copy:sfn_subnet_id": {
		"default":        null,
		"description":    "",
		"module_address": "module.bkun-dgea-maskout-data-copy",
		"name":           "sfn_subnet_id",
	},
	"module.bkun-dgea-maskout-data-copy:tags": {
		"default": {
			"ApplicationID":   "",
			"ApplicationName": "data-processing-emr",
			"ApplicationRole": "",
			"BackupTier":      "NA",
			"BusinessLine":    "Data Governance And Eprise. Arch",
			"CostCenter":      "",
			"Environment":     "uat",
			"ProjectID":       "PRJ0010800",
			"Tier":            "4",
		},
		"description":    "A mapping of tags to assign to all resources",
		"module_address": "module.bkun-dgea-maskout-data-copy",
		"name":           "tags",
	},
	"module.bkun-dgea-trigger-redshift-process.module.bkun-dgea-s3-to-redshift-stepfunction:create_role": {
		"default":        false,
		"description":    "Defaults to false - setting to true will create a role for use to the state machine. Requires role_policy",
		"module_address": "module.bkun-dgea-trigger-redshift-process.module.bkun-dgea-s3-to-redshift-stepfunction",
		"name":           "create_role",
	},
	"module.bkun-dgea-trigger-redshift-process.module.bkun-dgea-s3-to-redshift-stepfunction:create_sfn_role": {
		"default":        false,
		"description":    "Contains policy to interact EC2 instances via step functions.",
		"module_address": "module.bkun-dgea-trigger-redshift-process.module.bkun-dgea-s3-to-redshift-stepfunction",
		"name":           "create_sfn_role",
	},
	"module.bkun-dgea-trigger-redshift-process.module.bkun-dgea-s3-to-redshift-stepfunction:definition": {
		"default":        null,
		"description":    "The ASL code for the state machine",
		"module_address": "module.bkun-dgea-trigger-redshift-process.module.bkun-dgea-s3-to-redshift-stepfunction",
		"name":           "definition",
	},
	"module.bkun-dgea-trigger-redshift-process.module.bkun-dgea-s3-to-redshift-stepfunction:ec2_dynamodb_policy_path": {
		"default":        "../../iam/step-function/ec2-dynamodb-policy.json",
		"description":    "Policies for ec2 instances of emr cluster to write data ingestion status in dynamodb.",
		"module_address": "module.bkun-dgea-trigger-redshift-process.module.bkun-dgea-s3-to-redshift-stepfunction",
		"name":           "ec2_dynamodb_policy_path",
	},
	"module.bkun-dgea-trigger-redshift-process.module.bkun-dgea-s3-to-redshift-stepfunction:env": {
		"default":        "test",
		"description":    "Environment for which we are running terrafrom scripts like dev, test, prod",
		"module_address": "module.bkun-dgea-trigger-redshift-process.module.bkun-dgea-s3-to-redshift-stepfunction",
		"name":           "env",
	},
	"module.bkun-dgea-trigger-redshift-process.module.bkun-dgea-s3-to-redshift-stepfunction:name": {
		"default":        null,
		"description":    "The name to give the state machine",
		"module_address": "module.bkun-dgea-trigger-redshift-process.module.bkun-dgea-s3-to-redshift-stepfunction",
		"name":           "name",
	},
	"module.bkun-dgea-trigger-redshift-process.module.bkun-dgea-s3-to-redshift-stepfunction:role_arn": {
		"default":        null,
		"description":    "Role ARN used for the state machine - ignore if leveraging create_role",
		"module_address": "module.bkun-dgea-trigger-redshift-process.module.bkun-dgea-s3-to-redshift-stepfunction",
		"name":           "role_arn",
	},
	"module.bkun-dgea-trigger-redshift-process.module.bkun-dgea-s3-to-redshift-stepfunction:role_policy": {
		"default":        null,
		"description":    "The role policy to use when leveraging create_role - ignore if leveraging role_arn",
		"module_address": "module.bkun-dgea-trigger-redshift-process.module.bkun-dgea-s3-to-redshift-stepfunction",
		"name":           "role_policy",
	},
	"module.bkun-dgea-trigger-redshift-process.module.bkun-dgea-s3-to-redshift-stepfunction:sfn_cw_policy_path": {
		"default":        "../../iam/step-function/sfn-cw-policy.json",
		"description":    "Contains policy to keep emr logs on S3 and trasfer role to ec2 instances of emr cluster.",
		"module_address": "module.bkun-dgea-trigger-redshift-process.module.bkun-dgea-s3-to-redshift-stepfunction",
		"name":           "sfn_cw_policy_path",
	},
	"module.bkun-dgea-trigger-redshift-process.module.bkun-dgea-s3-to-redshift-stepfunction:sfn_ec2_policy_path": {
		"default":        "../../iam/step-function/sfn-ec2-policy.json",
		"description":    "Contains policy to interact EC2 instances via step functions.",
		"module_address": "module.bkun-dgea-trigger-redshift-process.module.bkun-dgea-s3-to-redshift-stepfunction",
		"name":           "sfn_ec2_policy_path",
	},
	"module.bkun-dgea-trigger-redshift-process.module.bkun-dgea-s3-to-redshift-stepfunction:sfn_emr_policy_path": {
		"default":        "../../iam/step-function/sfn-emr-policy.json",
		"description":    "Contains policy to execute various EMR commands using step functions like createcluster.",
		"module_address": "module.bkun-dgea-trigger-redshift-process.module.bkun-dgea-s3-to-redshift-stepfunction",
		"name":           "sfn_emr_policy_path",
	},
	"module.bkun-dgea-trigger-redshift-process.module.bkun-dgea-s3-to-redshift-stepfunction:sfn_policy_path": {
		"default":        "../../iam/step-function/policy.json",
		"description":    "Contains generic policy for step function execution and interacting with different services.",
		"module_address": "module.bkun-dgea-trigger-redshift-process.module.bkun-dgea-s3-to-redshift-stepfunction",
		"name":           "sfn_policy_path",
	},
	"module.bkun-dgea-trigger-redshift-process.module.bkun-dgea-s3-to-redshift-stepfunction:sfn_s3_policy_path": {
		"default":        "../../iam/step-function/sfn-s3-policy.json",
		"description":    "Path to emr ec2 policy",
		"module_address": "module.bkun-dgea-trigger-redshift-process.module.bkun-dgea-s3-to-redshift-stepfunction",
		"name":           "sfn_s3_policy_path",
	},
	"module.bkun-dgea-trigger-redshift-process.module.bkun-dgea-s3-to-redshift-stepfunction:tags": {
		"default":        {},
		"description":    "A map of tags to apply to resources created by this module",
		"module_address": "module.bkun-dgea-trigger-redshift-process.module.bkun-dgea-s3-to-redshift-stepfunction",
		"name":           "tags",
	},
	"module.bkun-dgea-trigger-redshift-process:core_instance_count": {
		"default":        2,
		"description":    "",
		"module_address": "module.bkun-dgea-trigger-redshift-process",
		"name":           "core_instance_count",
	},
	"module.bkun-dgea-trigger-redshift-process:create_sfn_role": {
		"default":        false,
		"description":    "Contains policy to interact EC2 instances via step functions.",
		"module_address": "module.bkun-dgea-trigger-redshift-process",
		"name":           "create_sfn_role",
	},
	"module.bkun-dgea-trigger-redshift-process:ec2_dynamodb_policy_path": {
		"default":        "../../iam/step-function/ec2-dynamodb-policy.json",
		"description":    "Policies for ec2 instances of emr cluster to write data ingestion status in dynamodb.",
		"module_address": "module.bkun-dgea-trigger-redshift-process",
		"name":           "ec2_dynamodb_policy_path",
	},
	"module.bkun-dgea-trigger-redshift-process:ec2_key_name": {
		"default":        "DP-UAT-EMR",
		"description":    "",
		"module_address": "module.bkun-dgea-trigger-redshift-process",
		"name":           "ec2_key_name",
	},
	"module.bkun-dgea-trigger-redshift-process:emr_release_label": {
		"default":        "emr-5.29.0",
		"description":    "",
		"module_address": "module.bkun-dgea-trigger-redshift-process",
		"name":           "emr_release_label",
	},
	"module.bkun-dgea-trigger-redshift-process:env": {
		"default":        "uat",
		"description":    "Environment for which we are running terrafrom scripts like dev, test, prod",
		"module_address": "module.bkun-dgea-trigger-redshift-process",
		"name":           "env",
	},
	"module.bkun-dgea-trigger-redshift-process:instance_type": {
		"default":        "m5.xlarge",
		"description":    "",
		"module_address": "module.bkun-dgea-trigger-redshift-process",
		"name":           "instance_type",
	},
	"module.bkun-dgea-trigger-redshift-process:master_instance_count": {
		"default":        1,
		"description":    "",
		"module_address": "module.bkun-dgea-trigger-redshift-process",
		"name":           "master_instance_count",
	},
	"module.bkun-dgea-trigger-redshift-process:sfn_cw_policy_path": {
		"default":        "../../iam/step-function/sfn-cw-policy.json",
		"description":    "Contains policy to keep emr logs on S3 and trasfer role to ec2 instances of emr cluster.",
		"module_address": "module.bkun-dgea-trigger-redshift-process",
		"name":           "sfn_cw_policy_path",
	},
	"module.bkun-dgea-trigger-redshift-process:sfn_ec2_policy_path": {
		"default":        "../../iam/step-function/sfn-ec2-policy.json",
		"description":    "Contains policy to interact EC2 instances via step functions.",
		"module_address": "module.bkun-dgea-trigger-redshift-process",
		"name":           "sfn_ec2_policy_path",
	},
	"module.bkun-dgea-trigger-redshift-process:sfn_emr_policy_path": {
		"default":        "../../iam/step-function/sfn-emr-policy.json",
		"description":    "Contains policy to execute various EMR commands using step functions like createcluster.",
		"module_address": "module.bkun-dgea-trigger-redshift-process",
		"name":           "sfn_emr_policy_path",
	},
	"module.bkun-dgea-trigger-redshift-process:sfn_policy_path": {
		"default":        "../../iam/step-function/policy.json",
		"description":    "Contains generic policy for step function execution and interacting with different services.",
		"module_address": "module.bkun-dgea-trigger-redshift-process",
		"name":           "sfn_policy_path",
	},
	"module.bkun-dgea-trigger-redshift-process:sfn_s3_policy_path": {
		"default":        "../../iam/step-function/sfn-s3-policy.json",
		"description":    "Path to emr ec2 policy",
		"module_address": "module.bkun-dgea-trigger-redshift-process",
		"name":           "sfn_s3_policy_path",
	},
	"module.bkun-dgea-trigger-redshift-process:sfn_subnet_id": {
		"default":        null,
		"description":    "",
		"module_address": "module.bkun-dgea-trigger-redshift-process",
		"name":           "sfn_subnet_id",
	},
	"module.bkun-dgea-trigger-redshift-process:tags": {
		"default": {
			"ApplicationID":   "",
			"ApplicationName": "data-processing-emr",
			"ApplicationRole": "",
			"BackupTier":      "NA",
			"BusinessLine":    "Data Governance And Eprise. Arch",
			"CostCenter":      "",
			"Environment":     "uat",
			"ProjectID":       "PRJ0010800",
			"Tier":            "4",
		},
		"description":    "A mapping of tags to assign to all resources",
		"module_address": "module.bkun-dgea-trigger-redshift-process",
		"name":           "tags",
	},
	"partition_key": {
		"default":        "id",
		"description":    "The attribute to use as the hash (partition) key. Must also be defined as an attribute",
		"module_address": "",
		"name":           "partition_key",
	},
	"ports": {
		"default": {
			"5439": [
				"10.19.0.0/16",
				"192.168.104.0/21",
				"192.168.200.0/21",
				"10.0.0.0/8",
				"10.13.32.0/20",
				"10.13.35.134/32",
				"10.13.35.135/32",
				"10.44.0.0/16",
				"10.39.0.0/16",
			],
		},
		"description":    "",
		"module_address": "",
		"name":           "ports",
	},
	"redshift_subnets": {
		"default": [
			"subnet-0a80d66c576c8407a",
		],
		"description":    "add discription here",
		"module_address": "",
		"name":           "redshift_subnets",
	},
	"s3_key": {
		"default":        "terraform/lambda",
		"description":    "Source bucket to store lambda function code and other required scripts",
		"module_address": "",
		"name":           "s3_key",
	},
	"s3_policy_path": {
		"default":        "./iam/emr-role/s3.json",
		"description":    "Policies for ec2 instances of emr cluster to s3.",
		"module_address": "",
		"name":           "s3_policy_path",
	},
	"s3_source_bucket_policy_path": {
		"default":        "s3/bkun-dgea-dp-source-artifacts/source_bucket_policy.json",
		"description":    "Bucket Policy to be applied to the bucket",
		"module_address": "",
		"name":           "s3_source_bucket_policy_path",
	},
	"security_group_ids": {
		"default": [
			"sg-07378ea7f9a52d932",
		],
		"description":    "List of security group ids when Lambda Function should run in the VPC.",
		"module_address": "",
		"name":           "security_group_ids",
	},
	"sfn_cw_policy_path": {
		"default":        "./iam/step-function/sfn-cw-policy.json",
		"description":    "Cloudwatch policy to create log streams for step functions to keep data migration log during unredacted-to-redacted data transfer.",
		"module_address": "",
		"name":           "sfn_cw_policy_path",
	},
	"sfn_ec2_policy_path": {
		"default":        "./iam/step-function/sfn-ec2-policy.json",
		"description":    "Path to emr ec2 policy",
		"module_address": "",
		"name":           "sfn_ec2_policy_path",
	},
	"sfn_emr_policy_path": {
		"default":        "./iam/step-function/sfn-emr-policy.json",
		"description":    "Path to emr ec2 policy",
		"module_address": "",
		"name":           "sfn_emr_policy_path",
	},
	"sfn_policy_path": {
		"default":        "./iam/step-function/policy.json",
		"description":    "Path to policy json",
		"module_address": "",
		"name":           "sfn_policy_path",
	},
	"sfn_s3_policy_path": {
		"default":        "./iam/step-function/sfn-s3-policy.json",
		"description":    "Path to emr ec2 policy",
		"module_address": "",
		"name":           "sfn_s3_policy_path",
	},
	"sfn_subnet_id": {
		"default":        "subnet-07911106ea5728129",
		"description":    "Specify the list of subnet groups in which we want to create EMR cluster.",
		"module_address": "",
		"name":           "sfn_subnet_id",
	},
	"subnet_ids": {
		"default": [
			"subnet-045d4ee14b4857ce8",
		],
		"description":    "List of subnet ids when Lambda Function should run in the VPC. Usually private or intra subnets.",
		"module_address": "",
		"name":           "subnet_ids",
	},
	"tags": {
		"default": {
			"ApplicationID":   "0",
			"ApplicationName": "Data-Processing",
			"ApplicationRole": "",
			"BackupTier":      "NA",
			"BusinessLine":    "Data Governance And Eprise. Arch",
			"CostCenter":      "1006703",
			"Environment":     "Test QA",
			"ProjectID":       "PRJ0010800",
			"Tier":            "Not Applicable",
		},
		"description":    "A mapping of tags to assign to all resources",
		"module_address": "",
		"name":           "tags",
	},
	"vpc_id": {
		"default":        "vpc-0edee2f91f115d6b5",
		"description":    "VPC where the Redshift cluster would be launched",
		"module_address": "",
		"name":           "vpc_id",
	},
}

outputs = {
	"module.bkun-dgea-check-data-migration-emr-cluster-availability.module.bkun-dgea-check-data-migration-emr-cluster-availability:lambda_arn": {
		"depends_on":     [],
		"description":    "",
		"module_address": "module.bkun-dgea-check-data-migration-emr-cluster-availability.module.bkun-dgea-check-data-migration-emr-cluster-availability",
		"name":           "lambda_arn",
		"sensitive":      false,
		"value": {
			"references": [
				"aws_lambda_function.this.arn",
				"aws_lambda_function.this",
			],
		},
	},
	"module.bkun-dgea-datamart-conf-redacted.module.bkun-dgea-datamart-conf-redacted:bucket_name_id": {
		"depends_on":     [],
		"description":    "The name of the primary bucket.",
		"module_address": "module.bkun-dgea-datamart-conf-redacted.module.bkun-dgea-datamart-conf-redacted",
		"name":           "bucket_name_id",
		"sensitive":      false,
		"value": {
			"references": [
				"aws_s3_bucket.this.id",
				"aws_s3_bucket.this",
			],
		},
	},
	"module.bkun-dgea-datamart-raw-redacted.module.bkun-dgea-dp-source-artifacts:bucket_name_id": {
		"depends_on":     [],
		"description":    "The name of the primary bucket.",
		"module_address": "module.bkun-dgea-datamart-raw-redacted.module.bkun-dgea-dp-source-artifacts",
		"name":           "bucket_name_id",
		"sensitive":      false,
		"value": {
			"references": [
				"aws_s3_bucket.this.id",
				"aws_s3_bucket.this",
			],
		},
	},
}

module_calls = {
	"bkun-dgea-check-data-migration-emr-cluster-availability": {
		"config": {
			"ec2_policy_path": {
				"references": [
					"var.ec2_policy_path",
				],
			},
			"emr_policy_path": {
				"references": [
					"var.emr_policy_path",
				],
			},
			"env": {
				"references": [
					"var.env",
				],
			},
			"security_group_ids": {
				"references": [
					"var.security_group_ids",
				],
			},
			"subnet_ids": {
				"references": [
					"var.subnet_ids",
				],
			},
		},
		"count":              {},
		"depends_on":         [],
		"for_each":           {},
		"module_address":     "",
		"name":               "bkun-dgea-check-data-migration-emr-cluster-availability",
		"source":             "./lambda-function/bkun-dgea-check-data-migration-emr-cluster-availability/",
		"version_constraint": "",
	},
	"bkun-dgea-copy-flat-file-maskout-data": {
		"config": {
			"create_sfn_role": {
				"constant_value": false,
			},
			"env": {
				"references": [
					"var.env",
				],
			},
			"tags": {
				"references": [
					"var.tags",
				],
			},
		},
		"count": {},
		"depends_on": [
			"module.bkun-dgea-emr-setup-stepfunction",
		],
		"for_each":           {},
		"module_address":     "",
		"name":               "bkun-dgea-copy-flat-file-maskout-data",
		"source":             "./step-function/bkun-dgea-copy-flat-file-maskout-data",
		"version_constraint": "",
	},
	"bkun-dgea-create-emr-roles": {
		"config": {
			"ec2_dynamodb_policy_path": {
				"references": [
					"var.ec2_dynamodb_policy_path",
				],
			},
			"ec2_kms_policy_path": {
				"references": [
					"var.ec2_kms_policy_path",
				],
			},
			"env": {
				"references": [
					"var.env",
				],
			},
			"generic_policy_path": {
				"references": [
					"var.generic_policy_path",
				],
			},
			"s3_policy_path": {
				"references": [
					"var.s3_policy_path",
				],
			},
			"tags": {
				"references": [
					"var.tags",
				],
			},
		},
		"count":              {},
		"depends_on":         [],
		"for_each":           {},
		"module_address":     "",
		"name":               "bkun-dgea-create-emr-roles",
		"source":             "./iam/emr-role",
		"version_constraint": "",
	},
	"bkun-dgea-datamart-conf-redacted": {
		"config": {
			"base_path": {
				"references": [
					"var.base_path",
				],
			},
			"create_kms_key": {
				"constant_value": true,
			},
			"env": {
				"references": [
					"var.env",
				],
			},
			"s3_source_bucket_policy_path": {
				"references": [
					"var.s3_source_bucket_policy_path",
				],
			},
		},
		"count": {},
		"depends_on": [
			"module.bkun-dgea-create-emr-roles",
		],
		"for_each":           {},
		"module_address":     "",
		"name":               "bkun-dgea-datamart-conf-redacted",
		"source":             "./s3/bkun-dgea-datamart-conf-redacted",
		"version_constraint": "",
	},
	"bkun-dgea-datamart-raw-redacted": {
		"config": {
			"base_path": {
				"references": [
					"var.base_path",
				],
			},
			"create_kms_key": {
				"constant_value": true,
			},
			"env": {
				"references": [
					"var.env",
				],
			},
			"s3_source_bucket_policy_path": {
				"references": [
					"var.s3_source_bucket_policy_path",
				],
			},
		},
		"count": {},
		"depends_on": [
			"module.bkun-dgea-create-emr-roles",
		],
		"for_each":           {},
		"module_address":     "",
		"name":               "bkun-dgea-datamart-raw-redacted",
		"source":             "./s3/bkun-dgea-datamart-raw-redacted",
		"version_constraint": "",
	},
	"bkun-dgea-ddl-creation-step-function": {
		"config": {
			"create_sfn_role": {
				"constant_value": false,
			},
			"env": {
				"references": [
					"var.env",
				],
			},
			"sfn_subnet_id": {
				"references": [
					"var.sfn_subnet_id",
				],
			},
			"tags": {
				"references": [
					"var.tags",
				],
			},
		},
		"count": {},
		"depends_on": [
			"module.bkun-dgea-emr-setup-stepfunction",
		],
		"for_each":           {},
		"module_address":     "",
		"name":               "bkun-dgea-ddl-creation-step-function",
		"source":             "./step-function/bkun-dgea-ddl-creation-step-function",
		"version_constraint": "",
	},
	"bkun-dgea-emr-setup-stepfunction": {
		"config": {
			"create_sfn_role": {
				"references": [
					"var.create_sfn_role",
				],
			},
			"ec2_dynamodb_policy_path": {
				"references": [
					"var.ec2_dynamodb_policy_path",
				],
			},
			"env": {
				"references": [
					"var.env",
				],
			},
			"sfn_cw_policy_path": {
				"references": [
					"var.sfn_cw_policy_path",
				],
			},
			"sfn_ec2_policy_path": {
				"references": [
					"var.sfn_ec2_policy_path",
				],
			},
			"sfn_emr_policy_path": {
				"references": [
					"var.sfn_emr_policy_path",
				],
			},
			"sfn_policy_path": {
				"references": [
					"var.sfn_policy_path",
				],
			},
			"sfn_s3_policy_path": {
				"references": [
					"var.sfn_s3_policy_path",
				],
			},
			"sfn_subnet_id": {
				"references": [
					"var.sfn_subnet_id",
				],
			},
			"tags": {
				"references": [
					"var.tags",
				],
			},
		},
		"count": {},
		"depends_on": [
			"module.bkun-dgea-create-emr-roles",
		],
		"for_each":           {},
		"module_address":     "",
		"name":               "bkun-dgea-emr-setup-stepfunction",
		"source":             "./step-function/bkun-dgea-emr-setup-stepfunction/",
		"version_constraint": "",
	},
	"bkun-dgea-etl-stepfunction": {
		"config": {
			"create_sfn_role": {
				"constant_value": false,
			},
			"env": {
				"references": [
					"var.env",
				],
			},
			"sfn_subnet_id": {
				"references": [
					"var.sfn_subnet_id",
				],
			},
			"tags": {
				"references": [
					"var.tags",
				],
			},
		},
		"count": {},
		"depends_on": [
			"module.bkun-dgea-emr-setup-stepfunction",
		],
		"for_each":           {},
		"module_address":     "",
		"name":               "bkun-dgea-etl-stepfunction",
		"source":             "./step-function/bkun-dgea-etl-stepfunction",
		"version_constraint": "",
	},
	"bkun-dgea-maskout-data-copy": {
		"config": {
			"create_sfn_role": {
				"constant_value": false,
			},
			"env": {
				"references": [
					"var.env",
				],
			},
			"sfn_subnet_id": {
				"references": [
					"var.sfn_subnet_id",
				],
			},
			"tags": {
				"references": [
					"var.tags",
				],
			},
		},
		"count": {},
		"depends_on": [
			"module.bkun-dgea-emr-setup-stepfunction",
		],
		"for_each":           {},
		"module_address":     "",
		"name":               "bkun-dgea-maskout-data-copy",
		"source":             "./step-function/bkun-dgea-maskout-data-copy",
		"version_constraint": "",
	},
	"bkun-dgea-trigger-redshift-process": {
		"config": {
			"create_sfn_role": {
				"constant_value": false,
			},
			"env": {
				"references": [
					"var.env",
				],
			},
			"sfn_subnet_id": {
				"references": [
					"var.sfn_subnet_id",
				],
			},
			"tags": {
				"references": [
					"var.tags",
				],
			},
		},
		"count": {},
		"depends_on": [
			"module.bkun-dgea-emr-setup-stepfunction",
		],
		"for_each":           {},
		"module_address":     "",
		"name":               "bkun-dgea-trigger-redshift-process",
		"source":             "./step-function/bkun-dgea-trigger-redshift-process",
		"version_constraint": "",
	},
	"module.bkun-dgea-check-data-migration-emr-cluster-availability:bkun-dgea-check-data-migration-emr-cluster-availability": {
		"config": {
			"environment_vars": {
				"references": [
					"var.env",
				],
			},
			"handler": {
				"constant_value": "lambda_function.lambda_handler",
			},
			"name": {
				"references": [
					"var.env",
				],
			},
			"role_arn": {
				"references": [
					"aws_iam_role.iam_for_lambda.arn",
					"aws_iam_role.iam_for_lambda",
				],
			},
			"runtime": {
				"constant_value": "python3.7",
			},
			"s3_bucket": {
				"references": [
					"var.env",
				],
			},
			"s3_key": {
				"references": [
					"var.s3_key",
				],
			},
			"security_group_ids": {
				"references": [
					"var.security_group_ids",
				],
			},
			"subnet_ids": {
				"references": [
					"var.subnet_ids",
				],
			},
			"tags": {
				"references": [
					"var.tags",
					"local.tags",
				],
			},
			"timeout": {
				"constant_value": 300,
			},
		},
		"count":              {},
		"depends_on":         [],
		"for_each":           {},
		"module_address":     "module.bkun-dgea-check-data-migration-emr-cluster-availability",
		"name":               "bkun-dgea-check-data-migration-emr-cluster-availability",
		"source":             "tfe.terraform.tools.c9bku.net/BankUnited-Community/cndp-lambda-function-python/aws",
		"version_constraint": "0.0.1",
	},
	"module.bkun-dgea-copy-flat-file-maskout-data:bkun-dgea-copy-flat-file-maskout-data": {
		"config": {
			"create_sfn_role": {
				"references": [
					"var.create_sfn_role",
				],
			},
			"definition": {
				"references": [
					"var.env",
					"var.env",
					"var.env",
					"var.env",
					"var.env",
					"var.emr_release_label",
					"var.env",
					"var.env",
					"var.env",
					"var.env",
					"var.env",
					"var.tags[\"ApplicationID\"]",
					"var.tags",
					"var.tags[\"ApplicationName\"]",
					"var.tags",
					"var.tags[\"ApplicationRole\"]",
					"var.tags",
					"var.tags[\"BusinessLine\"]",
					"var.tags",
					"var.env",
					"var.tags[\"CostCenter\"]",
					"var.tags",
					"var.tags[\"Environment\"]",
					"var.tags",
					"var.tags[\"ProjectID\"]",
					"var.tags",
					"var.tags[\"Tier\"]",
					"var.tags",
					"var.tags[\"BackupTier\"]",
					"var.tags",
					"data.aws_caller_identity.current.account_id",
					"data.aws_caller_identity.current",
					"data.aws_region.current.name",
					"data.aws_region.current",
					"var.env",
					"var.ec2_key_name",
					"var.subnet_id",
					"var.env",
					"var.master_instance_count",
					"var.env",
					"var.env",
				],
			},
			"env": {
				"references": [
					"var.env",
				],
			},
			"name": {
				"references": [
					"var.env",
				],
			},
			"role_arn": {
				"references": [
					"data.aws_caller_identity.current.account_id",
					"data.aws_caller_identity.current",
					"var.env",
				],
			},
			"tags": {
				"references": [
					"var.tags",
					"local.tags",
				],
			},
		},
		"count":              {},
		"depends_on":         [],
		"for_each":           {},
		"module_address":     "module.bkun-dgea-copy-flat-file-maskout-data",
		"name":               "bkun-dgea-copy-flat-file-maskout-data",
		"source":             "tfe.terraform.tools.c9bku.net/BankUnited-Community/cndp-step-function/aws",
		"version_constraint": "0.0.1",
	},
	"module.bkun-dgea-datamart-conf-redacted:bkun-dgea-datamart-conf-redacted": {
		"config": {
			"bucket_name": {
				"references": [
					"var.env",
				],
			},
			"create_kms_key": {
				"references": [
					"var.create_kms_key",
				],
			},
			"s3_bucket_policy": {
				"references": [
					"var.s3_source_bucket_policy_path",
					"var.env",
				],
			},
			"tags": {
				"references": [
					"var.tags",
					"var.env",
				],
			},
		},
		"count":              {},
		"depends_on":         [],
		"for_each":           {},
		"module_address":     "module.bkun-dgea-datamart-conf-redacted",
		"name":               "bkun-dgea-datamart-conf-redacted",
		"source":             "tfe.terraform.tools.c9bku.net/BankUnited-Community/cndp-s3/aws",
		"version_constraint": "0.0.2",
	},
	"module.bkun-dgea-datamart-raw-redacted:bkun-dgea-dp-source-artifacts": {
		"config": {
			"bucket_name": {
				"references": [
					"var.env",
				],
			},
			"create_kms_key": {
				"references": [
					"var.create_kms_key",
				],
			},
			"s3_bucket_policy": {
				"references": [
					"var.s3_source_bucket_policy_path",
					"var.env",
				],
			},
			"tags": {
				"references": [
					"var.tags",
					"var.env",
				],
			},
		},
		"count":              {},
		"depends_on":         [],
		"for_each":           {},
		"module_address":     "module.bkun-dgea-datamart-raw-redacted",
		"name":               "bkun-dgea-dp-source-artifacts",
		"source":             "tfe.terraform.tools.c9bku.net/BankUnited-Community/cndp-s3/aws",
		"version_constraint": "0.0.2",
	},
	"module.bkun-dgea-ddl-creation-step-function:bkun-dgea-ddl-creation-step-function": {
		"config": {
			"create_sfn_role": {
				"references": [
					"var.create_sfn_role",
				],
			},
			"definition": {
				"references": [
					"var.env",
					"data.aws_region.current.name",
					"data.aws_region.current",
					"data.aws_caller_identity.current.account_id",
					"data.aws_caller_identity.current",
					"var.env",
					"var.env",
				],
			},
			"ec2_dynamodb_policy_path": {
				"references": [
					"var.ec2_dynamodb_policy_path",
				],
			},
			"env": {
				"references": [
					"var.env",
				],
			},
			"name": {
				"references": [
					"var.env",
				],
			},
			"role_arn": {
				"references": [
					"data.aws_caller_identity.current.account_id",
					"data.aws_caller_identity.current",
					"var.env",
				],
			},
			"sfn_cw_policy_path": {
				"references": [
					"var.sfn_cw_policy_path",
				],
			},
			"sfn_ec2_policy_path": {
				"references": [
					"var.sfn_ec2_policy_path",
				],
			},
			"sfn_emr_policy_path": {
				"references": [
					"var.sfn_emr_policy_path",
				],
			},
			"sfn_policy_path": {
				"references": [
					"var.sfn_policy_path",
				],
			},
			"sfn_s3_policy_path": {
				"references": [
					"var.sfn_s3_policy_path",
				],
			},
			"tags": {
				"references": [
					"var.tags",
					"local.tags",
				],
			},
		},
		"count":              {},
		"depends_on":         [],
		"for_each":           {},
		"module_address":     "module.bkun-dgea-ddl-creation-step-function",
		"name":               "bkun-dgea-ddl-creation-step-function",
		"source":             "tfe.terraform.tools.c9bku.net/BankUnited-Community/cndp-step-function/aws",
		"version_constraint": "0.0.1",
	},
	"module.bkun-dgea-emr-setup-stepfunction:bkun-dgea-etl-emr-cluster-setup-stepfunction": {
		"config": {
			"create_sfn_role": {
				"references": [
					"var.create_sfn_role",
				],
			},
			"definition": {
				"references": [
					"var.env",
					"var.env",
					"var.emr_release_label",
					"var.env",
					"var.env",
					"var.env",
					"var.env",
					"var.env",
					"var.tags[\"ApplicationID\"]",
					"var.tags",
					"var.tags[\"ApplicationName\"]",
					"var.tags",
					"var.tags[\"ApplicationRole\"]",
					"var.tags",
					"var.tags[\"BusinessLine\"]",
					"var.tags",
					"var.env",
					"var.tags[\"CostCenter\"]",
					"var.tags",
					"var.tags[\"Environment\"]",
					"var.tags",
					"var.tags[\"ProjectID\"]",
					"var.tags",
					"var.tags[\"Tier\"]",
					"var.tags",
					"var.tags[\"BackupTier\"]",
					"var.tags",
					"data.aws_caller_identity.current.account_id",
					"data.aws_caller_identity.current",
					"data.aws_region.current.name",
					"data.aws_region.current",
					"var.env",
					"var.sfn_subnet_id",
					"var.env",
					"var.env",
				],
			},
			"ec2_dynamodb_policy_path": {
				"references": [
					"var.ec2_dynamodb_policy_path",
				],
			},
			"env": {
				"references": [
					"var.env",
				],
			},
			"name": {
				"references": [
					"var.env",
				],
			},
			"role_arn": {
				"references": [
					"data.aws_caller_identity.current.account_id",
					"data.aws_caller_identity.current",
					"var.env",
				],
			},
			"sfn_cw_policy_path": {
				"references": [
					"var.sfn_cw_policy_path",
				],
			},
			"sfn_ec2_policy_path": {
				"references": [
					"var.sfn_ec2_policy_path",
				],
			},
			"sfn_emr_policy_path": {
				"references": [
					"var.sfn_emr_policy_path",
				],
			},
			"sfn_policy_path": {
				"references": [
					"var.sfn_policy_path",
				],
			},
			"sfn_s3_policy_path": {
				"references": [
					"var.sfn_s3_policy_path",
				],
			},
			"tags": {
				"references": [
					"var.tags",
					"local.tags",
				],
			},
		},
		"count":              {},
		"depends_on":         [],
		"for_each":           {},
		"module_address":     "module.bkun-dgea-emr-setup-stepfunction",
		"name":               "bkun-dgea-etl-emr-cluster-setup-stepfunction",
		"source":             "tfe.terraform.tools.c9bku.net/BankUnited-Community/cndp-step-function/aws",
		"version_constraint": "0.0.1",
	},
	"module.bkun-dgea-etl-stepfunction:bkun-dgea-etl-stepfunction": {
		"config": {
			"create_sfn_role": {
				"references": [
					"var.create_sfn_role",
				],
			},
			"definition": {
				"references": [
					"var.env",
					"data.aws_region.current.name",
					"data.aws_region.current",
					"data.aws_caller_identity.current.account_id",
					"data.aws_caller_identity.current",
					"var.env",
				],
			},
			"env": {
				"references": [
					"var.env",
				],
			},
			"name": {
				"references": [
					"var.env",
				],
			},
			"role_arn": {
				"references": [
					"data.aws_caller_identity.current.account_id",
					"data.aws_caller_identity.current",
					"var.env",
				],
			},
			"tags": {
				"references": [
					"var.tags",
					"local.tags",
				],
			},
		},
		"count":              {},
		"depends_on":         [],
		"for_each":           {},
		"module_address":     "module.bkun-dgea-etl-stepfunction",
		"name":               "bkun-dgea-etl-stepfunction",
		"source":             "tfe.terraform.tools.c9bku.net/BankUnited-Community/cndp-step-function/aws",
		"version_constraint": "0.0.1",
	},
	"module.bkun-dgea-maskout-data-copy:bkun-dgea-maskout-data-copy": {
		"config": {
			"create_sfn_role": {
				"references": [
					"var.create_sfn_role",
				],
			},
			"definition": {
				"references": [
					"var.env",
					"var.env",
					"data.aws_region.current.name",
					"data.aws_region.current",
					"data.aws_caller_identity.current.account_id",
					"data.aws_caller_identity.current",
					"var.env",
					"var.env",
				],
			},
			"env": {
				"references": [
					"var.env",
				],
			},
			"name": {
				"references": [
					"var.env",
				],
			},
			"role_arn": {
				"references": [
					"data.aws_caller_identity.current.account_id",
					"data.aws_caller_identity.current",
					"var.env",
				],
			},
			"tags": {
				"references": [
					"var.tags",
					"local.tags",
				],
			},
		},
		"count":              {},
		"depends_on":         [],
		"for_each":           {},
		"module_address":     "module.bkun-dgea-maskout-data-copy",
		"name":               "bkun-dgea-maskout-data-copy",
		"source":             "tfe.terraform.tools.c9bku.net/BankUnited-Community/cndp-step-function/aws",
		"version_constraint": "0.0.1",
	},
	"module.bkun-dgea-trigger-redshift-process:bkun-dgea-s3-to-redshift-stepfunction": {
		"config": {
			"create_sfn_role": {
				"references": [
					"var.create_sfn_role",
				],
			},
			"definition": {
				"references": [
					"var.env",
					"data.aws_region.current.name",
					"data.aws_region.current",
					"data.aws_caller_identity.current.account_id",
					"data.aws_caller_identity.current",
					"var.env",
				],
			},
			"env": {
				"references": [
					"var.env",
				],
			},
			"name": {
				"references": [
					"var.env",
				],
			},
			"role_arn": {
				"references": [
					"data.aws_caller_identity.current.account_id",
					"data.aws_caller_identity.current",
					"var.env",
				],
			},
			"tags": {
				"references": [
					"var.tags",
					"local.tags",
				],
			},
		},
		"count":              {},
		"depends_on":         [],
		"for_each":           {},
		"module_address":     "module.bkun-dgea-trigger-redshift-process",
		"name":               "bkun-dgea-s3-to-redshift-stepfunction",
		"source":             "tfe.terraform.tools.c9bku.net/BankUnited-Community/cndp-step-function/aws",
		"version_constraint": "0.0.1",
	},
}

strip_index = func(addr) {
	s = strings.split(addr, ".")
	for s as i, v {
		s[i] = strings.split(v, "[")[0]
	}

	return strings.join(s, ".")
}
